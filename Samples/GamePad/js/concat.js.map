{"version":3,"sources":["/prj/user/Main.tonyu","/prj/user/Player.tonyu"],"names":[],"mappings":"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","sourcesContent":["// ゲームパッドの判定にはJavaScriptのGamepad APIを利用しています\r\n\r\n// Gamepad APIに対応している環境は\r\n// ゲームパッド４台接続まで対応している模様\r\n// ５台目は無視するブラウザが多い（PC版Firefoxでは５台目も取得できた）\r\n\r\n$Screen.resize(640, 480); // 画面サイズ変更\r\n\r\n// Playerを16人用意\r\nfor (var i=0; i<16; i++) {\r\n    new Player {\r\n        playerNo : i, // ゲームパッド番号を渡す\r\n        x : (i%4+1)/5*$screenWidth,\r\n        y : (trunc(i/4)+1)/5*$screenHeight,\r\n        p : $pat_base+i\r\n    };\r\n}\r\n\r\nx = 0;\r\ny = 0;\r\nalign = \"left\";\r\nwhile (true) {\r\n    if ($GamePad.available) {\r\n        // 接続中のゲームパッドの数\r\n        text = \"padsCount : \"+$GamePad.padsCount();\r\n    } else {\r\n        text = \"このデバイス・ブラウザはGamepad APIに対応していません\";\r\n    }\r\n    update();\r\n}\r\n\r\n","// １つのキャラごとに１つのゲームパッドを担当する\r\n\r\nalpha = 0; // 最初は非表示\r\nNEUTRAL_AXIS = 0.15; // 軸が傾いても中立として扱う角度(0.0～1.0)\r\n\r\n// playerNo : この値のゲームパッド番号を監視する\r\ngamePad = $GamePad.get(playerNo);\r\n\r\nanalogMode = true;\r\nwhile (true) {\r\n    scaleX = 1;\r\n    scaleY = 1;\r\n    \r\n    // ゲームパッドが接続されているかチェック\r\n    connected = gamePad.isConnected();\r\n    \r\n    if (connected) { // 接続されている\r\n        \r\n        // ボタンが押されているか取得 //\r\n        // ゲームパッドの0,1,2,3番目のボタン\r\n        if (gamePad.getButton(0)) {scaleX = 1.5; scaleY = 1.5;}\r\n        if (gamePad.getButton(1)) alpha = 127;\r\n        if (gamePad.getButton(2)) analogMode = true;\r\n        if (gamePad.getButton(3)) analogMode = false;\r\n        // ゲームパッドの6,7番目のボタン(アナログ値取得)\r\n        rotation -= 5 * gamePad.getButtonValue(6);\r\n        rotation += 5 * gamePad.getButtonValue(7);\r\n        \r\n        if (analogMode) {\r\n            // アナログ移動\r\n            // ゲームパッドの0,1番目の軸（横軸・縦軸）\r\n            vx = gamePad.getAxis(0);\r\n            vy = gamePad.getAxis(1);\r\n            // アナログスティックは中立でも少し傾いているのである程度傾けると動くようにする\r\n            if (dist(vx,vy) >= NEUTRAL_AXIS) {\r\n                // 斜め移動のとき移動が速くならないようにする\r\n                var ang = atanxy(vx, vy);\r\n                var maxvx = cos(ang);\r\n                var maxvy = sin(ang);\r\n                vx = clamp(vx, -maxvx, maxvx);\r\n                vy = clamp(vy, -maxvy, maxvy);\r\n                x += vx * 3;\r\n                y += vy * 3;\r\n            }\r\n        } else {\r\n            // 単純な移動（デジタル移動）\r\n            // ゲームパッドの左キー or 14番目のボタン\r\n            if (gamePad.getLeft() || gamePad.getButton(14)) x -= 3;\r\n            // ゲームパッドの右キー or 15番目のボタン\r\n            if (gamePad.getRight() || gamePad.getButton(15)) x += 3;\r\n            // ゲームパッドの上キー or 12番目のボタン\r\n            if (gamePad.getUp() || gamePad.getButton(12)) y -= 3;\r\n            // ゲームパッドの下キー or 13番目のボタン\r\n            if (gamePad.getDown() || gamePad.getButton(13)) y += 3;\r\n        }\r\n        \r\n        // 画面外出ないように制限\r\n        x = clamp(x, 16, $screenWidth-16);\r\n        y = clamp(y, 16, $screenHeight-16);\r\n        \r\n        alpha += 5;\r\n        \r\n    } else { // 接続されていない\r\n        alpha -= 1/2;\r\n    }\r\n    \r\n    alpha = clamp(alpha, 50, 255); // alphaが10～255を超えないように制限\r\n    drawStatus(); // ボタン・軸の状態などを表示\r\n    \r\n    update();\r\n}\r\n\r\n// ボタン・軸の状態などを表示\r\n\\drawStatus() {\r\n    if (alpha <= 50) return; // 接続されていないとき表示しない\r\n    \r\n    var tx = x - 30;\r\n    var ty = y - 40;\r\n    var tSize = 12;\r\n    var tColor = \"white\";\r\n    var textA = analogMode ? \"(アナログ移動)\" : \"(デジタル移動)\";\r\n    \r\n    // ゲームパッド番号を表示 //\r\n    drawText(tx, ty, (playerNo+1)+\"P \"+textA, tColor, tSize); ty += 60;\r\n    // id：ゲームパッドの識別名\r\n    drawText(tx, ty, \"id :\"+gamePad.getPadId(), tColor, tSize); ty += tSize;\r\n    // マッピング：\"standard\"なら標準ゲームパッド、それ以外は\"\"(空文字)\r\n    drawText(tx, ty, \"mapping :\"+gamePad.getMapping(), tColor, tSize); ty += tSize;\r\n    \r\n    buttonCnt = gamePad.getButtonCount(); // ボタン数\r\n    for (var i=0; i<buttonCnt; i++) {\r\n        // ボタンを押した時間(フレーム単位)\r\n        var b = gamePad.getButton(i);\r\n        // ボタンを押した深さ(0.0～1.0)\r\n        var v = gamePad.getButtonValue(i);\r\n        drawText(tx, ty, \"b[\"+i+\"]:\"+b+\" v:\"+v, tColor, tSize); ty += tSize;\r\n    }\r\n    \r\n    axisCnt = gamePad.getAxisCount(); // 軸の数\r\n    for (var i=0; i<axisCnt; i++) {\r\n        // 軸の傾き(-1.0～1.0)\r\n        var a = gamePad.getAxis(i);\r\n        drawText(tx, ty, \"a[\"+i+\"]:\"+a, tColor, tSize); ty += tSize;\r\n    }\r\n    \r\n    // 上下左右キーを押した時間(フレーム単位)\r\n    drawText(tx, ty, \"left :\"+gamePad.getLeft(), tColor, tSize); ty += tSize;\r\n    drawText(tx, ty, \"right:\"+gamePad.getRight(), tColor, tSize); ty += tSize;\r\n    drawText(tx, ty, \"up   :\"+gamePad.getUp(), tColor, tSize); ty += tSize;\r\n    drawText(tx, ty, \"down :\"+gamePad.getDown(), tColor, tSize);\r\n}\r\n"]}