{"version":3,"sources":["C:/git/Tonyu2/Samples/Benchmark/FPS.tonyu","C:/git/Tonyu2/Samples/Benchmark/Main.tonyu","C:/git/Tonyu2/Samples/Benchmark/Tama.tonyu"],"names":[],"mappings":"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","sourcesContent":["x=200;\r\ny=100;\r\nwhile (true) {\r\n    text=all().length+\"actors / \"+$Boot.getMeasuredFps()+\"fps / \"+\r\n    $Boot.getMeasuredRps()+\"rps\"+\" FameSkip=\"+$Boot.frameSkip;\r\n    update();\r\n}","$Boot.setFrameRate(60,2);\r\n$Boot.useRAF=true;\r\nnew FPS;\r\nfor (i=0; i<10; i++)\r\nnew Tama{x:rnd(400),y:rnd(400),vx:rnd()*2-1,vy:rnd()*2-1};\r\nwhile(true) {\r\n    updateEx(30);\r\n    if ($Boot.getMeasuredFps()<55) {\r\n        t=all(Tama)[0];\r\n        if (t) t.die();\r\n    } else {\r\n        new Tama{x:rnd(400),y:rnd(400),vx:rnd()*2-1,vy:rnd()*2-1};\r\n    }\r\n}","\nwhile(true) {\n    x+=vx;\n    y+=vy;\n    rotation++;\n    if (t=crashTo(Tama)) {\n        vx+=(x-t.x)/40;\n        vy+=(y-t.y)/40;\n    }\n    vy+=0.1;\n    c=clamped(x,0,$screenWidth); if (c) vx=abs(vx)*sgn(c)*0.8;\n    c=clamped(y,0,$screenHeight); if (c) vy=abs(vy)*sgn(c)*0.8;\n    update();\n}\n\n\\clamped(x,min,max) {\n    return x<min ? min-x : x>max ? max-x : 0;\n}\n\\sgn(s) {\n    return s<0 ? -1 : s>0 ? 1:0; \n}"]}