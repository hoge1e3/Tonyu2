{"version":3,"sources":["/prj/user/Camera.tonyu","/prj/user/Main.tonyu","/prj/user/MyChar.tonyu"],"names":[],"mappings":"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","sourcesContent":["extends TD_CM;\r\n// カメラオブジェクト\r\n\r\n// 移動のパラメータ //\r\nvar sp  = 5;  // スピード\r\nvar spk = 2; // 回転スピード\r\n\r\nwhile (true) {\r\n    // 方位回転(xz面) //\r\n    if (getkey(37)) xz-=spk; // ←\r\n    if (getkey(39)) xz+=spk; // →\r\n    \r\n    // 上下角回転(yz面) //\r\n    if (getkey(83)) yz-=spk; // Ｓ\r\n    if (getkey(88)) yz+=spk; // Ｘ\r\n    \r\n    // 傾き回転(xy面) //\r\n    if (getkey(68)) xy-=spk; // Ｄ\r\n    if (getkey(70)) xy+=spk; // Ｆ\r\n    \r\n    // 移動 //\r\n    if (getkey(38)) { x+=sp*sin(xz); z+=sp*cos(xz); } // ↑\r\n    if (getkey(40)) { x-=sp*sin(xz); z-=sp*cos(xz); } // ↓\r\n    if (getkey(65)) y+=sp; // Ａ\r\n    if (getkey(90)) y-=sp; // Ｚ\r\n    \r\n    // カメラのズーム調整 //\r\n    if (getkey(81)&&gk>0)     gk-=20+(gk/20); // Ｑ\r\n    if (getkey(87)&&gk<10000) gk+=20+(gk/20); // Ｗ\r\n    if      (gk<0)            gk=0;\r\n    else if (gk>10000)        gk=10000;\r\n    \r\n    // カメラをメイン画面に表示\r\n    cameraMain();\r\n    \r\n    update();\r\n}","// TTD (Tonyu 3D) ライブラリ\r\n// \r\n// Tonyu1 と Tonyu2 の3Dグラフィックを表示するライブラリです。\r\n// サンプルは下記URLにあります。\r\n// https://www.tonyu.jp/project/viewProject.cgi?mainkey=301&\r\n// \r\n// WebGLではなくCanvasで描画しているため、下記の制限があります。\r\n// ・ポリゴンの前後関係がおかしく表示される場合がある\r\n// ・交差するポリゴンは表現できない(どちらかが手前に表示されてしまう)\r\n// ・テクスチャは使えない(ポリゴン1枚1色のみ)\r\n\r\n// Tonyu1のFrameManagerと同じ動作にする\r\nonStart();\r\nonBeforeMove();\r\n$Boot.on(\"beforeMove\") \\{ onBeforeMove(); };\r\n$Boot.on(\"afterMove\") \\{ onAfterMove(); };\r\n\r\nfunction onStart() { // 最初に1度のみ実行される\r\n    $printSize = 12;\r\n    print(\"操作:\\n←→:向き\\n↑↓:前進後進\\nA,Z:上下移動\\nS,X:上下角\\nD,F:傾き\\nQ,W:ズーム\");\r\n    //$Screen.resize(600,400);\r\n    \r\n    // 初期設定 //\r\n    $TD_Z=new TD_Z;\r\n    $TD_Z.STARTING();\r\n    \r\n    // カメラ作成 //\r\n    $Camera=new Camera{\r\n        x:0, y:500, z:0, // 初期カメラ座標\r\n        xz:0, yz:0, xy:0, // 初期カメラ角度\r\n        gk:0, k_max:10, // 初期カメラズーム率, 表示する最大scaleX数\r\n        GL:0, GU:0, GR:$screenWidth, GD:$screenHeight // 2D画面表示領域\r\n    };\r\n    \r\n    // 3Dオブジェクト作成 //\r\n    new MyChar{x:-250, y:-250, z:700}; // 初期位置\r\n}\r\n\r\nfunction onBeforeMove() { // 毎フレーム、全オブジェクトよりも1番最初に実行される\r\n}\r\n\r\nfunction onAfterMove() { // 毎フレーム、全オブジェクトよりも1番最後に実行される\r\n    //$TD_Z.FPS(true);   // 描画回数計算\r\n    $TD_Z.draw3D(); // ３Ｄ描画\r\n}\r\n","extends TD_3D;\r\n// ３Ｄオブジェクト\r\n\r\n/*\r\n※(Tonyu1)オブジェクトインスペクタのx,y,zの値が\r\n　そのまま３Ｄの座標に割り当てられるので\r\n　設計中のオブジェクトの移動には注意してください\r\n*/\r\n\r\n/* ●３Ｄを表示するためのメソッド集●\r\n\r\n// ▲頂点と図形を同時に設定▲\r\nadd3D_DX_P(m,x,y,z,p,f,angle,alpha,scaleX,scaleY); //DXスプライト\r\nadd3D_L_P(m,x,y,z,x2,y2,z2,c,zt,h); //線\r\nadd3D_T_P(m,x,y,z,x2,y2,z2,x3,y3,z3,c,zt,h); //三角形\r\nadd3D_S_P(m,x,y,z,x2,y2,z2,x3,y3,z3,x4,y4,z4,c,zt,h); //四角形\r\n\r\nm:常に1(今のところ無意味な引数だが将来的に図形のモードを設定できるようになる)\r\nx,y,z:１つ目の頂点の座標を設定する(x:横 y:高さ z:奥行き)\r\n                                  (yは正数で上に、zは正数で奥になる)\r\nx2,y2,z2：２つ目の　〃\r\nx3,y3,z3：３つ目の　〃\r\nx4,y4,z4：４つ目の　〃\r\nc:図形の色\r\nzt:表示の前後設定(zOrder)。このシステムでは図形の前後が上手くいかないことがあるため\r\n   プログラマが調整する必要がある。どのあたりをzOrderの基準とするか決める\r\n   0,null:カメラから遠い頂点を基準とする\r\n   1:図形の中心を基準とする\r\n   2:カメラから近い頂点を基準とする\r\n\r\n戻り値:メソッドで生成された図形オブジェクト(TD_DR)\r\n\r\n\r\n\r\n// ▲頂点のみを生成（これだけでは図形は表示されない）▲\r\nadd3D_P(x,y,z);\r\n\r\nx,y,z:１つ目の頂点の座標を設定する\r\n\r\n戻り値:メソッドで生成された点オブジェクト(TD_P)\r\n\r\n\r\n\r\n// ▲図形を設定（頂点を生成した後に、その頂点を引数に入れると図形が表示される）▲\r\nadd3D_DX(m,p1,p,f,angle,alpha,scaleX,scaleY);\r\nadd3D_L(m,p1,p2,c,zt,h);\r\nadd3D_T(m,p1,p2,p3,c,zt,h);\r\nadd3D_S(m,p1,p2,p3,p4,c,zt,h);\r\n\r\np1：１つ目の点オブジェクトを設定する\r\np2：２つ目の　〃\r\np3：３つ目の　〃\r\np4：４つ目の　〃\r\n\r\n戻り値:メソッドで生成された図形オブジェクト(TD_DR)\r\n\r\n*/\r\n\r\n\r\n\r\n// ●図形の作り方●\r\n\r\n// 点と図形をまとめて設定（お手軽に図形を作れる）\r\nadd3D_DX_P(1, 150,250,250, 3,0,0,255,1); // DXスプライト\r\nadd3D_L_P(1, 200,200,200, 200,200,400, color(255,255,255),0,0); // 線\r\nadd3D_T_P(1, 100,100,100, 200,200,100, 300,100,100, color(255,255,0),0,0); // 三角形\r\nadd3D_S_P(1, 300,200,300, 300,300,300, 400,300,300, 400,200,300, color(0,255,255),0,0); // 四角形\r\n\r\n// 点を設定してから図形を設定する（無駄に点を作らないようにもできる）\r\nvar p1=add3D_P(0,0,0);\r\nvar p2=add3D_P(0,0,500);\r\nvar p3=add3D_P(500,0,500);\r\nvar p4=add3D_P(500,0,0);\r\nvar p5=add3D_P(0,500,0);\r\nvar p6=add3D_P(0,500,500);\r\nvar p7=add3D_P(500,500,500);\r\nvar p8=add3D_P(500,500,0);\r\nadd3D_S(1,p1,p2,p3,p4,color(128,128,128),0,0); // 四角形\r\nadd3D_S(1,p1,p2,p6,p5,color(64,64,64),0,0);    // 四角形\r\nadd3D_S(1,p4,p3,p7,p8,color(64,64,64),0,0);    // 四角形\r\nadd3D_S(1,p5,p6,p7,p8,color(128,128,128),0,0); // 四角形\r\n\r\n// 図形全体を回転するときの中心となる座標\r\nTD_angleX=250;\r\nTD_angleY=250;\r\nTD_angleZ=250;\r\n\r\nwhile(true){\r\n    // 図形全体を回転できる\r\n    //TD_angleXZ+=1; // XZを回転\r\n    //TD_angleYZ+=1; // YZを回転\r\n    //TD_angleXY+=1; // XYを回転\r\n    update();\r\n}"]}