extends AbstractShape;
"field strict";
native Math;
var x,y,width,height;// (x,y): center

\clone() {
    return new RectShape{x,y,width,height,_layerPath};
}

\changeLayerPath(newLayerPath) {
    var c=layerPath.convert({x,y}, newLayerPath);
    var rb=layerPath.convert({x:x+width,y:y+height}, newLayerPath);
    x=c.x;
    y=c.y;
    width=(rb.x-c.x);
    height=(rb.y-c.y);
    _layerPath=newLayerPath;
}
\intersectsRaw(s:RectShape) {
    if (s is RectShape) {
        return Math.abs(x-s.x)*2<width+s.width &&
        Math.abs(y-s.y)*2<height+s.height;
    }
    return containsRaw(s);
}
\containsRaw(p/*:Object{x,y}*/) {
    return p.x>=xmin && p.x<=xmax && p.y>=ymin && p.y<=ymax;
}
\xmin {return x-width/2;}
\xmax {return x+width/2;}
\ymin {return y-height/2;}
\ymax {return y+height/2;}
