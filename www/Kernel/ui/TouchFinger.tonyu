extends TObject;
includes MathMod,EventMod;
"field strict";
native console;
var identifier,index,oid,bound;
var px,py,x,y,vx,vy,touched,ended;
var screen,_layer;

\new(layer, screen,index) {
    reset();
    _layer=layer;
    TouchFinger.seq=TouchFinger.seq||0;
    oid=TouchFinger.seq++;
    this.screen=screen||$Screen;
    this.index=index;
}
\reset() {
    identifier=-1;
    px=py=0;
    x=y=vx=vy=touched=0;
    ended=false;
}
\layer {
    return _layer;
}
\layer=toLayer {
    if (_layer===toLayer) return;
    var p=screen.convert(this,toLayer);
    if (!p) {
        console.log("Screen convert failed",screen,this,toLayer,p);
        throw new Error("Screen convert failed");
    }
    x=p.x;
    y=p.y;
    px=x;
    py=y;
    _layer=p.layer;
    vx=vy=0;
}
/*
\copyFrom(src) {
    identifier=src.identifier;
    px=src.px;
    py=src.py;
    x =src.x;
    y =src.y;
    vx=src.vx;
    vy=src.vy;
    touched=src.touched;
    ended=src.ended;
    var slayer=_layer;
    _layer=src.layer;
    layer=slayer;
}
\copyToBound() {
    if (bound) bound.copyFrom(this);
}*/
\update(){
    if (touched>0) {touched++;}
    else if (touched==-1) touched=1;
    else {
        //vx=vy=0;
        //px=null;
    }
    if (touched>0) {
        //console.log(oid,x,y,px,py);
        if (typeof px=="number") {
            vx=x-px || 0;
            vy=y-py || 0;
        }
        px=x;
        py=y;
    }
}
\show() {
    return "["+
    oid+":"+
    floor(x*100)/100+","+floor(px*100)/100+
    "]";
}
\doStart(id,point) {//point: x,y,layer
    identifier=id;
    px=x=point.x;
    py=y=point.y;
    _layer=point.layer;
    vx=vy=0;
    touched=1;
    ended=false;
    if (bound) {
        bound.doStart(id,point);
    }
}
\doMove(point) {
    var p=screen.convert(point,layer);
    var px=x,py=y;
    x=p.x;
    y=p.y;
    // vx,vy updates in \update()
    if (bound) {
        bound.doMove(p);
    }
    // not always e.vx===vx, e.vy===vy
    var e={px,py,x,y,vx:x-px,vy:y-py,finger:this};
    fireEvent("move",e);
}
\doEnd(){
    vx=vy=touched=0;
    ended=true;
    if (bound) {
        bound.doEnd();
        delete this.bound;
    }
    fireEvent("end") {finger:this,x,y};
}
