Tonyu.klass.define({
  fullName: 'kernel.EventHandlerCaller',
  shortName: 'EventHandlerCaller',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_EventHandlerCaller_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_EventHandlerCaller_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      callEventHandler :function _trc_EventHandlerCaller_callEventHandler(h,args) {
        "use strict";
        var _this=this;
        var t;
        
        
        if (h["fiber"]) {
          t=Tonyu.thread();
          h["fiber"].apply(_this.target,[t].concat(args));
          t.steps();
          
        } else {
          h.apply(_this.target,args);
          
        }
      },
      fiber$callEventHandler :function _trc_EventHandlerCaller_f_callEventHandler(_thread,h,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        
        
        if (h["fiber"]) {
          t=Tonyu.thread();
          h["fiber"].apply(_this.target,[t].concat(args));
          t.steps();
          
        } else {
          h.apply(_this.target,args);
          
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"callEventHandler":{"nowait":false}},"fields":{"target":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.EventMod',
  shortName: 'EventMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_EventMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_EventMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initEventMod :function _trc_EventMod_initEventMod() {
        "use strict";
        var _this=this;
        
        if (_this._eventHandlers) {
          return _this;
        }
        _this._eventHandlers={};
        _this.on("die",Tonyu.bindFunc(_this,_this.releaseEventMod));
      },
      releaseEventMod :function _trc_EventMod_releaseEventMod() {
        "use strict";
        var _this=this;
        var k;
        var v;
        var _it_5376;
        
        _it_5376=Tonyu.iterator(_this._eventHandlers,2);
        while(_it_5376.next()) {
          k=_it_5376[0];
          v=_it_5376[1];
          
          v.release();
          
        }
      },
      parseEventArgs :function _trc_EventMod_parseEventArgs(a) {
        "use strict";
        var _this=this;
        var res;
        var i;
        
        res = {type: a[0],args: []};
        
        i = 1;
        for (; i<a.length ; i++) {
          {
            res.args.push(a[i]);
          }
        }
        return res;
      },
      findEventHandlerClass :function _trc_EventMod_findEventHandlerClass(type) {
        "use strict";
        var _this=this;
        
        return Tonyu.classes.kernel.EventHandler;
      },
      registerEventHandler :function _trc_EventMod_registerEventHandler(type,obj) {
        "use strict";
        var _this=this;
        var cl;
        
        _this.initEventMod();
        if (typeof  type=="function") {
          obj=obj||new type({target: _this});
          type=obj.getClassInfo().fullName;
          
        } else {
          if (! obj) {
            cl = _this.findEventHandlerClass(type);
            
            obj=new cl({target: _this});
            
          }
          
        }
        return _this._eventHandlers[type]=obj;
      },
      getEventHandler :function _trc_EventMod_getEventHandler(type) {
        "use strict";
        var _this=this;
        var res;
        
        _this.initEventMod();
        if (typeof  type=="function") {
          type=type.meta.fullName;
          
        }
        res = _this._eventHandlers[type];
        
        return res;
      },
      getOrRegisterEventHandler :function _trc_EventMod_getOrRegisterEventHandler(type) {
        "use strict";
        var _this=this;
        var res;
        
        res = _this.getEventHandler(type)||_this.registerEventHandler(type);
        
        return res;
      },
      on :function _trc_EventMod_on() {
        "use strict";
        var _this=this;
        var a;
        var h;
        
        a = _this.parseEventArgs(arguments);
        
        h = _this.getOrRegisterEventHandler(a.type);
        
        return h.addListener.apply(h,a.args);
      },
      fireEvent :function _trc_EventMod_fireEvent(type,arg) {
        "use strict";
        var _this=this;
        var h;
        
        if (! _this._eventHandlers) {
          return _this;
        }
        h = _this.getEventHandler(type);
        
        if (h) {
          h.fire([arg]);
        }
      },
      sendEvent :function _trc_EventMod_sendEvent(type,arg) {
        "use strict";
        var _this=this;
        
        _this.fireEvent(type,arg);
      },
      waitEvent :function _trc_EventMod_waitEvent() {
        "use strict";
        var _this=this;
        var args;
        var act;
        
        if (null) {
          args = new Tonyu.classes.kernel.ArgParser(arguments);
          
          act = args.shift(Tonyu.classes.kernel.EventMod)||_this;
          
          args.trimUndefs();
          null.waitEvent(act,args.toArray());
          
        }
      },
      fiber$waitEvent :function _trc_EventMod_f_waitEvent(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var args;
        var act;
        
        if (_thread) {
          args = new Tonyu.classes.kernel.ArgParser(_arguments);
          
          act = args.shift(Tonyu.classes.kernel.EventMod)||_this;
          
          args.trimUndefs();
          _thread.waitEvent(act,args.toArray());
          
        }
        
        _thread.retVal=_this;return;
      },
      waitFor :function _trc_EventMod_waitFor(f) {
        "use strict";
        var _this=this;
        var r;
        
        if (null) {
          r = null.waitFor(f);
          
          return r;
          
        }
        return f;
      },
      fiber$waitFor :function _trc_EventMod_f_waitFor(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        if (_thread) {
          r = _thread.waitFor(f);
          
          _thread.retVal=r;return;
          
          
        }
        _thread.retVal=f;return;
        
        
        _thread.retVal=_this;return;
      },
      runAsync :function _trc_EventMod_runAsync(f) {
        "use strict";
        var _this=this;
        
        if (! null) {
          throw new Error("runAsync should run in wait mode");
          
          
        }
        null.runAsync(f);
      },
      fiber$runAsync :function _trc_EventMod_f_runAsync(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! _thread) {
          throw new Error("runAsync should run in wait mode");
          
          
        }
        _thread.runAsync(f);
        
        _thread.retVal=_this;return;
      },
      runPromise :function _trc_EventMod_runPromise(f) {
        "use strict";
        var _this=this;
        var r;
        var e;
        
        if (! null) {
          return Tonyu.globals.$DeferredUtil.promise(f);
          
        } else {
          
          try {
            r=_this.runAsync(f);
            
          } catch (e) {
            throw null.wrapError(e.args[0]);
            
            
          }
          return r[0];
          
        }
      },
      fiber$runPromise :function _trc_EventMod_f_runPromise(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        var e;
        
        
        _thread.enter(function _trc_EventMod_ent_runPromise(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _thread)) { __pc=1     ; break; }
              _thread.exit(Tonyu.globals.$DeferredUtil.promise(f));return;
              __pc=5     ;break;
            case 1     :
              
              _thread.enterTry(3     );
              _this.fiber$runAsync(_thread, f);
              __pc=2;return;
            case 2:
              r=_thread.retVal;
              _thread.exitTry();
              __pc=4     ;break;
            case 3     :
              e=_thread.startCatch();
              {
                throw _thread.wrapError(e.args[0]);
                
              }
            case 4     :
              
              _thread.exit(r[0]);return;
            case 5     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initEventMod":{"nowait":true},"releaseEventMod":{"nowait":true},"parseEventArgs":{"nowait":true},"findEventHandlerClass":{"nowait":true},"registerEventHandler":{"nowait":true},"getEventHandler":{"nowait":true},"getOrRegisterEventHandler":{"nowait":true},"on":{"nowait":true},"fireEvent":{"nowait":true},"sendEvent":{"nowait":true},"waitEvent":{"nowait":false},"waitFor":{"nowait":false},"runAsync":{"nowait":false},"runPromise":{"nowait":false}},"fields":{"_eventHandlers":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.OneframeSpriteMod',
  shortName: 'OneframeSpriteMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_OneframeSpriteMod_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_OneframeSpriteMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      drawText :function _trc_OneframeSpriteMod_drawText(x,y,text,fillStyle,size,zOrder) {
        "use strict";
        var _this=this;
        
        if (! size) {
          size=15;
        }
        if (! fillStyle) {
          fillStyle="white";
        }
        _this.appear(Tonyu.classes.kernel.T1Text,{x: x,y: y,text: text,fillStyle: fillStyle,size: size,zOrder: zOrder,owner: _this});
      },
      centerText :function _trc_OneframeSpriteMod_centerText(x,y,text,fillStyle,size,zOrder) {
        "use strict";
        var _this=this;
        
        if (! size) {
          size=15;
        }
        if (! fillStyle) {
          fillStyle="white";
        }
        _this.appear(Tonyu.classes.kernel.T1Text,{x: x,y: y,text: text,fillStyle: fillStyle,size: size,zOrder: zOrder,owner: _this,align: new Tonyu.classes.kernel.Align2D("center")});
      },
      drawTextEx :function _trc_OneframeSpriteMod_drawTextEx(o) {
        "use strict";
        var _this=this;
        
        if (typeof  o!="object") {
          return _this;
        }
        if (! o.size) {
          o.size=15;
        }
        if (! o.fillStyle) {
          o.fillStyle="white";
        }
        if (! o.align) {
          o.align="left";
        }
        if (o.alpha==null) {
          o.alpha=255;
        }
        _this.appear(Tonyu.classes.kernel.T1Text,{x: o.x,y: o.y,text: o.text,fillStyle: o.fillStyle,size: o.size,zOrder: o.zOrder,owner: _this,align: new Tonyu.classes.kernel.Align2D(o.align),alpha: o.alpha,font: o.font});
      },
      drawLine :function _trc_OneframeSpriteMod_drawLine(x,y,tx,ty,col,zOrder) {
        "use strict";
        var _this=this;
        
        if (! col) {
          col="white";
        }
        _this.appear(Tonyu.classes.kernel.T1Line,{x: x,y: y,tx: tx,ty: ty,col: col,zOrder: zOrder,owner: _this});
      },
      drawRect :function _trc_OneframeSpriteMod_drawRect(x,y,w,h,col,zOrder) {
        "use strict";
        var _this=this;
        
        _this.appear(Tonyu.classes.kernel.T1Rect,{x: x,y: y,w: w,h: h,col: col,zOrder: zOrder,fill: false,owner: _this});
      },
      drawRectT1 :function _trc_OneframeSpriteMod_drawRectT1(x,y,tx,ty,col,zOrder) {
        "use strict";
        var _this=this;
        
        _this.appear(Tonyu.classes.kernel.T1Rect,{x: x,y: y,w: tx-x,h: ty-y,col: col,zOrder: zOrder,fill: false,owner: _this});
      },
      fillRect :function _trc_OneframeSpriteMod_fillRect(x,y,w,h,col,zOrder) {
        "use strict";
        var _this=this;
        
        _this.appear(Tonyu.classes.kernel.T1Rect,{x: x,y: y,w: w,h: h,col: col,zOrder: zOrder,fill: true,owner: _this});
      },
      fillRectT1 :function _trc_OneframeSpriteMod_fillRectT1(x,y,tx,ty,col,zOrder) {
        "use strict";
        var _this=this;
        
        _this.appear(Tonyu.classes.kernel.T1Rect,{x: x,y: y,w: tx-x,h: ty-y,col: col,zOrder: zOrder,fill: true,owner: _this});
      },
      drawSprite :function _trc_OneframeSpriteMod_drawSprite(x,y,p,f,zOrder) {
        "use strict";
        var _this=this;
        
        _this.drawDxSprite(x,y,p,f,zOrder,0,255,1,1);
      },
      drawDxSprite :function _trc_OneframeSpriteMod_drawDxSprite(x,y,p,f,zOrder,angle,alpha,scaleX,scaleY) {
        "use strict";
        var _this=this;
        
        _this.appear(Tonyu.classes.kernel.T1Sprite,{x: x,y: y,p: p,f: f,zOrder: zOrder,angle: angle,alpha: alpha,scaleX: scaleX,scaleY: scaleY,owner: _this});
      },
      setPolygon :function _trc_OneframeSpriteMod_setPolygon(seq,x,y) {
        "use strict";
        var _this=this;
        
        if (seq<0||seq>=100) {
          return _this;
        }
        if (! Tonyu.globals.$_setPolygonTempAry) {
          Tonyu.globals.$_setPolygonTempAry=new Array(2*100);
        }
        Tonyu.globals.$_setPolygonTempAry[seq*2]=x;
        Tonyu.globals.$_setPolygonTempAry[seq*2+1]=y;
      },
      fillPolygon :function _trc_OneframeSpriteMod_fillPolygon(x,y,posCnt,col,zOrder,alpha) {
        "use strict";
        var _this=this;
        var startPos;
        var i;
        var endPos;
        
        if (! (Tonyu.globals.$_setPolygonTempAry instanceof Array)) {
          return _this;
        }
        if (posCnt>100) {
          posCnt=100;
        }
        if (alpha==null) {
          alpha=255;
        }
        if (! Tonyu.globals.$_setPolygonDrawAry) {
          Tonyu.globals.$_setPolygonDrawAry=[];
          Tonyu.globals.$_setPolygonDrawIdx=0;
          Tonyu.globals.$_setPolygonDrawFrame=- 1;
          
        }
        if (Tonyu.globals.$_setPolygonDrawFrame!=Tonyu.globals.$frameCount) {
          Tonyu.globals.$_setPolygonDrawFrame=Tonyu.globals.$frameCount;
          Tonyu.globals.$_setPolygonDrawIdx=0;
          
        }
        startPos = Tonyu.globals.$_setPolygonDrawIdx;
        
        i = 0;
        for (; i<posCnt ; i++) {
          {
            Tonyu.globals.$_setPolygonDrawAry[Tonyu.globals.$_setPolygonDrawIdx]=Tonyu.globals.$_setPolygonTempAry[i*2];
            Tonyu.globals.$_setPolygonDrawAry[Tonyu.globals.$_setPolygonDrawIdx+1]=Tonyu.globals.$_setPolygonTempAry[i*2+1];
            Tonyu.globals.$_setPolygonDrawIdx+=2;
          }
        }
        endPos = Tonyu.globals.$_setPolygonDrawIdx;
        
        _this.appear(Tonyu.classes.kernel.T1FillPolygon,{x: x,y: y,startPos: startPos,endPos: endPos,col: col,zOrder: zOrder,alpha: alpha,owner: _this});
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"drawText":{"nowait":true},"centerText":{"nowait":true},"drawTextEx":{"nowait":true},"drawLine":{"nowait":true},"drawRect":{"nowait":true},"drawRectT1":{"nowait":true},"fillRect":{"nowait":true},"fillRectT1":{"nowait":true},"drawSprite":{"nowait":true},"drawDxSprite":{"nowait":true},"setPolygon":{"nowait":true},"fillPolygon":{"nowait":true}},"fields":{"appear":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.SpriteMod',
  shortName: 'SpriteMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_SpriteMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_SpriteMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      initSpriteMod :function _trc_SpriteMod_initSpriteMod() {
        "use strict";
        var _this=this;
        
        _this.position=new Tonyu.classes.kernel.Vec3View(_this);
        if (_this.scaleX==null) {
          _this.scaleX=1;
        }
        if (_this.rotation==null) {
          _this.rotation=0;
        }
        if (_this.alpha==null) {
          _this.alpha=255;
        }
        if (_this.zOrder==null) {
          _this.zOrder=0;
        }
        _this.initTransform();
      },
      fiber$initSpriteMod :function _trc_SpriteMod_f_initSpriteMod(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.position=new Tonyu.classes.kernel.Vec3View(_this);
        if (_this.scaleX==null) {
          _this.scaleX=1;
        }
        if (_this.rotation==null) {
          _this.rotation=0;
        }
        if (_this.alpha==null) {
          _this.alpha=255;
        }
        if (_this.zOrder==null) {
          _this.zOrder=0;
        }
        
        _thread.enter(function _trc_SpriteMod_ent_initSpriteMod(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initTransform(_thread);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initTransform :function _trc_SpriteMod_initTransform() {
        "use strict";
        var _this=this;
        
      },
      fiber$initTransform :function _trc_SpriteMod_f_initTransform(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      __getter__align :function _trc_SpriteMod___getter__align() {
        "use strict";
        var _this=this;
        
        return _this._alignVal;
      },
      prepareImage :function _trc_SpriteMod_prepareImage() {
        "use strict";
        var _this=this;
        
        if (typeof  _this.p!="number") {
          _this.p=(_this.p-0)||0;
          
        }
        _this.p=Math.floor(_this.p);
        _this.pImg=Tonyu.globals.$imageList[_this.p];
        if (! _this.pImg) {
          return _this;
        }
        _this.width=_this.pImg.width;
        _this.height=_this.pImg.height;
      },
      color :function _trc_SpriteMod_color(r,g,b) {
        "use strict";
        var _this=this;
        
        return "rgb("+[r,g,b].join(",")+")";
      },
      colorHSL :function _trc_SpriteMod_colorHSL(iroai,azayakasa,akarusa) {
        "use strict";
        var _this=this;
        var r;
        var g;
        var b;
        var a;
        
        
        r=Math.abs(120-((Math.trunc(iroai+0.5)%240)%240))*6-240;
        g=Math.abs(120-((Math.trunc(iroai+160.5)%240)%240))*6-240;
        b=Math.abs(120-((Math.trunc(iroai+80.5)%240)%240))*6-240;
        r=Math.trunc(r*1.0625+0.5);
        g=Math.trunc(g*1.0625+0.5);
        b=Math.trunc(b*1.0625+0.5);
        if (r>255) {
          r=255;
        }
        if (g>255) {
          g=255;
        }
        if (b>255) {
          b=255;
        }
        if (r<0) {
          r=0;
        }
        if (g<0) {
          g=0;
        }
        if (b<0) {
          b=0;
        }
        if (azayakasa==null) {
          return _this.color(r,g,b);
        }
        r=Math.trunc(127.5+(r-127)/240*azayakasa);
        g=Math.trunc(127.5+(g-127)/240*azayakasa);
        b=Math.trunc(127.5+(b-127)/240*azayakasa);
        if (akarusa==null) {
          return _this.color(r,g,b);
        }
        if (akarusa<120) {
          r=Math.trunc(0.5+r/120*akarusa);
          g=Math.trunc(0.5+g/120*akarusa);
          b=Math.trunc(0.5+b/120*akarusa);
          
        }
        if (akarusa>120) {
          r+=Math.trunc(0.5+(255-r)/120*(akarusa-120));
          g+=Math.trunc(0.5+(255-g)/120*(akarusa-120));
          b+=Math.trunc(0.5+(255-b)/120*(akarusa-120));
          
        }
        if (r>255) {
          r=255;
        }
        if (g>255) {
          g=255;
        }
        if (b>255) {
          b=255;
        }
        if (r<0) {
          r=0;
        }
        if (g<0) {
          g=0;
        }
        if (b<0) {
          b=0;
        }
        return _this.color(r,g,b);
      },
      setVisible :function _trc_SpriteMod_setVisible(v) {
        "use strict";
        var _this=this;
        
        _this._isInvisible=! v;
      },
      fiber$setVisible :function _trc_SpriteMod_f_setVisible(_thread,v) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._isInvisible=! v;
        
        _thread.retVal=_this;return;
      },
      detectSpriteType :function _trc_SpriteMod_detectSpriteType() {
        "use strict";
        var _this=this;
        
        if (_this.text!=null) {
          return "Text";
          
        } else {
          if (_this.fillStyle!=null) {
            return "Shape";
            
          } else {
            if (_this.p&&typeof  _this.p.draw==="function") {
              return "Custom";
              
            } else {
              return "Image";
              
            }
          }
        }
      },
      fiber$detectSpriteType :function _trc_SpriteMod_f_detectSpriteType(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.text!=null) {
          _thread.retVal="Text";return;
          
          
        } else {
          if (_this.fillStyle!=null) {
            _thread.retVal="Shape";return;
            
            
          } else {
            if (_this.p&&typeof  _this.p.draw==="function") {
              _thread.retVal="Custom";return;
              
              
            } else {
              _thread.retVal="Image";return;
              
              
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initSpriteMod":{"nowait":false},"initTransform":{"nowait":false},"__getter__align":{"nowait":true},"prepareImage":{"nowait":true},"color":{"nowait":true},"colorHSL":{"nowait":true},"setVisible":{"nowait":false},"detectSpriteType":{"nowait":false}},"fields":{"p":{},"pImg":{},"text":{},"size":{},"font":{},"align":{},"fillStyle":{},"scaleX":{},"scaleY":{},"width":{},"height":{},"radius":{},"rotation":{},"alpha":{},"position":{},"zOrder":{},"_isInvisible":{},"subsprites":{},"_alignVal":{},"_align":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.SpriteMod3D',
  shortName: 'SpriteMod3D',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.SpriteMod],
  methods: function (__superClass) {
    return {
      main :function _trc_SpriteMod3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_SpriteMod3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      detectSpriteType :function _trc_SpriteMod3D_detectSpriteType() {
        "use strict";
        var _this=this;
        var t;
        
        t = __superClass.prototype.detectSpriteType.apply( _this, []);
        
        if (t==="Image"&&_this.p&&_this.p.draw3D) {
          return "Custom";
        }
        return t;
      },
      fiber$detectSpriteType :function _trc_SpriteMod3D_f_detectSpriteType(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        
        t = __superClass.prototype.detectSpriteType.apply( _this, []);
        
        if (t==="Image"&&_this.p&&_this.p.draw3D) {
          _thread.retVal="Custom";return;
          
        }
        _thread.retVal=t;return;
        
        
        _thread.retVal=_this;return;
      },
      initTransform :function _trc_SpriteMod3D_initTransform() {
        "use strict";
        var _this=this;
        var givenTransform;
        
        if (_this.direction) {
          _this.direction=_this.direction.clone();
        } else {
          _this.direction=new Tonyu.classes.kernel.Direction;
        }
        givenTransform = _this.transform;
        
        _this.transform=new Tonyu.classes.kernel.Transform({direction: _this.direction,position: _this.position,scale: (_this._prescale||1),actor: _this});
        if (givenTransform) {
          _this.transform.set(givenTransform);
        }
      },
      fiber$initTransform :function _trc_SpriteMod3D_f_initTransform(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var givenTransform;
        
        if (_this.direction) {
          _this.direction=_this.direction.clone();
        } else {
          _this.direction=new Tonyu.classes.kernel.Direction;
        }
        givenTransform = _this.transform;
        
        _this.transform=new Tonyu.classes.kernel.Transform({direction: _this.direction,position: _this.position,scale: (_this._prescale||1),actor: _this});
        if (givenTransform) {
          _this.transform.set(givenTransform);
        }
        
        _thread.retVal=_this;return;
      },
      __getter__scale :function _trc_SpriteMod3D___getter__scale() {
        "use strict";
        var _this=this;
        
        if (! _this.transform) {
          return _this._prescale;
        }
        return _this.transform.scale;
      },
      __setter__scale :function _trc_SpriteMod3D___setter__scale(s) {
        "use strict";
        var _this=this;
        
        if (! _this.transform) {
          return _this._prescale=s;
        }
        _this.transform.scale=s;
      },
      draw3D :function _trc_SpriteMod3D_draw3D(ctx3d) {
        "use strict";
        var _this=this;
        var t;
        
        t = _this.detectSpriteType();
        
        if (t==="Image") {
          _this.prepareImage();
        }
        if (_this.p&&_this.p.draw3D) {
          ctx3d.save();
          ctx3d.transform(_this.transform);
          _this.p.draw3D(ctx3d);
          ctx3d.restore();
          
        } else {
          ctx3d.addSprite3D(_this);
          
        }
        if (_this.subsprites&&_this.subsprites.draw3D) {
          ctx3d.save();
          ctx3d.transform(_this.transform);
          _this.subsprites.draw3D(ctx3d);
          ctx3d.restore();
          
        }
      },
      fiber$draw3D :function _trc_SpriteMod3D_f_draw3D(_thread,ctx3d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        
        
        _thread.enter(function _trc_SpriteMod3D_ent_draw3D(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$detectSpriteType(_thread);
              __pc=1;return;
            case 1:
              t=_thread.retVal;
              
              if (t==="Image") {
                _this.prepareImage();
              }
              if (_this.p&&_this.p.draw3D) {
                ctx3d.save();
                ctx3d.transform(_this.transform);
                _this.p.draw3D(ctx3d);
                ctx3d.restore();
                
              } else {
                ctx3d.addSprite3D(_this);
                
              }
              if (_this.subsprites&&_this.subsprites.draw3D) {
                ctx3d.save();
                ctx3d.transform(_this.transform);
                _this.subsprites.draw3D(ctx3d);
                ctx3d.restore();
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"detectSpriteType":{"nowait":false},"initTransform":{"nowait":false},"__getter__scale":{"nowait":true},"__setter__scale":{"nowait":true},"draw3D":{"nowait":false}},"fields":{"x":{},"y":{},"z":{},"direction":{},"transform":{},"_prescale":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.TextRectMod',
  shortName: 'TextRectMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_TextRectMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_TextRectMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      drawTextRect :function _trc_TextRectMod_drawTextRect(ctx,text,x,topY,h,align,type) {
        "use strict";
        var _this=this;
        var met;
        var res;
        var r;
        
        if (! align) {
          align=new Tonyu.classes.kernel.Align2D;
        }
        ctx.textBaseline=(align.v==="center"?"middle":align.v==="default"?"top":align.v);
        _this.setFontSize(ctx,h);
        met = ctx.measureText(text);
        
        res = {y: topY,w: met.width,h: h};
        
        r = align.getDrawRect({width: met.width,height: h});
        
        res.x=x+r.x-r.width/2;
        if (type=="fill") {
          ctx.fillText(text,res.x,topY);
        }
        if (type=="stroke") {
          ctx.strokeText(text,res.x,topY);
        }
        return res;
      },
      setFontSize :function _trc_TextRectMod_setFontSize(ctx,sz) {
        "use strict";
        var _this=this;
        var post;
        
        post = ctx.font.replace(/^[0-9\.]+/,"");
        
        ctx.font=sz+post;
      },
      fukidashi :function _trc_TextRectMod_fukidashi(ctx,text,x,y,sz) {
        "use strict";
        var _this=this;
        var align;
        var theight;
        var margin;
        var r;
        var fs;
        
        align = "c";
        
        theight = 20;
        
        margin = 5;
        
        r = _this.drawTextRect(ctx,text,x,y-theight-margin-sz,sz,align);
        
        ctx.beginPath();
        ctx.moveTo(x,y);
        ctx.lineTo(x+margin,y-theight);
        ctx.lineTo(x+r.w/2+margin,y-theight);
        ctx.lineTo(x+r.w/2+margin,y-theight-r.h-margin*2);
        ctx.lineTo(x-r.w/2-margin,y-theight-r.h-margin*2);
        ctx.lineTo(x-r.w/2-margin,y-theight);
        ctx.lineTo(x-margin,y-theight);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        fs = ctx.fillStyle;
        
        ctx.fillStyle=ctx.strokeStyle;
        _this.drawTextRect(ctx,text,x,y-theight-margin-sz,sz,align,"fill");
        ctx.fillStyle=fs;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"drawTextRect":{"nowait":true},"setFontSize":{"nowait":true},"fukidashi":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.T2Mod',
  shortName: 'T2Mod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T2Mod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_T2Mod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      bvec :function _trc_T2Mod_bvec(tx,ty) {
        "use strict";
        var _this=this;
        var b2Vec2;
        
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        return new b2Vec2(tx/_this.wscale,ty/_this.wscale);
      },
      fiber$bvec :function _trc_T2Mod_f_bvec(_thread,tx,ty) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b2Vec2;
        
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        _thread.retVal=new b2Vec2(tx/_this.wscale,ty/_this.wscale);return;
        
        
        _thread.retVal=_this;return;
      },
      defv :function _trc_T2Mod_defv(t,d) {
        "use strict";
        var _this=this;
        
        return (t===t&&(typeof  t)==="number")?t:d;
      },
      fiber$defv :function _trc_T2Mod_f_defv(_thread,t,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=(t===t&&(typeof  t)==="number")?t:d;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"bvec":{"nowait":false},"defv":{"nowait":false}},"fields":{"wscale":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MediaPlayer',
  shortName: 'MediaPlayer',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MediaPlayer_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_MediaPlayer_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      play :function _trc_MediaPlayer_play(s) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$sound.playBGM(s);
      },
      fiber$play :function _trc_MediaPlayer_f_play(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$sound.playBGM(s);
        
        _thread.retVal=_this;return;
      },
      stop :function _trc_MediaPlayer_stop() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$sound.stopBGM(_this.s);
      },
      fiber$stop :function _trc_MediaPlayer_f_stop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$sound.stopBGM(_this.s);
        
        _thread.retVal=_this;return;
      },
      playSE :function _trc_MediaPlayer_playSE() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$sound.playSE(_this.s);
      },
      fiber$playSE :function _trc_MediaPlayer_f_playSE(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$sound.playSE(_this.s);
        
        _thread.retVal=_this;return;
      },
      setDelay :function _trc_MediaPlayer_setDelay() {
        "use strict";
        var _this=this;
        
      },
      fiber$setDelay :function _trc_MediaPlayer_f_setDelay(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      setVolume :function _trc_MediaPlayer_setVolume() {
        "use strict";
        var _this=this;
        
      },
      fiber$setVolume :function _trc_MediaPlayer_f_setVolume(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"play":{"nowait":false},"stop":{"nowait":false},"playSE":{"nowait":false},"setDelay":{"nowait":false},"setVolume":{"nowait":false}},"fields":{"s":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Array',
  shortName: 'T1Array',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Array_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Array_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_T1Array_initialize() {
        "use strict";
        var _this=this;
        
        _this.data=[];
      },
      ary :function _trc_T1Array_ary() {
        "use strict";
        var _this=this;
        
        return _this.data;
      },
      fiber$ary :function _trc_T1Array_f_ary(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.data;return;
        
        
        _thread.retVal=_this;return;
      },
      add :function _trc_T1Array_add(d) {
        "use strict";
        var _this=this;
        
        _this.data.push(d);
      },
      fiber$add :function _trc_T1Array_f_add(_thread,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data.push(d);
        
        _thread.retVal=_this;return;
      },
      clear :function _trc_T1Array_clear() {
        "use strict";
        var _this=this;
        
        _this.data.splice(0);
      },
      fiber$clear :function _trc_T1Array_f_clear(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data.splice(0);
        
        _thread.retVal=_this;return;
      },
      _delete :function _trc_T1Array__delete(i) {
        "use strict";
        var _this=this;
        
        _this.data.splice(i,1);
      },
      fiber$_delete :function _trc_T1Array_f__delete(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data.splice(i,1);
        
        _thread.retVal=_this;return;
      },
      get :function _trc_T1Array_get(i) {
        "use strict";
        var _this=this;
        
        return _this.data[i];
      },
      fiber$get :function _trc_T1Array_f_get(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.data[i];return;
        
        
        _thread.retVal=_this;return;
      },
      indexOf :function _trc_T1Array_indexOf(d) {
        "use strict";
        var _this=this;
        
        _this.data.indexOf(d);
      },
      fiber$indexOf :function _trc_T1Array_f_indexOf(_thread,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data.indexOf(d);
        
        _thread.retVal=_this;return;
      },
      insert :function _trc_T1Array_insert(i,d) {
        "use strict";
        var _this=this;
        
        _this.data.splice(i,0,d);
      },
      fiber$insert :function _trc_T1Array_f_insert(_thread,i,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data.splice(i,0,d);
        
        _thread.retVal=_this;return;
      },
      lightIndexOf :function _trc_T1Array_lightIndexOf() {
        "use strict";
        var _this=this;
        
        _this.data.indexOf(_this.d);
      },
      fiber$lightIndexOf :function _trc_T1Array_f_lightIndexOf(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data.indexOf(_this.d);
        
        _thread.retVal=_this;return;
      },
      load :function _trc_T1Array_load() {
        "use strict";
        var _this=this;
        
      },
      fiber$load :function _trc_T1Array_f_load(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      remove :function _trc_T1Array_remove() {
        "use strict";
        var _this=this;
        var i;
        
        i = _this.data.indexOf(_this.d);
        
        _this.data.splice(i,1);
      },
      fiber$remove :function _trc_T1Array_f_remove(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        
        i = _this.data.indexOf(_this.d);
        
        _this.data.splice(i,1);
        
        _thread.retVal=_this;return;
      },
      save :function _trc_T1Array_save() {
        "use strict";
        var _this=this;
        
      },
      fiber$save :function _trc_T1Array_f_save(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      set :function _trc_T1Array_set(i,d) {
        "use strict";
        var _this=this;
        
        _this.data[i]=d;
      },
      fiber$set :function _trc_T1Array_f_set(_thread,i,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.data[i]=d;
        
        _thread.retVal=_this;return;
      },
      size :function _trc_T1Array_size() {
        "use strict";
        var _this=this;
        
        return _this.data.length;
      },
      fiber$size :function _trc_T1Array_f_size(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.data.length;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"ary":{"nowait":false},"add":{"nowait":false},"clear":{"nowait":false},"_delete":{"nowait":false},"get":{"nowait":false},"indexOf":{"nowait":false},"insert":{"nowait":false},"lightIndexOf":{"nowait":false},"load":{"nowait":false},"remove":{"nowait":false},"save":{"nowait":false},"set":{"nowait":false},"size":{"nowait":false}},"fields":{"data":{},"d":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ParallelMod',
  shortName: 'ParallelMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ParallelMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_ParallelMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      parallel :function _trc_ParallelMod_parallel() {
        "use strict";
        var _this=this;
        var args;
        var i;
        var name;
        var th;
        
        args = [];
        
        i = 1;
        for (; i<arguments.length ; i++) {
          {
            args.push(arguments[i]);
          }
        }
        name = arguments[0];
        
        
        th=Tonyu.globals.$Boot.schedule(_this,name,args);
        return th;
      },
      call :function _trc_ParallelMod_call() {
        "use strict";
        var _this=this;
        var a;
        var t;
        var n;
        var f;
        var ag2;
        
        if (! null) {
          throw new Error("callは待機可能モードで呼び出してください");
          
        }
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        t = a.shift();
        
        n = a.shift();
        
        f = t["fiber$"+n];
        
        if (! f) {
          throw new Error("メソッド"+n+"が見つかりません");
          
          
        }
        ag2 = a.toArray();
        
        ag2.unshift(null);
        return f.apply(t,ag2);
      },
      fiber$call :function _trc_ParallelMod_f_call(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var t;
        var n;
        var f;
        var ag2;
        
        if (! _thread) {
          throw new Error("callは待機可能モードで呼び出してください");
          
        }
        a = new Tonyu.classes.kernel.ArgParser(_arguments);
        
        t = a.shift();
        
        n = a.shift();
        
        f = t["fiber$"+n];
        
        if (! f) {
          throw new Error("メソッド"+n+"が見つかりません");
          
          
        }
        ag2 = a.toArray();
        
        ag2.unshift(_thread);
        _thread.retVal=f.apply(t,ag2);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"parallel":{"nowait":true},"call":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.SchedulerMod',
  shortName: 'SchedulerMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_SchedulerMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_SchedulerMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initSchedulerMod :function _trc_SchedulerMod_initSchedulerMod() {
        "use strict";
        var _this=this;
        
        _this._scheduler=_this._scheduler||Tonyu.globals.$Scheduler;
        _this._th=Tonyu.globals.$Boot.schedule(_this,"main",[]);
      },
      fiber$initSchedulerMod :function _trc_SchedulerMod_f_initSchedulerMod(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._scheduler=_this._scheduler||Tonyu.globals.$Scheduler;
        _this._th=Tonyu.globals.$Boot.schedule(_this,"main",[]);
        
        _thread.retVal=_this;return;
      },
      update :function _trc_SchedulerMod_update() {
        "use strict";
        var _this=this;
        
        _this.onUpdate();
        if (null) {
          null.suspend();
          if (_this._scheduler) {
            _this._scheduler.addToNext(null);
          }
          
        } else {
          _this._scheduler.checkTimeout();
          
        }
      },
      fiber$update :function _trc_SchedulerMod_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.onUpdate();
        if (_thread) {
          _thread.suspend();
          if (_this._scheduler) {
            _this._scheduler.addToNext(_thread);
          }
          
        } else {
          _this._scheduler.checkTimeout();
          
        }
        
        _thread.retVal=_this;return;
      },
      onUpdate :function _trc_SchedulerMod_onUpdate() {
        "use strict";
        var _this=this;
        
      },
      updateEx :function _trc_SchedulerMod_updateEx(updateT) {
        "use strict";
        var _this=this;
        var updateCount;
        
        updateCount = 0;
        for (; updateCount<updateT ; updateCount++) {
          {
            _this.update();
          }
        }
      },
      fiber$updateEx :function _trc_SchedulerMod_f_updateEx(_thread,updateT) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var updateCount;
        
        
        _thread.enter(function _trc_SchedulerMod_ent_updateEx(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              updateCount = 0;
              
            case 1:
              if (!(updateCount<updateT)) { __pc=4     ; break; }
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
            case 3     :
              updateCount++;
              __pc=1;break;
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      currentThreadGroup :function _trc_SchedulerMod_currentThreadGroup() {
        "use strict";
        var _this=this;
        
        return _this._scheduler;
      },
      wait :function _trc_SchedulerMod_wait(t) {
        "use strict";
        var _this=this;
        
        if (null) {
          null.suspend();
          if (t) {
            null.waitCount=t;
            if (_this._scheduler) {
              _this._scheduler.addToNext(null);
            }
            
          }
          
        } else {
          if (_this._th) {
            if (t) {
              _this._th.waitCount=t;
              
            } else {
              if (_this._th.scheduled) {
                _this._th.scheduled.unschedule(_this._th);
              }
              
            }
            
          }
        }
      },
      fiber$wait :function _trc_SchedulerMod_f_wait(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_thread) {
          _thread.suspend();
          if (t) {
            _thread.waitCount=t;
            if (_this._scheduler) {
              _this._scheduler.addToNext(_thread);
            }
            
          }
          
        } else {
          if (_this._th) {
            if (t) {
              _this._th.waitCount=t;
              
            } else {
              if (_this._th.scheduled) {
                _this._th.scheduled.unschedule(_this._th);
              }
              
            }
            
          }
        }
        
        _thread.retVal=_this;return;
      },
      notify :function _trc_SchedulerMod_notify() {
        "use strict";
        var _this=this;
        
        if (_this._th) {
          if (_this._th.scheduled) {
            _this._th.waitCount=0;
            
          } else {
            if (_this._scheduler) {
              _this._scheduler.addToCur(_this._th);
            }
            
          }
          
        }
      },
      timeStop :function _trc_SchedulerMod_timeStop() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$Boot.timeStop(_this);
      },
      fiber$timeStop :function _trc_SchedulerMod_f_timeStop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$Boot.timeStop(_this);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initSchedulerMod":{"nowait":false},"update":{"nowait":false},"onUpdate":{"nowait":true},"updateEx":{"nowait":false},"currentThreadGroup":{"nowait":true},"wait":{"nowait":false},"notify":{"nowait":true},"timeStop":{"nowait":false}},"fields":{"_scheduler":{},"_th":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ThreadGroupMod',
  shortName: 'ThreadGroupMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ThreadGroupMod_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ThreadGroupMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      isDeadThreadGroup :function _trc_ThreadGroupMod_isDeadThreadGroup() {
        "use strict";
        var _this=this;
        
        return _this._isDeadThreadGroup=_this._isDeadThreadGroup||(_this._threadGroup&&(_this._threadGroup.objectPoolAge!=_this.tGrpObjectPoolAge||_this._threadGroup.isDeadThreadGroup()));
      },
      fiber$isDeadThreadGroup :function _trc_ThreadGroupMod_f_isDeadThreadGroup(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this._isDeadThreadGroup=_this._isDeadThreadGroup||(_this._threadGroup&&(_this._threadGroup.objectPoolAge!=_this.tGrpObjectPoolAge||_this._threadGroup.isDeadThreadGroup()));return;
        
        
        _thread.retVal=_this;return;
      },
      setThreadGroup :function _trc_ThreadGroupMod_setThreadGroup(g) {
        "use strict";
        var _this=this;
        
        _this._threadGroup=g;
        _this.tGrpObjectPoolAge=g.objectPoolAge;
      },
      fiber$setThreadGroup :function _trc_ThreadGroupMod_f_setThreadGroup(_thread,g) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._threadGroup=g;
        _this.tGrpObjectPoolAge=g.objectPoolAge;
        
        _thread.retVal=_this;return;
      },
      killThreadGroup :function _trc_ThreadGroupMod_killThreadGroup() {
        "use strict";
        var _this=this;
        
        _this._isDeadThreadGroup=true;
      },
      fiber$killThreadGroup :function _trc_ThreadGroupMod_f_killThreadGroup(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._isDeadThreadGroup=true;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"isDeadThreadGroup":{"nowait":false},"setThreadGroup":{"nowait":false},"killThreadGroup":{"nowait":false}},"fields":{"_isDeadThreadGroup":{},"_threadGroup":{},"tGrpObjectPoolAge":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.InputDevice',
  shortName: 'InputDevice',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_InputDevice_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_InputDevice_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_InputDevice_initialize() {
        "use strict";
        var _this=this;
        
        _this.listeners=[];
        _this.touchEmu=true;
        _this.wheelVy=0;
        _this.defaultLayer=Tonyu.globals.$Screen;
      },
      handleListeners :function _trc_InputDevice_handleListeners(type,evt) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.listeners;
        
        _this.listeners=[];
        while (l.length>0) {
          (l.shift())();
          
        }
        if (type&&evt) {
          evt.type=type;
          _this.fireEvent(type,evt);
          
        }
        if (Tonyu.globals.$Boot.economyMode&&! Tonyu.globals.$Boot.economyMode.manualDraw) {
          Tonyu.globals.$Boot.requestDrawFrame();
          
        }
      },
      fiber$handleListeners :function _trc_InputDevice_f_handleListeners(_thread,type,evt) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        l = _this.listeners;
        
        _this.listeners=[];
        
        _thread.enter(function _trc_InputDevice_ent_handleListeners(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(l.length>0)) { __pc=2     ; break; }
              {
                (l.shift())();
              }
              __pc=1;break;
            case 2     :
              
              if (type&&evt) {
                evt.type=type;
                _this.fireEvent(type,evt);
                
              }
              if (Tonyu.globals.$Boot.economyMode&&! Tonyu.globals.$Boot.economyMode.manualDraw) {
                Tonyu.globals.$Boot.requestDrawFrame();
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      addOnetimeListener :function _trc_InputDevice_addOnetimeListener(l) {
        "use strict";
        var _this=this;
        
        _this.listeners.push(l);
      },
      fiber$addOnetimeListener :function _trc_InputDevice_f_addOnetimeListener(_thread,l) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.listeners.push(l);
        
        _thread.retVal=_this;return;
      },
      newTouch :function _trc_InputDevice_newTouch(i) {
        "use strict";
        var _this=this;
        
        return {index: i,px: 0,py: 0,x: 0,y: 0,vx: 0,vy: 0,touched: 0,identifier: - 1,ended: false,layer: _this.defaultLayer};
      },
      fiber$newTouch :function _trc_InputDevice_f_newTouch(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal={index: i,px: 0,py: 0,x: 0,y: 0,vx: 0,vy: 0,touched: 0,identifier: - 1,ended: false,layer: _this.defaultLayer};return;
        
        
        _thread.retVal=_this;return;
      },
      changeTouchLayer :function _trc_InputDevice_changeTouchLayer(t,toLayer) {
        "use strict";
        var _this=this;
        
        return t.layer=toLayer;
      },
      fiber$changeTouchLayer :function _trc_InputDevice_f_changeTouchLayer(_thread,t,toLayer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=t.layer=toLayer;return;
        
        
        _thread.retVal=_this;return;
      },
      initCanvasEvents :function _trc_InputDevice_initCanvasEvents(cvj) {
        "use strict";
        var _this=this;
        var cv;
        var ID_MOUSE;
        var bmap;
        var handleMouseDown;
        var handleMouseMove;
        var handleMouseUp;
        var handleTouchStart;
        var handleTouchMove;
        var handleTouchEnd;
        var handleWheel;
        var d;
        
        _this.rootCanvas=cvj;
        cv = cvj[0];
        
        ID_MOUSE = 31238612;
        
        bmap = [1,4,2];
        
        Tonyu.globals.$handleMouseDown=(function anonymous_932(e) {
          var p;
          var mp;
          
          _this.debug("mouseDown",Tonyu.globals.$InputDevice.touchEmu,e);
          _this.mouseDownAtCV=true;
          Tonyu.resetLoopCheck();
          if (Tonyu.globals.$t2MediaLib) {
            Tonyu.globals.$t2MediaLib.activate();
          }
          e.preventDefault();
          window.focus();
          p = cvj.offset();
          
          mp = {x: e.clientX-p.left,y: e.clientY-p.top,layer: Tonyu.globals.$Screen.layer};
          
          mp=Tonyu.globals.$Screen.convert(mp,_this.defaultLayer);
          Tonyu.globals.$mouseX=mp.x;
          Tonyu.globals.$mouseY=mp.y;
          _this.mouseButton=_this.mouseButton|(1<<e.button);
          _this.isMouseDown=true;
          if (Tonyu.globals.$InputDevice.touchEmu) {
            Tonyu.globals.$handleTouchStart({preventDefault: (function anonymous_1762() {
              
            }),originalEvent: {changedTouches: [{identifier: ID_MOUSE+e.button,pageX: e.clientX,pageY: e.clientY}]},byMouse: bmap[e.button]||1});
            
          }
          _this.handleListeners();
        });
        Tonyu.globals.$handleMouseMove=(function anonymous_2108(e) {
          var p;
          var mp;
          var changedTouches;
          var btn;
          var bid;
          
          _this.debug("mouseMove",Tonyu.globals.$InputDevice.touchEmu,e);
          Tonyu.resetLoopCheck();
          if (_this.mouseDownAtCV) {
            e.preventDefault();
          }
          p = cvj.offset();
          
          mp = {x: e.clientX-p.left,y: e.clientY-p.top,layer: Tonyu.globals.$Screen.layer};
          
          mp=Tonyu.globals.$Screen.convert(mp,_this.defaultLayer);
          _this.fireEvent("mouseMove",{x: mp.x,y: mp.y,vx: Tonyu.globals.$mouseX==null?0:mp.x-Tonyu.globals.$mouseX,vy: Tonyu.globals.$mouseY==null?0:mp.y-Tonyu.globals.$mouseY});
          Tonyu.globals.$mouseX=mp.x;
          Tonyu.globals.$mouseY=mp.y;
          if (_this.isMouseDown&&Tonyu.globals.$InputDevice.touchEmu) {
            changedTouches = [];
            
            btn = _this.mouseButton;
            bid = 0;
            
            while (btn) {
              if (btn&1) {
                changedTouches.push({identifier: ID_MOUSE+bid,pageX: e.clientX,pageY: e.clientY});
                
              }
              btn=btn>>1;
              bid++;
              
            }
            Tonyu.globals.$handleTouchMove({preventDefault: (function anonymous_3208() {
              
            }),originalEvent: {changedTouches: changedTouches},byMouse: bmap[e.button]||1});
            
          }
          _this.handleListeners();
        });
        Tonyu.globals.$handleMouseUp=(function anonymous_3441(e) {
          
          _this.debug("mouseUp",Tonyu.globals.$InputDevice.touchEmu);
          Tonyu.resetLoopCheck();
          if (Tonyu.globals.$t2MediaLib) {
            Tonyu.globals.$t2MediaLib.activate();
          }
          if (_this.mouseDownAtCV) {
            e.preventDefault();
          }
          _this.mouseDownAtCV=false;
          _this.isMouseDown=false;
          _this.mouseButton=_this.mouseButton&~ (1<<e.button);
          if (Tonyu.globals.$InputDevice.touchEmu) {
            Tonyu.globals.$handleTouchEnd({preventDefault: (function anonymous_3882() {
              
            }),originalEvent: {changedTouches: [{identifier: ID_MOUSE+e.button,pageX: e.clientX,pageY: e.clientY}]},byMouse: bmap[e.button]||1});
            
          }
        });
        _this.touch=new Tonyu.classes.kernel.TouchFingers(_this);
        Tonyu.globals.$touches=_this.touch.fingerArray;
        Tonyu.globals.$handleTouchStart=(function anonymous_4280(e) {
          
          return _this.touch.handleStart(e);
        });
        Tonyu.globals.$handleTouchMove=(function anonymous_4364(e) {
          
          return _this.touch.handleMove(e);
        });
        Tonyu.globals.$handleTouchEnd=(function anonymous_4446(e) {
          
          return _this.touch.handleEnd(e);
        });
        Tonyu.globals.$handleWheel=(function anonymous_4524(e) {
          
          e=e.originalEvent;
          _this.wheelVy+=e.deltaY;
          _this.fireEvent("wheel",e);
          return false;
        });
        Tonyu.globals.$unsetTouchEmu=(function anonymous_4669() {
          
          Tonyu.resetLoopCheck();
          Tonyu.globals.$InputDevice.touchEmu=false;
          return _this.touch.unsetEmu();
        });
        handleMouseDown = (function anonymous_4822(e) {
          
          Tonyu.globals.$handleMouseDown(e);
        });
        
        handleMouseMove = (function anonymous_4875(e) {
          
          Tonyu.globals.$handleMouseMove(e);
        });
        
        handleMouseUp = (function anonymous_4926(e) {
          
          Tonyu.globals.$handleMouseUp(e);
        });
        
        handleTouchStart = (function anonymous_4978(e) {
          
          Tonyu.globals.$unsetTouchEmu();
          Tonyu.globals.$handleTouchStart(e);
        });
        
        handleTouchMove = (function anonymous_5049(e) {
          
          Tonyu.globals.$unsetTouchEmu();
          Tonyu.globals.$handleTouchMove(e);
        });
        
        handleTouchEnd = (function anonymous_5118(e) {
          
          Tonyu.globals.$unsetTouchEmu();
          Tonyu.globals.$handleTouchEnd(e);
        });
        
        handleWheel = (function anonymous_5183(e) {
          
          Tonyu.globals.$handleWheel(e);
        });
        
        d = $.data(cv,"events");
        
        if (! d) {
          $.data(cv,"events","true");
          cvj.mousedown(handleMouseDown);
          $(document).mousemove(handleMouseMove);
          $(document).mouseup(handleMouseUp);
          $(document).on("mouseleave",handleMouseUp);
          cvj.on("contextmenu",(function anonymous_5538(e) {
            
            e.stopPropagation();
            e.preventDefault();
          }));
          cvj.on("touchstart",handleTouchStart);
          cvj.on("touchmove",handleTouchMove);
          cvj.on("touchend",handleTouchEnd);
          cvj.on("touchcancel",handleTouchEnd);
          cvj.on("wheel",handleWheel);
          
        }
      },
      fiber$initCanvasEvents :function _trc_InputDevice_f_initCanvasEvents(_thread,cvj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cv;
        var ID_MOUSE;
        var bmap;
        var handleMouseDown;
        var handleMouseMove;
        var handleMouseUp;
        var handleTouchStart;
        var handleTouchMove;
        var handleTouchEnd;
        var handleWheel;
        var d;
        
        _this.rootCanvas=cvj;
        cv = cvj[0];
        
        ID_MOUSE = 31238612;
        
        bmap = [1,4,2];
        
        
        _thread.enter(function _trc_InputDevice_ent_initCanvasEvents(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              Tonyu.globals.$handleMouseDown=(function anonymous_932(e) {
                var p;
                var mp;
                
                _this.debug("mouseDown",Tonyu.globals.$InputDevice.touchEmu,e);
                _this.mouseDownAtCV=true;
                Tonyu.resetLoopCheck();
                if (Tonyu.globals.$t2MediaLib) {
                  Tonyu.globals.$t2MediaLib.activate();
                }
                e.preventDefault();
                window.focus();
                p = cvj.offset();
                
                mp = {x: e.clientX-p.left,y: e.clientY-p.top,layer: Tonyu.globals.$Screen.layer};
                
                mp=Tonyu.globals.$Screen.convert(mp,_this.defaultLayer);
                Tonyu.globals.$mouseX=mp.x;
                Tonyu.globals.$mouseY=mp.y;
                _this.mouseButton=_this.mouseButton|(1<<e.button);
                _this.isMouseDown=true;
                if (Tonyu.globals.$InputDevice.touchEmu) {
                  Tonyu.globals.$handleTouchStart({preventDefault: (function anonymous_1762() {
                    
                  }),originalEvent: {changedTouches: [{identifier: ID_MOUSE+e.button,pageX: e.clientX,pageY: e.clientY}]},byMouse: bmap[e.button]||1});
                  
                }
                _this.handleListeners();
              });
              Tonyu.globals.$handleMouseMove=(function anonymous_2108(e) {
                var p;
                var mp;
                var changedTouches;
                var btn;
                var bid;
                
                _this.debug("mouseMove",Tonyu.globals.$InputDevice.touchEmu,e);
                Tonyu.resetLoopCheck();
                if (_this.mouseDownAtCV) {
                  e.preventDefault();
                }
                p = cvj.offset();
                
                mp = {x: e.clientX-p.left,y: e.clientY-p.top,layer: Tonyu.globals.$Screen.layer};
                
                mp=Tonyu.globals.$Screen.convert(mp,_this.defaultLayer);
                _this.fireEvent("mouseMove",{x: mp.x,y: mp.y,vx: Tonyu.globals.$mouseX==null?0:mp.x-Tonyu.globals.$mouseX,vy: Tonyu.globals.$mouseY==null?0:mp.y-Tonyu.globals.$mouseY});
                Tonyu.globals.$mouseX=mp.x;
                Tonyu.globals.$mouseY=mp.y;
                if (_this.isMouseDown&&Tonyu.globals.$InputDevice.touchEmu) {
                  changedTouches = [];
                  
                  btn = _this.mouseButton;
                  bid = 0;
                  
                  while (btn) {
                    if (btn&1) {
                      changedTouches.push({identifier: ID_MOUSE+bid,pageX: e.clientX,pageY: e.clientY});
                      
                    }
                    btn=btn>>1;
                    bid++;
                    
                  }
                  Tonyu.globals.$handleTouchMove({preventDefault: (function anonymous_3208() {
                    
                  }),originalEvent: {changedTouches: changedTouches},byMouse: bmap[e.button]||1});
                  
                }
                _this.handleListeners();
              });
              Tonyu.globals.$handleMouseUp=(function anonymous_3441(e) {
                
                _this.debug("mouseUp",Tonyu.globals.$InputDevice.touchEmu);
                Tonyu.resetLoopCheck();
                if (Tonyu.globals.$t2MediaLib) {
                  Tonyu.globals.$t2MediaLib.activate();
                }
                if (_this.mouseDownAtCV) {
                  e.preventDefault();
                }
                _this.mouseDownAtCV=false;
                _this.isMouseDown=false;
                _this.mouseButton=_this.mouseButton&~ (1<<e.button);
                if (Tonyu.globals.$InputDevice.touchEmu) {
                  Tonyu.globals.$handleTouchEnd({preventDefault: (function anonymous_3882() {
                    
                  }),originalEvent: {changedTouches: [{identifier: ID_MOUSE+e.button,pageX: e.clientX,pageY: e.clientY}]},byMouse: bmap[e.button]||1});
                  
                }
              });
              _this.touch=new Tonyu.classes.kernel.TouchFingers(_this);
              Tonyu.globals.$touches=_this.touch.fingerArray;
              Tonyu.globals.$handleTouchStart=(function anonymous_4280(e) {
                
                return _this.touch.handleStart(e);
              });
              Tonyu.globals.$handleTouchMove=(function anonymous_4364(e) {
                
                return _this.touch.handleMove(e);
              });
              Tonyu.globals.$handleTouchEnd=(function anonymous_4446(e) {
                
                return _this.touch.handleEnd(e);
              });
              Tonyu.globals.$handleWheel=(function anonymous_4524(e) {
                
                e=e.originalEvent;
                _this.wheelVy+=e.deltaY;
                _this.fireEvent("wheel",e);
                return false;
              });
              Tonyu.globals.$unsetTouchEmu=(function anonymous_4669() {
                
                Tonyu.resetLoopCheck();
                Tonyu.globals.$InputDevice.touchEmu=false;
                return _this.touch.unsetEmu();
              });
              handleMouseDown = (function anonymous_4822(e) {
                
                Tonyu.globals.$handleMouseDown(e);
              });
              
              handleMouseMove = (function anonymous_4875(e) {
                
                Tonyu.globals.$handleMouseMove(e);
              });
              
              handleMouseUp = (function anonymous_4926(e) {
                
                Tonyu.globals.$handleMouseUp(e);
              });
              
              handleTouchStart = (function anonymous_4978(e) {
                
                Tonyu.globals.$unsetTouchEmu();
                Tonyu.globals.$handleTouchStart(e);
              });
              
              handleTouchMove = (function anonymous_5049(e) {
                
                Tonyu.globals.$unsetTouchEmu();
                Tonyu.globals.$handleTouchMove(e);
              });
              
              handleTouchEnd = (function anonymous_5118(e) {
                
                Tonyu.globals.$unsetTouchEmu();
                Tonyu.globals.$handleTouchEnd(e);
              });
              
              handleWheel = (function anonymous_5183(e) {
                
                Tonyu.globals.$handleWheel(e);
              });
              
              d = $.data(cv,"events");
              
              if (! d) {
                $.data(cv,"events","true");
                cvj.mousedown(handleMouseDown);
                $(document).mousemove(handleMouseMove);
                $(document).mouseup(handleMouseUp);
                $(document).on("mouseleave",handleMouseUp);
                cvj.on("contextmenu",(function anonymous_5538(e) {
                  
                  e.stopPropagation();
                  e.preventDefault();
                }));
                cvj.on("touchstart",handleTouchStart);
                cvj.on("touchmove",handleTouchMove);
                cvj.on("touchend",handleTouchEnd);
                cvj.on("touchcancel",handleTouchEnd);
                cvj.on("wheel",handleWheel);
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      update :function _trc_InputDevice_update() {
        "use strict";
        var _this=this;
        
        _this.wheelVy=0;
        return _this.touch.updateFingers();
      },
      fiber$update :function _trc_InputDevice_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.wheelVy=0;
        _thread.retVal=_this.touch.updateFingers();return;
        
        
        _thread.retVal=_this;return;
      },
      debug :function _trc_InputDevice_debug() {
        "use strict";
        var _this=this;
        
        if (_this.debugFlag) {
          console.log.apply(console,arguments);
          
        }
      },
      fiber$debug :function _trc_InputDevice_f_debug(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.debugFlag) {
          console.log.apply(console,_arguments);
          
        }
        
        _thread.retVal=_this;return;
      },
      reset :function _trc_InputDevice_reset() {
        "use strict";
        var _this=this;
        
        _this.touch.reset();
      },
      fiber$reset :function _trc_InputDevice_f_reset(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.touch.reset();
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"handleListeners":{"nowait":false},"addOnetimeListener":{"nowait":false},"newTouch":{"nowait":false},"changeTouchLayer":{"nowait":false},"initCanvasEvents":{"nowait":false},"update":{"nowait":false},"debug":{"nowait":false},"reset":{"nowait":false}},"fields":{"listeners":{},"touchEmu":{},"wheelVy":{},"defaultLayer":{},"rootCanvas":{},"mouseDownAtCV":{},"mouseButton":{},"isMouseDown":{},"touch":{},"debugFlag":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.API',
  shortName: 'API',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_API_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_API_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      info :function _trc_API_info() {
        "use strict";
        var _this=this;
        var ide;
        
        ide = Tonyu.globals.$Boot.getIDE();
        
        if (ide) {
          return Promise.resolve(ide.getAPIInfo());
          
        } else {
          return Promise.resolve($.get("https://run.tonyu.jp/apiInfo.php",{url: location.href}));
          
        }
      },
      fiber$info :function _trc_API_f_info(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ide;
        
        ide = Tonyu.globals.$Boot.getIDE();
        
        if (ide) {
          _thread.retVal=Promise.resolve(ide.getAPIInfo());return;
          
          
        } else {
          _thread.retVal=Promise.resolve($.get("https://run.tonyu.jp/apiInfo.php",{url: location.href}));return;
          
          
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"info":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.ArgParser',
  shortName: 'ArgParser',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ArgParser_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ArgParser_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ArgParser_initialize(asrc) {
        "use strict";
        var _this=this;
        var i;
        
        if (! asrc) {
          throw new Error("Use as: new ArgParser(arguments)");
          
        }
        _this.length=0;
        _this.a=_this;
        i = 0;
        for (; i<asrc.length ; i++) {
          _this.push(asrc[i]);
        }
      },
      push :function _trc_ArgParser_push(v) {
        "use strict";
        var _this=this;
        
        _this.a[_this.length++]=v;
      },
      fiber$push :function _trc_ArgParser_f_push(_thread,v) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.a[_this.length++]=v;
        
        _thread.retVal=_this;return;
      },
      trimUndefs :function _trc_ArgParser_trimUndefs() {
        "use strict";
        var _this=this;
        
        while (_this.length>0) {
          if (_this.a[_this.length-1]!==_this._undef) {
            break;
            
          }
          _this.length--;
          delete _this.a[_this.length];
          
        }
      },
      fiber$trimUndefs :function _trc_ArgParser_f_trimUndefs(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_ArgParser_ent_trimUndefs(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(_this.length>0)) { __pc=3     ; break; }
              if (!(_this.a[_this.length-1]!==_this._undef)) { __pc=2     ; break; }
              __pc=3     ; break;
              
            case 2     :
              
              _this.length--;
              delete _this.a[_this.length];
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      peek :function _trc_ArgParser_peek(i) {
        "use strict";
        var _this=this;
        
        return _this.a[i||0];
      },
      fiber$peek :function _trc_ArgParser_f_peek(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.a[i||0];return;
        
        
        _thread.retVal=_this;return;
      },
      shift :function _trc_ArgParser_shift(type) {
        "use strict";
        var _this=this;
        var res;
        var i;
        
        if (typeof  type=="number") {
          res = [];
          
          i = 0;
          for (; i<type ; i++) {
            res.push(_this.shift());
          }
          return res;
          
        } else {
          if (typeof  type=="string") {
            if (_this.a[0]==null) {
              return _this._undef;
            }
            if (typeof  _this.a[0]===type) {
              return _this.shift();
            }
            return _this._undef;
            
          } else {
            if (type) {
              if (Tonyu.is(_this.a[0],type)) {
                return _this.shift();
              }
              return _this._undef;
              
            }
          }
        }
        res = _this.a[0];
        
        i = 1;
        for (; i<_this.length ; i++) {
          {
            _this.a[i-1]=_this.a[i];
          }
        }
        _this.length--;
        delete _this.a[_this.length];
        return res;
      },
      fiber$shift :function _trc_ArgParser_f_shift(_thread,type) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var i;
        
        
        _thread.enter(function _trc_ArgParser_ent_shift(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  type=="number")) { __pc=1     ; break; }
              res = [];
              
              i = 0;
              for (; i<type ; i++) {
                res.push(_this.shift());
              }
              _thread.exit(res);return;
              __pc=10    ;break;
            case 1     :
              if (!(typeof  type=="string")) { __pc=5     ; break; }
              if (!(_this.a[0]==null)) { __pc=2     ; break; }
              _thread.exit(_this._undef);return;
            case 2     :
              
              if (!(typeof  _this.a[0]===type)) { __pc=4     ; break; }
              _this.fiber$shift(_thread);
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
            case 4     :
              
              _thread.exit(_this._undef);return;
              __pc=9     ;break;
            case 5     :
              if (!(type)) { __pc=8     ; break; }
              if (!(Tonyu.is(_this.a[0],type))) { __pc=7     ; break; }
              _this.fiber$shift(_thread);
              __pc=6;return;
            case 6:
              _thread.exit(_thread.retVal);return;
              
            case 7     :
              
              _thread.exit(_this._undef);return;
            case 8     :
              
            case 9     :
              
            case 10    :
              
              res = _this.a[0];
              
              i = 1;
              for (; i<_this.length ; i++) {
                {
                  _this.a[i-1]=_this.a[i];
                }
              }
              _this.length--;
              delete _this.a[_this.length];
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      toArray :function _trc_ArgParser_toArray() {
        "use strict";
        var _this=this;
        var res;
        var i;
        
        res = [];
        
        i = 0;
        for (; i<_this.a.length ; i++) {
          res.push(_this.a[i]);
        }
        return res;
      },
      fiber$toArray :function _trc_ArgParser_f_toArray(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var i;
        
        res = [];
        
        i = 0;
        for (; i<_this.a.length ; i++) {
          res.push(_this.a[i]);
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      parseOptions :function _trc_ArgParser_parseOptions(spec) {
        "use strict";
        var _this=this;
        var speca;
        var res;
        var name;
        var opt;
        var notOption;
        var k;
        var v;
        var _it_5464;
        var _it_5465;
        
        speca = spec.split(",");
        
        res = {};
        
        if (_this.length>speca.length) {
          throw new Error("# of arguments("+_this.length+") is more than spec("+speca.length+").");
          
          
        }
        while (_this.length>1) {
          name = speca.shift();
          
          res[name]=_this.shift();
          
        }
        opt = _this.shift();
        
        if (typeof  opt!=="object") {
          notOption=true;
          
        } else {
          _it_5464=Tonyu.iterator(opt,2);
          while(_it_5464.next()) {
            k=_it_5464[0];
            v=_it_5464[1];
            
            if (speca.indexOf(k)<0) {
              notOption=true;
              break;
              
              
            }
            
          }
          
        }
        if (notOption) {
          res[speca.shift()]=opt;
          
        } else {
          _it_5465=Tonyu.iterator(opt,2);
          while(_it_5465.next()) {
            k=_it_5465[0];
            v=_it_5465[1];
            
            res[k]=v;
            
          }
          
        }
        return res;
      },
      fiber$parseOptions :function _trc_ArgParser_f_parseOptions(_thread,spec) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var speca;
        var res;
        var name;
        var opt;
        var notOption;
        var k;
        var v;
        var _it_5464;
        var _it_5465;
        
        speca = spec.split(",");
        
        res = {};
        
        if (_this.length>speca.length) {
          throw new Error("# of arguments("+_this.length+") is more than spec("+speca.length+").");
          
          
        }
        
        _thread.enter(function _trc_ArgParser_ent_parseOptions(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(_this.length>1)) { __pc=3     ; break; }
              name = speca.shift();
              
              _this.fiber$shift(_thread);
              __pc=2;return;
            case 2:
              res[name]=_thread.retVal;
              
              __pc=1;break;
            case 3     :
              
              _this.fiber$shift(_thread);
              __pc=4;return;
            case 4:
              opt=_thread.retVal;
              
              if (!(typeof  opt!=="object")) { __pc=5     ; break; }
              {
                notOption=true;
              }
              __pc=6     ;break;
            case 5     :
              _it_5464=Tonyu.iterator(opt,2);
              while(_it_5464.next()) {
                k=_it_5464[0];
                v=_it_5464[1];
                
                if (speca.indexOf(k)<0) {
                  notOption=true;
                  break;
                  
                  
                }
                
              }
            case 6     :
              
              if (notOption) {
                res[speca.shift()]=opt;
                
              } else {
                _it_5465=Tonyu.iterator(opt,2);
                while(_it_5465.next()) {
                  k=_it_5465[0];
                  v=_it_5465[1];
                  
                  res[k]=v;
                  
                }
                
              }
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"push":{"nowait":false},"trimUndefs":{"nowait":false},"peek":{"nowait":false},"shift":{"nowait":false},"toArray":{"nowait":false},"parseOptions":{"nowait":false}},"fields":{"length":{},"a":{},"_undef":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.FileMod',
  shortName: 'FileMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_FileMod_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_FileMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      file :function _trc_FileMod_file(path) {
        "use strict";
        var _this=this;
        var d;
        var files;
        
        d = Tonyu.globals.$currentProject.getDir();
        
        if (path.isSFile&&path.isSFile()) {
          return path;
        }
        files = d.rel("files/");
        
        return files.rel(path).setPolicy({topDir: d});
      },
      fiber$file :function _trc_FileMod_f_file(_thread,path) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var d;
        var files;
        
        d = Tonyu.globals.$currentProject.getDir();
        
        if (path.isSFile&&path.isSFile()) {
          _thread.retVal=path;return;
          
        }
        files = d.rel("files/");
        
        _thread.retVal=files.rel(path).setPolicy({topDir: d});return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"file":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.GeneratorMod',
  shortName: 'GeneratorMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_GeneratorMod_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_GeneratorMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      generator :function _trc_GeneratorMod_generator() {
        "use strict";
        var _this=this;
        var a;
        var methodName;
        var th;
        var res;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        methodName = a.shift();
        
        th = Tonyu.thread();
        
        a = a.toArray();
        
        a.unshift(_this.yielder);
        res = {tonyuIterator: (function anonymous_214() {
          
        })};
        
        th.apply(_this,methodName,a);
      },
      fiber$generator :function _trc_GeneratorMod_f_generator(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var methodName;
        var th;
        var res;
        
        a = new Tonyu.classes.kernel.ArgParser(_arguments);
        
        methodName = a.shift();
        
        th = Tonyu.thread();
        
        a = a.toArray();
        
        a.unshift(_this.yielder);
        res = {tonyuIterator: (function anonymous_214() {
          
        })};
        
        th.apply(_this,methodName,a);
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"generator":{"nowait":false}},"fields":{"yielder":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MathMod',
  shortName: 'MathMod',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MathMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_MathMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      sin :function _trc_MathMod_sin(d) {
        "use strict";
        var _this=this;
        
        if (d%90==0) {
          d=_this.amod(d,360);
          return [0,1,0,- 1][_this.floor(d/90)];
          
        }
        return Math.sin(_this.rad(d));
      },
      cos :function _trc_MathMod_cos(d) {
        "use strict";
        var _this=this;
        
        if (d%90==0) {
          d=_this.amod(d,360);
          return [1,0,- 1,0][_this.floor(d/90)];
          
        }
        return Math.cos(_this.rad(d));
      },
      rad :function _trc_MathMod_rad(d) {
        "use strict";
        var _this=this;
        
        return d/180*Math.PI;
      },
      deg :function _trc_MathMod_deg(d) {
        "use strict";
        var _this=this;
        
        return d/Math.PI*180;
      },
      abs :function _trc_MathMod_abs(v) {
        "use strict";
        var _this=this;
        
        return Math.abs(v);
      },
      sgn :function _trc_MathMod_sgn(v,base) {
        "use strict";
        var _this=this;
        
        base=base||0;
        return (v>base?1:v<- base?- 1:0);
      },
      atan2 :function _trc_MathMod_atan2(y,x) {
        "use strict";
        var _this=this;
        
        return _this.deg(Math.atan2(y,x));
      },
      atanxy :function _trc_MathMod_atanxy(x,y) {
        "use strict";
        var _this=this;
        
        return _this.atan2(y,x);
      },
      floor :function _trc_MathMod_floor(x) {
        "use strict";
        var _this=this;
        
        return Math.floor(x);
      },
      angleDiff :function _trc_MathMod_angleDiff(a,b) {
        "use strict";
        var _this=this;
        var c;
        
        
        a=_this.floor(a);
        b=_this.floor(b);
        if (a>=b) {
          c=(a-b)%360;
          if (c>=180) {
            c-=360;
          }
          
        } else {
          c=- ((b-a)%360);
          if (c<- 180) {
            c+=360;
          }
          
        }
        return c;
      },
      sqrt :function _trc_MathMod_sqrt(t) {
        "use strict";
        var _this=this;
        
        return Math.sqrt(t);
      },
      dist :function _trc_MathMod_dist(dx,dy,dz) {
        "use strict";
        var _this=this;
        
        dz=dz||0;
        return _this.sqrt(dx*dx+dy*dy+dz*dz);
      },
      trunc :function _trc_MathMod_trunc(f) {
        "use strict";
        var _this=this;
        
        if (f>=0) {
          return Math.floor(f);
        } else {
          return Math.ceil(f);
        }
      },
      ceil :function _trc_MathMod_ceil(f) {
        "use strict";
        var _this=this;
        
        return Math.ceil(f);
      },
      rndFloat :function _trc_MathMod_rndFloat(r,m) {
        "use strict";
        var _this=this;
        
        if (typeof  r!=="number") {
          r=0;
        }
        if (typeof  m!=="number") {
          m=1;
        }
        if (r<m) {
          return _this.rnd()*(m-r)+r;
          
        } else {
          return _this.rnd()*(r-m)+m;
          
        }
      },
      rnd :function _trc_MathMod_rnd(r,m) {
        "use strict";
        var _this=this;
        var res;
        
        
        if (Tonyu.is(Tonyu.globals.$random,Tonyu.classes.kernel.Random)) {
          res=Tonyu.globals.$random.next01();
        } else {
          res=Math.random();
        }
        if (typeof  r=="number") {
          if (typeof  m=="number") {
            if (r<m) {
              return Math.floor(res*(m-r)+r);
              
            } else {
              return Math.floor(res*(r-m)+m);
              
            }
            
          } else {
            return Math.floor(res*(r>0?r:0));
            
          }
          
        }
        return res;
      },
      randomize :function _trc_MathMod_randomize(s) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$random=new Tonyu.classes.kernel.Random(s);
      },
      parseFloat :function _trc_MathMod_parseFloat(s) {
        "use strict";
        var _this=this;
        
        return parseFloat(s);
      },
      clamp :function _trc_MathMod_clamp(v,min,max) {
        "use strict";
        var _this=this;
        
        if (min>max) {
          return _this.clamp(v,max,min);
        }
        return v<min?min:v>max?max:v;
      },
      clamped :function _trc_MathMod_clamped(v,min,max) {
        "use strict";
        var _this=this;
        
        return _this.clamp(v,min,max)-v;
      },
      min :function _trc_MathMod_min() {
        "use strict";
        var _this=this;
        
        return Math.min.apply(Math,arguments);
      },
      max :function _trc_MathMod_max() {
        "use strict";
        var _this=this;
        
        return Math.max.apply(Math,arguments);
      },
      amod :function _trc_MathMod_amod(v,d) {
        "use strict";
        var _this=this;
        
        return (v%d+d)%d;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"sin":{"nowait":true},"cos":{"nowait":true},"rad":{"nowait":true},"deg":{"nowait":true},"abs":{"nowait":true},"sgn":{"nowait":true},"atan2":{"nowait":true},"atanxy":{"nowait":true},"floor":{"nowait":true},"angleDiff":{"nowait":true},"sqrt":{"nowait":true},"dist":{"nowait":true},"trunc":{"nowait":true},"ceil":{"nowait":true},"rndFloat":{"nowait":true},"rnd":{"nowait":true},"randomize":{"nowait":true},"parseFloat":{"nowait":true},"clamp":{"nowait":true},"clamped":{"nowait":true},"min":{"nowait":true},"max":{"nowait":true},"amod":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.Navigator',
  shortName: 'Navigator',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Navigator_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Navigator_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      getUserAgent :function _trc_Navigator_getUserAgent() {
        "use strict";
        var _this=this;
        
        return navigator.userAgent;
      },
      fiber$getUserAgent :function _trc_Navigator_f_getUserAgent(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=navigator.userAgent;return;
        
        
        _thread.retVal=_this;return;
      },
      isTablet :function _trc_Navigator_isTablet() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return ((u.indexOf("windows")!=- 1&&u.indexOf("touch")!=- 1&&u.indexOf("tablet pc")==- 1)||u.indexOf("ipad")!=- 1||(u.indexOf("android")!=- 1&&u.indexOf("windows")==- 1&&u.indexOf("mobile")==- 1)||(u.indexOf("firefox")!=- 1&&u.indexOf("tablet")!=- 1)||u.indexOf("kindle")!=- 1||u.indexOf("silk")!=- 1||u.indexOf("playbook")!=- 1||u.indexOf('a1_07')!=- 1||u.indexOf('sc-01c')!=- 1);
      },
      fiber$isTablet :function _trc_Navigator_f_isTablet(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=((u.indexOf("windows")!=- 1&&u.indexOf("touch")!=- 1&&u.indexOf("tablet pc")==- 1)||u.indexOf("ipad")!=- 1||(u.indexOf("android")!=- 1&&u.indexOf("windows")==- 1&&u.indexOf("mobile")==- 1)||(u.indexOf("firefox")!=- 1&&u.indexOf("tablet")!=- 1)||u.indexOf("kindle")!=- 1||u.indexOf("silk")!=- 1||u.indexOf("playbook")!=- 1||u.indexOf('a1_07')!=- 1||u.indexOf('sc-01c')!=- 1);return;
        
        
        _thread.retVal=_this;return;
      },
      isMobile :function _trc_Navigator_isMobile() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return ((u.indexOf("windows")!=- 1&&u.indexOf("phone")!=- 1)||u.indexOf("iphone")!=- 1||u.indexOf("ipod")!=- 1||(u.indexOf("android")!=- 1&&u.indexOf("windows")==- 1&&u.indexOf("mobile")!=- 1)||(u.indexOf("firefox")!=- 1&&u.indexOf("mobile")!=- 1)||(u.indexOf("blackberry")!=- 1||(u.indexOf("bb10")!=- 1&&u.indexOf("mobile")!=- 1)));
      },
      fiber$isMobile :function _trc_Navigator_f_isMobile(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=((u.indexOf("windows")!=- 1&&u.indexOf("phone")!=- 1)||u.indexOf("iphone")!=- 1||u.indexOf("ipod")!=- 1||(u.indexOf("android")!=- 1&&u.indexOf("windows")==- 1&&u.indexOf("mobile")!=- 1)||(u.indexOf("firefox")!=- 1&&u.indexOf("mobile")!=- 1)||(u.indexOf("blackberry")!=- 1||(u.indexOf("bb10")!=- 1&&u.indexOf("mobile")!=- 1)));return;
        
        
        _thread.retVal=_this;return;
      },
      isWindows :function _trc_Navigator_isWindows() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return u.indexOf("windows")!=- 1;
      },
      fiber$isWindows :function _trc_Navigator_f_isWindows(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=u.indexOf("windows")!=- 1;return;
        
        
        _thread.retVal=_this;return;
      },
      isAndroid :function _trc_Navigator_isAndroid() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return (u.indexOf("android")!=- 1&&u.indexOf("windows")==- 1);
      },
      fiber$isAndroid :function _trc_Navigator_f_isAndroid(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=(u.indexOf("android")!=- 1&&u.indexOf("windows")==- 1);return;
        
        
        _thread.retVal=_this;return;
      },
      isIOS :function _trc_Navigator_isIOS() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return (u.indexOf("iphone")!=- 1||u.indexOf("ipad")!=- 1||u.indexOf("ipod")!=- 1);
      },
      fiber$isIOS :function _trc_Navigator_f_isIOS(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=(u.indexOf("iphone")!=- 1||u.indexOf("ipad")!=- 1||u.indexOf("ipod")!=- 1);return;
        
        
        _thread.retVal=_this;return;
      },
      isFirefoxOS :function _trc_Navigator_isFirefoxOS() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return u.indexOf("firefox")!=1;
      },
      fiber$isFirefoxOS :function _trc_Navigator_f_isFirefoxOS(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=u.indexOf("firefox")!=1;return;
        
        
        _thread.retVal=_this;return;
      },
      isKindle :function _trc_Navigator_isKindle() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return (u.indexOf("kindle")!=- 1||u.indexOf("silk")!=- 1);
      },
      fiber$isKindle :function _trc_Navigator_f_isKindle(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=(u.indexOf("kindle")!=- 1||u.indexOf("silk")!=- 1);return;
        
        
        _thread.retVal=_this;return;
      },
      isBlackBerry :function _trc_Navigator_isBlackBerry() {
        "use strict";
        var _this=this;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        return (u.indexOf("blackberry")!=- 1||u.indexOf("playbook")!=- 1||(u.indexOf("bb10")!=- 1&&u.indexOf("mobile")!=- 1));
      },
      fiber$isBlackBerry :function _trc_Navigator_f_isBlackBerry(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var u;
        
        u = _this.getUserAgent().toLowerCase();
        
        _thread.retVal=(u.indexOf("blackberry")!=- 1||u.indexOf("playbook")!=- 1||(u.indexOf("bb10")!=- 1&&u.indexOf("mobile")!=- 1));return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getUserAgent":{"nowait":false},"isTablet":{"nowait":false},"isMobile":{"nowait":false},"isWindows":{"nowait":false},"isAndroid":{"nowait":false},"isIOS":{"nowait":false},"isFirefoxOS":{"nowait":false},"isKindle":{"nowait":false},"isBlackBerry":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.ObjectPool',
  shortName: 'ObjectPool',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ObjectPool_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ObjectPool_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      pool :function _trc_ObjectPool_pool(key,o) {
        "use strict";
        var _this=this;
        var list;
        
        list = _this.poolList(key);
        
        o.objectPoolAge=(o.objectPoolAge||0)+1;
        list.push(o);
      },
      fiber$pool :function _trc_ObjectPool_f_pool(_thread,key,o) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var list;
        
        
        _thread.enter(function _trc_ObjectPool_ent_pool(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$poolList(_thread, key);
              __pc=1;return;
            case 1:
              list=_thread.retVal;
              
              o.objectPoolAge=(o.objectPoolAge||0)+1;
              list.push(o);
              _thread.exit(_this);return;
            }
          }
        });
      },
      withdraw :function _trc_ObjectPool_withdraw(key) {
        "use strict";
        var _this=this;
        var list;
        
        list = _this.poolList(key);
        
        return list.shift();
      },
      fiber$withdraw :function _trc_ObjectPool_f_withdraw(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var list;
        
        
        _thread.enter(function _trc_ObjectPool_ent_withdraw(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$poolList(_thread, key);
              __pc=1;return;
            case 1:
              list=_thread.retVal;
              
              _thread.exit(list.shift());return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      poolList :function _trc_ObjectPool_poolList(key) {
        "use strict";
        var _this=this;
        
        _this.lists=_this.lists||{};
        return _this.lists[key]=_this.lists[key]||[];
      },
      fiber$poolList :function _trc_ObjectPool_f_poolList(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.lists=_this.lists||{};
        _thread.retVal=_this.lists[key]=_this.lists[key]||[];return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"pool":{"nowait":false},"withdraw":{"nowait":false},"poolList":{"nowait":false}},"fields":{"lists":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.TObject',
  shortName: 'TObject',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_TObject_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_TObject_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_TObject_initialize(options) {
        "use strict";
        var _this=this;
        
        if (typeof  options=="object") {
          _this.extend(options);
        }
        _this.main();
      },
      extend :function _trc_TObject_extend(obj) {
        "use strict";
        var _this=this;
        
        return Tonyu.extend(_this,obj);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"extend":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.TQuery',
  shortName: 'TQuery',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_TQuery_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_TQuery_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_TQuery_initialize(context) {
        "use strict";
        var _this=this;
        
        _this.length=0;
        if (Tonyu.is(context,Tonyu.classes.kernel.BaseActor)) {
          context={actor: context};
        }
        if (Tonyu.is(context,Tonyu.classes.kernel.Screen)) {
          context={screen: context};
        }
        context=context||{};
        context.is3D=(Tonyu.is(context.actor,Tonyu.classes.kernel.Actor3D));
        context.screen=context.screen||Tonyu.globals.$Screen;
        _this.context=context;
      },
      __getter__parent :function _trc_TQuery___getter__parent() {
        "use strict";
        var _this=this;
        
        return _this.context.actor;
      },
      create :function _trc_TQuery_create() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.TQuery(_this.context);
      },
      fiber$create :function _trc_TQuery_f_create(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.TQuery(_this.context);return;
        
        
        _thread.retVal=_this;return;
      },
      contains :function _trc_TQuery_contains(t) {
        "use strict";
        var _this=this;
        var o;
        var _it_5493;
        
        _it_5493=Tonyu.iterator(_this,1);
        while(_it_5493.next()) {
          o=_it_5493[0];
          
          if (o===t) {
            return true;
          }
          
        }
        return false;
      },
      fiber$contains :function _trc_TQuery_f_contains(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var o;
        var _it_5493;
        
        _it_5493=Tonyu.iterator(_this,1);
        while(_it_5493.next()) {
          o=_it_5493[0];
          
          if (o===t) {
            _thread.retVal=true;return;
            
          }
          
        }
        _thread.retVal=false;return;
        
        
        _thread.retVal=_this;return;
      },
      tonyuIterator :function _trc_TQuery_tonyuIterator(arity) {
        "use strict";
        var _this=this;
        var res;
        
        res = {};
        
        res.i=0;
        if (arity==1) {
          res.next=(function anonymous_656() {
            
            if (res.i<_this.length) {
              res[0]=_this[res.i];
              res.i++;
              return true;
              
            }
            return false;
          });
          
        } else {
          res.next=(function anonymous_887() {
            
            if (res.i<_this.length) {
              res[0]=res.i;
              res[1]=_this[res.i];
              res.i++;
              return true;
              
            }
            return false;
          });
          
        }
        return res;
      },
      fiber$tonyuIterator :function _trc_TQuery_f_tonyuIterator(_thread,arity) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        res = {};
        
        res.i=0;
        if (arity==1) {
          res.next=(function anonymous_656() {
            
            if (res.i<_this.length) {
              res[0]=_this[res.i];
              res.i++;
              return true;
              
            }
            return false;
          });
          
        } else {
          res.next=(function anonymous_887() {
            
            if (res.i<_this.length) {
              res[0]=res.i;
              res[1]=_this[res.i];
              res.i++;
              return true;
              
            }
            return false;
          });
          
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      attr :function _trc_TQuery_attr() {
        "use strict";
        var _this=this;
        var values;
        var i;
        var e;
        var _it_5497;
        
        
        if (_this.length==0) {
          return _this;
        }
        if (arguments.length==1&&typeof  arguments[0]=="string") {
          return _this[0][arguments[0]];
          
        }
        if (arguments.length>=2) {
          values={};
          i = 0;
          for (; i<arguments.length-1 ; i+=2) {
            {
              values[arguments[i]]=arguments[i+1];
            }
          }
          
        } else {
          values=arguments[0];
          
        }
        if (values) {
          _it_5497=Tonyu.iterator(_this,1);
          while(_it_5497.next()) {
            e=_it_5497[0];
            
            e.extend(values);
            
          }
          
        }
      },
      fiber$attr :function _trc_TQuery_f_attr(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var values;
        var i;
        var e;
        var _it_5497;
        
        
        if (_this.length==0) {
          _thread.retVal=_this;return;
          
        }
        if (_arguments.length==1&&typeof  _arguments[0]=="string") {
          _thread.retVal=_this[0][_arguments[0]];return;
          
          
        }
        if (_arguments.length>=2) {
          values={};
          i = 0;
          for (; i<_arguments.length-1 ; i+=2) {
            {
              values[_arguments[i]]=_arguments[i+1];
            }
          }
          
        } else {
          values=_arguments[0];
          
        }
        if (values) {
          _it_5497=Tonyu.iterator(_this,1);
          while(_it_5497.next()) {
            e=_it_5497[0];
            
            e.extend(values);
            
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      genKeyfunc :function _trc_TQuery_genKeyfunc(key) {
        "use strict";
        var _this=this;
        
        if (typeof  key!="function") {
          return (function anonymous_1703(o) {
            
            return o[key];
          });
          
        } else {
          return key;
          
        }
      },
      fiber$genKeyfunc :function _trc_TQuery_f_genKeyfunc(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  key!="function") {
          _thread.retVal=(function anonymous_1703(o) {
            
            return o[key];
          });return;
          
          
        } else {
          _thread.retVal=key;return;
          
          
        }
        
        _thread.retVal=_this;return;
      },
      applyArrayMethod :function _trc_TQuery_applyArrayMethod(name,args) {
        "use strict";
        var _this=this;
        var res;
        var a;
        var r;
        
        res = _this.create();
        
        a = _this.toArray();
        
        r = a[name].apply(a,args);
        
        res.push(r);
        return res;
      },
      fiber$applyArrayMethod :function _trc_TQuery_f_applyArrayMethod(_thread,name,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var a;
        var r;
        
        
        _thread.enter(function _trc_TQuery_ent_applyArrayMethod(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$create(_thread);
              __pc=1;return;
            case 1:
              res=_thread.retVal;
              
              _this.fiber$toArray(_thread);
              __pc=2;return;
            case 2:
              a=_thread.retVal;
              
              r = a[name].apply(a,args);
              
              res.push(r);
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      toArray :function _trc_TQuery_toArray() {
        "use strict";
        var _this=this;
        var res;
        var i;
        
        res = [];
        
        i = 0;
        for (; i<_this.length ; i++) {
          res.push(_this[i]);
        }
        return res;
      },
      fiber$toArray :function _trc_TQuery_f_toArray(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var i;
        
        res = [];
        
        i = 0;
        for (; i<_this.length ; i++) {
          res.push(_this[i]);
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      sort :function _trc_TQuery_sort() {
        "use strict";
        var _this=this;
        
        return _this.applyArrayMethod("sort",arguments);
      },
      fiber$sort :function _trc_TQuery_f_sort(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_TQuery_ent_sort(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$applyArrayMethod(_thread, "sort", _arguments);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      slice :function _trc_TQuery_slice() {
        "use strict";
        var _this=this;
        
        return _this.applyArrayMethod("slice",arguments);
      },
      fiber$slice :function _trc_TQuery_f_slice(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_TQuery_ent_slice(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$applyArrayMethod(_thread, "slice", _arguments);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      maxs :function _trc_TQuery_maxs(key) {
        "use strict";
        var _this=this;
        var f;
        var res;
        var reso;
        var o;
        var _it_5508;
        var v;
        
        f = _this.genKeyfunc(key);
        
        reso = _this.create();
        
        _it_5508=Tonyu.iterator(_this,1);
        while(_it_5508.next()) {
          o=_it_5508[0];
          
          v = f(o);
          
          if (res==null||v>=res) {
            if (v>res) {
              reso=_this.create();
            }
            reso.push(o);
            res=v;
            
          }
          
        }
        return reso;
      },
      fiber$maxs :function _trc_TQuery_f_maxs(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var f;
        var res;
        var reso;
        var o;
        var _it_5508;
        var v;
        
        
        _thread.enter(function _trc_TQuery_ent_maxs(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$genKeyfunc(_thread, key);
              __pc=1;return;
            case 1:
              f=_thread.retVal;
              
              _this.fiber$create(_thread);
              __pc=2;return;
            case 2:
              reso=_thread.retVal;
              
              _it_5508=Tonyu.iterator(_this,1);
            case 3:
              if (!(_it_5508.next())) { __pc=7     ; break; }
              o=_it_5508[0];
              
              v = f(o);
              
              if (!(res==null||v>=res)) { __pc=6     ; break; }
              if (!(v>res)) { __pc=5     ; break; }
              _this.fiber$create(_thread);
              __pc=4;return;
            case 4:
              reso=_thread.retVal;
              
            case 5     :
              
              reso.push(o);
              res=v;
            case 6     :
              
              __pc=3;break;
            case 7     :
              
              _thread.exit(reso);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      mins :function _trc_TQuery_mins(key) {
        "use strict";
        var _this=this;
        var f;
        var res;
        var reso;
        var o;
        var _it_5515;
        var v;
        
        f = _this.genKeyfunc(key);
        
        reso = _this.create();
        
        _it_5515=Tonyu.iterator(_this,1);
        while(_it_5515.next()) {
          o=_it_5515[0];
          
          v = f(o);
          
          if (res==null||v<=res) {
            if (v<res) {
              reso=_this.create();
            }
            reso.push(o);
            res=v;
            
          }
          
        }
        return reso;
      },
      fiber$mins :function _trc_TQuery_f_mins(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var f;
        var res;
        var reso;
        var o;
        var _it_5515;
        var v;
        
        
        _thread.enter(function _trc_TQuery_ent_mins(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$genKeyfunc(_thread, key);
              __pc=1;return;
            case 1:
              f=_thread.retVal;
              
              _this.fiber$create(_thread);
              __pc=2;return;
            case 2:
              reso=_thread.retVal;
              
              _it_5515=Tonyu.iterator(_this,1);
            case 3:
              if (!(_it_5515.next())) { __pc=7     ; break; }
              o=_it_5515[0];
              
              v = f(o);
              
              if (!(res==null||v<=res)) { __pc=6     ; break; }
              if (!(v<res)) { __pc=5     ; break; }
              _this.fiber$create(_thread);
              __pc=4;return;
            case 4:
              reso=_thread.retVal;
              
            case 5     :
              
              reso.push(o);
              res=v;
            case 6     :
              
              __pc=3;break;
            case 7     :
              
              _thread.exit(reso);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      minObj :function _trc_TQuery_minObj(key) {
        "use strict";
        var _this=this;
        
        return _this.mins(key)[0];
      },
      fiber$minObj :function _trc_TQuery_f_minObj(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.mins(key)[0];return;
        
        
        _thread.retVal=_this;return;
      },
      maxObj :function _trc_TQuery_maxObj(key) {
        "use strict";
        var _this=this;
        
        return _this.maxs(key)[0];
      },
      fiber$maxObj :function _trc_TQuery_f_maxObj(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.maxs(key)[0];return;
        
        
        _thread.retVal=_this;return;
      },
      nearests :function _trc_TQuery_nearests(x,y) {
        "use strict";
        var _this=this;
        var z;
        
        
        if (x==null) {
          if (! _this.parent) {
            throw new Error("nearests: 座標を指定してください");
            
          }
          x=_this.parent.x;
          y=_this.parent.y;
          if (_this.context.is3D) {
            z=_this.parent.z;
          }
          
        }
        if (typeof  x=="object") {
          y=x.y;
          x=x.x;
          
        }
        if (_this.context.is3D) {
          return _this.mins((function anonymous_3077(o) {
            
            return _this.context.actor.dist(o);
          }));
          
        }
        return _this.mins((function anonymous_3163(o) {
          
          return _this.dist(o.x-x,o.y-y);
        }));
      },
      fiber$nearests :function _trc_TQuery_f_nearests(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var z;
        
        
        if (x==null) {
          if (! _this.parent) {
            throw new Error("nearests: 座標を指定してください");
            
          }
          x=_this.parent.x;
          y=_this.parent.y;
          if (_this.context.is3D) {
            z=_this.parent.z;
          }
          
        }
        if (typeof  x=="object") {
          y=x.y;
          x=x.x;
          
        }
        
        _thread.enter(function _trc_TQuery_ent_nearests(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.context.is3D)) { __pc=2     ; break; }
              _this.fiber$mins(_thread, (function anonymous_3077(o) {
                
                return _this.context.actor.dist(o);
              }));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              _this.fiber$mins(_thread, (function anonymous_3163(o) {
                
                return _this.dist(o.x-x,o.y-y);
              }));
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      nearest :function _trc_TQuery_nearest(x,y) {
        "use strict";
        var _this=this;
        
        return _this.nearests(x,y)[0];
      },
      fiber$nearest :function _trc_TQuery_f_nearest(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.nearests(x,y)[0];return;
        
        
        _thread.retVal=_this;return;
      },
      withins :function _trc_TQuery_withins(xo,yd,d) {
        "use strict";
        var _this=this;
        var x;
        var y;
        var z;
        
        
        if (arguments.length==1) {
          if (! _this.parent) {
            throw new Error("withins: 座標を指定してください");
            
          }
          x=_this.parent.x;
          y=_this.parent.y;
          if (_this.context.is3D) {
            z=_this.parent.z;
          }
          d=xo;
          
        } else {
          if (typeof  xo=="object") {
            x=xo.x;
            y=xo.y;
            d=yd;
            
          } else {
            x=xo;
            y=yd;
            
          }
        }
        if (_this.context.is3D) {
          return _this.find((function anonymous_3649(o) {
            
            return _this.context.actor.dist(o)<=d;
          }));
          
        }
        return _this.find((function anonymous_3742(o) {
          
          return _this.dist(o.x-x,o.y-y)<=d;
        }));
      },
      fiber$withins :function _trc_TQuery_f_withins(_thread,xo,yd,d) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var x;
        var y;
        var z;
        
        
        if (_arguments.length==1) {
          if (! _this.parent) {
            throw new Error("withins: 座標を指定してください");
            
          }
          x=_this.parent.x;
          y=_this.parent.y;
          if (_this.context.is3D) {
            z=_this.parent.z;
          }
          d=xo;
          
        } else {
          if (typeof  xo=="object") {
            x=xo.x;
            y=xo.y;
            d=yd;
            
          } else {
            x=xo;
            y=yd;
            
          }
        }
        
        _thread.enter(function _trc_TQuery_ent_withins(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.context.is3D)) { __pc=2     ; break; }
              _this.fiber$find(_thread, (function anonymous_3649(o) {
                
                return _this.context.actor.dist(o)<=d;
              }));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              _this.fiber$find(_thread, (function anonymous_3742(o) {
                
                return _this.dist(o.x-x,o.y-y)<=d;
              }));
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      within :function _trc_TQuery_within(xo,yd,d) {
        "use strict";
        var _this=this;
        
        return _this.withins(xo,yd,d).nearest();
      },
      fiber$within :function _trc_TQuery_f_within(_thread,xo,yd,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.withins(xo,yd,d).nearest();return;
        
        
        _thread.retVal=_this;return;
      },
      max :function _trc_TQuery_max(key) {
        "use strict";
        var _this=this;
        var f;
        var res;
        var o;
        var _it_5530;
        var v;
        
        f = _this.genKeyfunc(key);
        
        
        _it_5530=Tonyu.iterator(_this,1);
        while(_it_5530.next()) {
          o=_it_5530[0];
          
          v = f(o);
          
          if (res==null||v>res) {
            res=v;
          }
          
        }
        return res;
      },
      min :function _trc_TQuery_min(key) {
        "use strict";
        var _this=this;
        var f;
        var res;
        var o;
        var _it_5536;
        var v;
        
        f = _this.genKeyfunc(key);
        
        
        _it_5536=Tonyu.iterator(_this,1);
        while(_it_5536.next()) {
          o=_it_5536[0];
          
          v = f(o);
          
          if (res==null||v<res) {
            res=v;
          }
          
        }
        return res;
      },
      push :function _trc_TQuery_push(e) {
        "use strict";
        var _this=this;
        var ee;
        var _it_5542;
        
        if (Tonyu.is(e,Tonyu.classes.kernel.TQuery)||Tonyu.is(e,Array)) {
          _it_5542=Tonyu.iterator(e,1);
          while(_it_5542.next()) {
            ee=_it_5542[0];
            
            _this.push(ee);
          }
          
        } else {
          _this[_this.length]=e;
          _this.length++;
          
        }
      },
      fiber$push :function _trc_TQuery_f_push(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ee;
        var _it_5542;
        
        
        _thread.enter(function _trc_TQuery_ent_push(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(Tonyu.is(e,Tonyu.classes.kernel.TQuery)||Tonyu.is(e,Array))) { __pc=4     ; break; }
              _it_5542=Tonyu.iterator(e,1);
            case 1:
              if (!(_it_5542.next())) { __pc=3     ; break; }
              ee=_it_5542[0];
              
              _this.fiber$push(_thread, ee);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              __pc=5     ;break;
            case 4     :
              {
                _this[_this.length]=e;
                _this.length++;
              }
            case 5     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      size :function _trc_TQuery_size() {
        "use strict";
        var _this=this;
        
        return _this.length;
      },
      fiber$size :function _trc_TQuery_f_size(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.length;return;
        
        
        _thread.retVal=_this;return;
      },
      find :function _trc_TQuery_find(f) {
        "use strict";
        var _this=this;
        var no;
        var q;
        var o;
        var _it_5545;
        
        no = _this.create();
        
        if (typeof  f==="object") {
          q = f;
          
          f=(function anonymous_4483(o) {
            var k;
            var v;
            var _it_5551;
            
            _it_5551=Tonyu.iterator(q,2);
            while(_it_5551.next()) {
              k=_it_5551[0];
              v=_it_5551[1];
              
              if (o[k]!==v) {
                return false;
              }
              
            }
            return true;
          });
          
        }
        _it_5545=Tonyu.iterator(_this,1);
        while(_it_5545.next()) {
          o=_it_5545[0];
          
          if (f(o)) {
            no.push(o);
          }
          
        }
        return no;
      },
      fiber$find :function _trc_TQuery_f_find(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var no;
        var q;
        var o;
        var _it_5545;
        
        
        _thread.enter(function _trc_TQuery_ent_find(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$create(_thread);
              __pc=1;return;
            case 1:
              no=_thread.retVal;
              
              if (!(typeof  f==="object")) { __pc=2     ; break; }
              q = f;
              
              f=(function anonymous_4483(o) {
                var k;
                var v;
                var _it_5551;
                
                _it_5551=Tonyu.iterator(q,2);
                while(_it_5551.next()) {
                  k=_it_5551[0];
                  v=_it_5551[1];
                  
                  if (o[k]!==v) {
                    return false;
                  }
                  
                }
                return true;
              });
            case 2     :
              
              _it_5545=Tonyu.iterator(_this,1);
              while(_it_5545.next()) {
                o=_it_5545[0];
                
                if (f(o)) {
                  no.push(o);
                }
                
              }
              _thread.exit(no);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      find1 :function _trc_TQuery_find1(f) {
        "use strict";
        var _this=this;
        
        return _this.find(f)[0];
      },
      fiber$find1 :function _trc_TQuery_f_find1(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.find(f)[0];return;
        
        
        _thread.retVal=_this;return;
      },
      random :function _trc_TQuery_random() {
        "use strict";
        var _this=this;
        
        if (_this.length===0) {
          return null;
        }
        return _this[_this.rnd(_this.length)];
      },
      fiber$random :function _trc_TQuery_f_random(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.length===0) {
          _thread.retVal=null;return;
          
        }
        _thread.retVal=_this[_this.rnd(_this.length)];return;
        
        
        _thread.retVal=_this;return;
      },
      apply :function _trc_TQuery_apply(name,args) {
        "use strict";
        var _this=this;
        var res;
        var o;
        var _it_5555;
        var f;
        
        
        if (! args) {
          args=[];
        }
        _it_5555=Tonyu.iterator(_this,1);
        while(_it_5555.next()) {
          o=_it_5555[0];
          
          f = o[name];
          
          if (typeof  f=="function") {
            res=f.apply(o,args);
            
          }
          
        }
        return res;
      },
      fiber$apply :function _trc_TQuery_f_apply(_thread,name,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var o;
        var _it_5555;
        var f;
        
        
        if (! args) {
          args=[];
        }
        _it_5555=Tonyu.iterator(_this,1);
        while(_it_5555.next()) {
          o=_it_5555[0];
          
          f = o[name];
          
          if (typeof  f=="function") {
            res=f.apply(o,args);
            
          }
          
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      alive :function _trc_TQuery_alive() {
        "use strict";
        var _this=this;
        
        return _this.find((function anonymous_5141(o) {
          
          return ! o.isDead();
        }));
      },
      fiber$alive :function _trc_TQuery_f_alive(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_TQuery_ent_alive(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$find(_thread, (function anonymous_5141(o) {
                
                return ! o.isDead();
              }));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      die :function _trc_TQuery_die() {
        "use strict";
        var _this=this;
        var a;
        
        a = _this.alive();
        
        if (a.length==0) {
          return false;
        }
        a.apply("die");
        return true;
      },
      fiber$die :function _trc_TQuery_f_die(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        
        
        _thread.enter(function _trc_TQuery_ent_die(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$alive(_thread);
              __pc=1;return;
            case 1:
              a=_thread.retVal;
              
              if (!(a.length==0)) { __pc=2     ; break; }
              _thread.exit(false);return;
            case 2     :
              
              a.apply("die");
              _thread.exit(true);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      klass :function _trc_TQuery_klass(k) {
        "use strict";
        var _this=this;
        
        return _this.find((function anonymous_5328(o) {
          
          return o instanceof k;
        }));
      },
      fiber$klass :function _trc_TQuery_f_klass(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_TQuery_ent_klass(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$find(_thread, (function anonymous_5328(o) {
                
                return o instanceof k;
              }));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      sendEvent :function _trc_TQuery_sendEvent() {
        "use strict";
        var _this=this;
        
        return Tonyu.bindFunc(_this,_this.apply).apply(_this,["sendEvent",arguments]);
      },
      fiber$sendEvent :function _trc_TQuery_f_sendEvent(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.bindFunc(_this,_this.apply).apply(_this,["sendEvent",_arguments]);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"__getter__parent":{"nowait":true},"create":{"nowait":false},"contains":{"nowait":false},"tonyuIterator":{"nowait":false},"attr":{"nowait":false},"genKeyfunc":{"nowait":false},"applyArrayMethod":{"nowait":false},"toArray":{"nowait":false},"sort":{"nowait":false},"slice":{"nowait":false},"maxs":{"nowait":false},"mins":{"nowait":false},"minObj":{"nowait":false},"maxObj":{"nowait":false},"nearests":{"nowait":false},"nearest":{"nowait":false},"withins":{"nowait":false},"within":{"nowait":false},"max":{"nowait":true},"min":{"nowait":true},"push":{"nowait":false},"size":{"nowait":false},"find":{"nowait":false},"find1":{"nowait":false},"random":{"nowait":false},"apply":{"nowait":false},"alive":{"nowait":false},"die":{"nowait":false},"klass":{"nowait":false},"sendEvent":{"nowait":false}},"fields":{"length":{},"context":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Zip',
  shortName: 'Zip',
  namespace: 'kernel',
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Zip_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Zip_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      zip :function _trc_Zip_zip(srcdir,zipfile) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$currentProject.requestPlugin("JSZip");
        FS.zip.setJSZip(JSZip);
        return FS.zip.zip(srcdir,zipfile);
      },
      fiber$zip :function _trc_Zip_f_zip(_thread,srcdir,zipfile) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$currentProject.requestPlugin("JSZip");
        FS.zip.setJSZip(JSZip);
        _thread.retVal=FS.zip.zip(srcdir,zipfile);return;
        
        
        _thread.retVal=_this;return;
      },
      unzip :function _trc_Zip_unzip(zipfile,dstdir) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$currentProject.requestPlugin("JSZip");
        FS.zip.setJSZip(JSZip);
        return FS.zip.unzip(zipfile,dstdir);
      },
      fiber$unzip :function _trc_Zip_f_unzip(_thread,zipfile,dstdir) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$currentProject.requestPlugin("JSZip");
        FS.zip.setJSZip(JSZip);
        _thread.retVal=FS.zip.unzip(zipfile,dstdir);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"zip":{"nowait":false},"unzip":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.EventHandler',
  shortName: 'EventHandler',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.EventHandlerCaller],
  methods: function (__superClass) {
    return {
      main :function _trc_EventHandler_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_EventHandler_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_EventHandler_initialize(param) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [param]);
        _this.listeners=[];
      },
      toListener :function _trc_EventHandler_toListener(f) {
        "use strict";
        var _this=this;
        
        if (_this.target&&(typeof  f)=="string") {
          f=_this.target[f];
          
        }
        if (typeof  f!="function") {
          throw new Error("Not a event listener: "+_this.target+" / "+f);
          
        }
        return f;
      },
      newListener :function _trc_EventHandler_newListener(f) {
        "use strict";
        var _this=this;
        var listener;
        
        listener = {action: f};
        
        return listener;
      },
      addListener :function _trc_EventHandler_addListener() {
        "use strict";
        var _this=this;
        var a;
        var f;
        var listener;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments).toArray();
        
        f = a.pop();
        
        f=_this.toListener(f);
        a.push(f);
        listener = Tonyu.bindFunc(_this,_this.newListener).apply(_this,a);
        
        listener.remove=(function anonymous_700() {
          
          _this.removeListener(listener);
        });
        listener.dispose=listener.dispose||(function anonymous_785() {
          
        });
        listener.action=listener.action||f;
        _this.listeners.push(listener);
        return listener;
      },
      doDispose :function _trc_EventHandler_doDispose(listener) {
        "use strict";
        var _this=this;
        
        if (typeof  listener.dispose==="function") {
          listener.dispose({last: _this.listeners.length==0,listener: listener});
          
        }
      },
      removeListener :function _trc_EventHandler_removeListener(listener) {
        "use strict";
        var _this=this;
        var i;
        
        i = _this.listeners.indexOf(listener);
        
        if (i>=0) {
          _this.listeners.splice(i,1);
          _this.doDispose(listener);
          
        }
      },
      removeAllListeners :function _trc_EventHandler_removeAllListeners() {
        "use strict";
        var _this=this;
        var listener;
        
        
        while (listener=_this.listeners.shift()) {
          _this.doDispose(listener);
          
        }
      },
      fire :function _trc_EventHandler_fire(args) {
        "use strict";
        var _this=this;
        var listener;
        var _it_5569;
        
        if (_this.released) {
          return _this;
        }
        _it_5569=Tonyu.iterator(_this.listeners.slice(),1);
        while(_it_5569.next()) {
          listener=_it_5569[0];
          
          _this.callEventHandler(listener.action,args);
          
        }
      },
      fiber$fire :function _trc_EventHandler_f_fire(_thread,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var listener;
        var _it_5569;
        
        if (_this.released) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_EventHandler_ent_fire(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_5569=Tonyu.iterator(_this.listeners.slice(),1);
            case 1:
              if (!(_it_5569.next())) { __pc=3     ; break; }
              listener=_it_5569[0];
              
              _this.fiber$callEventHandler(_thread, listener.action, args);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      release :function _trc_EventHandler_release() {
        "use strict";
        var _this=this;
        
        _this.released=true;
        _this.removeAllListeners();
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"toListener":{"nowait":true},"newListener":{"nowait":true},"addListener":{"nowait":true},"doDispose":{"nowait":true},"removeListener":{"nowait":true},"removeAllListeners":{"nowait":true},"fire":{"nowait":false},"release":{"nowait":true}},"fields":{"listeners":{},"target":{},"released":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ScreenOutHandler',
  shortName: 'ScreenOutHandler',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.EventHandler,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ScreenOutHandler_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ScreenOutHandler_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      addListener :function _trc_ScreenOutHandler_addListener(d,f) {
        "use strict";
        var _this=this;
        var retThread;
        
        retThread = _this.target.parallel("screenOutChecker",d,_this.toListener(f));
        
        return {remove: (function anonymous_147() {
          
          retThread.kill();
        })};
      },
      initialize :function _trc_ScreenOutHandler_initialize(param) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [param]);
        _this.id=(Tonyu.globals.$idseq=(Tonyu.globals.$idseq||0)+1);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"addListener":{"nowait":true},"new":{"nowait":false}},"fields":{"id":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.WithinHandler',
  shortName: 'WithinHandler',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.EventHandler,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_WithinHandler_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_WithinHandler_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      addListener :function _trc_WithinHandler_addListener(d,r,f) {
        "use strict";
        var _this=this;
        var retThread;
        
        retThread = _this.target.parallel("withinChecker",d,r,_this.toListener(f));
        
        return {remove: (function anonymous_149() {
          
          retThread.kill();
        })};
      },
      initialize :function _trc_WithinHandler_initialize(param) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [param]);
        _this.id=(Tonyu.globals.$idseq=(Tonyu.globals.$idseq||0)+1);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"addListener":{"nowait":true},"new":{"nowait":false}},"fields":{"id":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.AbstractShape',
  shortName: 'AbstractShape',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_AbstractShape_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_AbstractShape_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      clone :function _trc_AbstractShape_clone(value) {
        "use strict";
        var _this=this;
        
        throw new Error("clone::abstract");
        
      },
      fiber$clone :function _trc_AbstractShape_f_clone(_thread,value) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("clone::abstract");
        
        
        _thread.retVal=_this;return;
      },
      changeLayer :function _trc_AbstractShape_changeLayer(value) {
        "use strict";
        var _this=this;
        
        throw new Error("changeLayer::abstract");
        
      },
      fiber$changeLayer :function _trc_AbstractShape_f_changeLayer(_thread,value) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("changeLayer::abstract");
        
        
        _thread.retVal=_this;return;
      },
      intersects :function _trc_AbstractShape_intersects(s) {
        "use strict";
        var _this=this;
        
        if (! s) {
          return false;
        }
        if (s.layer===_this.layer||! s.layer||! _this.layer) {
          return _this.intersectsRaw(s);
          
        }
        return _this.intersectsRaw(s.layerChanged(_this.layer));
      },
      fiber$intersects :function _trc_AbstractShape_f_intersects(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! s) {
          _thread.retVal=false;return;
          
        }
        
        _thread.enter(function _trc_AbstractShape_ent_intersects(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(s.layer===_this.layer||! s.layer||! _this.layer)) { __pc=2     ; break; }
              _this.fiber$intersectsRaw(_thread, s);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              _this.fiber$intersectsRaw(_thread, s.layerChanged(_this.layer));
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      intersectsRaw :function _trc_AbstractShape_intersectsRaw(s) {
        "use strict";
        var _this=this;
        
        throw new Error("intersectsRaw::abstract");
        
      },
      fiber$intersectsRaw :function _trc_AbstractShape_f_intersectsRaw(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("intersectsRaw::abstract");
        
        
        _thread.retVal=_this;return;
      },
      contains :function _trc_AbstractShape_contains(s) {
        "use strict";
        var _this=this;
        var cv;
        
        if (! s) {
          return false;
        }
        if (s.layer===_this.layer||! s.layer||! _this.layer) {
          return _this.containsRaw(s);
          
        }
        cv = _this.screen.convert(s,_this.layer);
        
        return _this.intersectsRaw(cv);
      },
      fiber$contains :function _trc_AbstractShape_f_contains(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cv;
        
        if (! s) {
          _thread.retVal=false;return;
          
        }
        
        _thread.enter(function _trc_AbstractShape_ent_contains(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(s.layer===_this.layer||! s.layer||! _this.layer)) { __pc=2     ; break; }
              _this.fiber$containsRaw(_thread, s);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              cv = _this.screen.convert(s,_this.layer);
              
              _this.fiber$intersectsRaw(_thread, cv);
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      containsRaw :function _trc_AbstractShape_containsRaw(s) {
        "use strict";
        var _this=this;
        
        throw new Error("containsRaw::abstract");
        
      },
      fiber$containsRaw :function _trc_AbstractShape_f_containsRaw(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("containsRaw::abstract");
        
        
        _thread.retVal=_this;return;
      },
      layerChanged :function _trc_AbstractShape_layerChanged(layer) {
        "use strict";
        var _this=this;
        var res;
        
        res = _this.clone();
        
        res.layer=layer;
        return res;
      },
      fiber$layerChanged :function _trc_AbstractShape_f_layerChanged(_thread,layer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        
        _thread.enter(function _trc_AbstractShape_ent_layerChanged(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$clone(_thread);
              __pc=1;return;
            case 1:
              res=_thread.retVal;
              
              res.layer=layer;
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__layer :function _trc_AbstractShape___getter__layer() {
        "use strict";
        var _this=this;
        
        return _this._layer;
      },
      __setter__layer :function _trc_AbstractShape___setter__layer(value) {
        "use strict";
        var _this=this;
        
        if (! _this._layer||_this._layer===value) {
          _this._layer=value;
        } else {
          _this.changeLayer(value);
        }
      },
      __getter__screen :function _trc_AbstractShape___getter__screen() {
        "use strict";
        var _this=this;
        
        return (_this.layer&&_this.layer.screen)||Tonyu.globals.$Screen;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"clone":{"nowait":false},"changeLayer":{"nowait":false},"intersects":{"nowait":false},"intersectsRaw":{"nowait":false},"contains":{"nowait":false},"containsRaw":{"nowait":false},"layerChanged":{"nowait":false},"__getter__layer":{"nowait":true},"__setter__layer":{"nowait":true},"__getter__screen":{"nowait":true}},"fields":{"_layer":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.CubeShape',
  shortName: 'CubeShape',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_CubeShape_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_CubeShape_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      intersects :function _trc_CubeShape_intersects(s) {
        "use strict";
        var _this=this;
        
        return s&&Math.abs(_this.x-s.x)*2<_this.width+s.width&&Math.abs(_this.y-s.y)*2<_this.height+s.height&&Math.abs(_this.z-s.z)*2<_this.depth+s.depth;
      },
      fiber$intersects :function _trc_CubeShape_f_intersects(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=s&&Math.abs(_this.x-s.x)*2<_this.width+s.width&&Math.abs(_this.y-s.y)*2<_this.height+s.height&&Math.abs(_this.z-s.z)*2<_this.depth+s.depth;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"intersects":{"nowait":false}},"fields":{"x":{},"y":{},"z":{},"width":{},"height":{},"depth":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Direction',
  shortName: 'Direction',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Direction_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_Direction_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      initAxis :function _trc_Direction_initAxis() {
        "use strict";
        var _this=this;
        
        if (! Tonyu.classes.kernel.Direction.axis) {
          Tonyu.classes.kernel.Direction.axis={roll: new Tonyu.classes.kernel.Vec3(0,0,1),pitch: new Tonyu.classes.kernel.Vec3(1,0,0),yaw: new Tonyu.classes.kernel.Vec3(0,1,0)};
          
        }
      },
      fiber$initAxis :function _trc_Direction_f_initAxis(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! Tonyu.classes.kernel.Direction.axis) {
          Tonyu.classes.kernel.Direction.axis={roll: new Tonyu.classes.kernel.Vec3(0,0,1),pitch: new Tonyu.classes.kernel.Vec3(1,0,0),yaw: new Tonyu.classes.kernel.Vec3(0,1,0)};
          
        }
        
        _thread.retVal=_this;return;
      },
      clone :function _trc_Direction_clone() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.Direction().set(_this);
      },
      fiber$clone :function _trc_Direction_f_clone(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.Direction().set(_this);return;
        
        
        _thread.retVal=_this;return;
      },
      set :function _trc_Direction_set(d) {
        "use strict";
        var _this=this;
        
        _this.quaternion.set(d.quaternion);
        return _this;
      },
      fiber$set :function _trc_Direction_f_set(_thread,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.quaternion.set(d.quaternion);
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Direction_initialize(p) {
        "use strict";
        var _this=this;
        
        _this.initAxis();
        __superClass.apply( _this, [p]);
        _this.quaternion=new Tonyu.classes.kernel.Quaternion;
        _this.forward=new Tonyu.classes.kernel.ComputedVec3((function anonymous_565(t) {
          var r;
          
          r = _this.quaternion.rotate(Tonyu.classes.kernel.Direction.axis.roll);
          
          return t.keep(r);
        }));
        _this.down=new Tonyu.classes.kernel.ComputedVec3((function anonymous_689(t) {
          var r;
          
          r = _this.quaternion.rotate(Tonyu.classes.kernel.Direction.axis.yaw);
          
          return t.keep(r);
        }));
        _this.right=new Tonyu.classes.kernel.ComputedVec3((function anonymous_813(t) {
          var r;
          
          r = _this.quaternion.rotate(Tonyu.classes.kernel.Direction.axis.pitch);
          
          return t.keep(r);
        }));
        _this.back=new Tonyu.classes.kernel.ComputedVec3((function anonymous_938(t) {
          
          return _this.forward.mul(- 1);
        }));
        _this.up=new Tonyu.classes.kernel.ComputedVec3((function anonymous_1011(t) {
          
          return _this.down.mul(- 1);
        }));
        _this.left=new Tonyu.classes.kernel.ComputedVec3((function anonymous_1083(t) {
          
          return _this.right.mul(- 1);
        }));
      },
      rotate :function _trc_Direction_rotate(mode,angle,unit) {
        "use strict";
        var _this=this;
        var x;
        var y;
        var nx;
        var ny;
        var axis;
        
        
        if (Tonyu.is(mode,Tonyu.classes.kernel.Vec3)) {
          axis=mode;
        } else {
          axis=Tonyu.classes.kernel.Direction.axis[mode];
        }
        if (! axis) {
          _this.quaternion.set(new Tonyu.classes.kernel.Quaternion);
          
        } else {
          _this.quaternion.product(new Tonyu.classes.kernel.Quaternion({axis: axis,r: angle}),_this.quaternion);
          
        }
        _this.forward.requestCompute();
        _this.down.requestCompute();
        _this.right.requestCompute();
        return _this;
      },
      fiber$rotate :function _trc_Direction_f_rotate(_thread,mode,angle,unit) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var x;
        var y;
        var nx;
        var ny;
        var axis;
        
        
        if (Tonyu.is(mode,Tonyu.classes.kernel.Vec3)) {
          axis=mode;
        } else {
          axis=Tonyu.classes.kernel.Direction.axis[mode];
        }
        if (! axis) {
          _this.quaternion.set(new Tonyu.classes.kernel.Quaternion);
          
        } else {
          _this.quaternion.product(new Tonyu.classes.kernel.Quaternion({axis: axis,r: angle}),_this.quaternion);
          
        }
        _this.forward.requestCompute();
        _this.down.requestCompute();
        _this.right.requestCompute();
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      localToWorld :function _trc_Direction_localToWorld(local,dst) {
        "use strict";
        var _this=this;
        
        return _this.quaternion.rotate(local,dst);
      },
      fiber$localToWorld :function _trc_Direction_f_localToWorld(_thread,local,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.quaternion.rotate(local,dst);return;
        
        
        _thread.retVal=_this;return;
      },
      worldToLocal :function _trc_Direction_worldToLocal(world,dst) {
        "use strict";
        var _this=this;
        
        return _this.quaternion.inverse.rotate(world,dst);
      },
      fiber$worldToLocal :function _trc_Direction_f_worldToLocal(_thread,world,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.quaternion.inverse.rotate(world,dst);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initAxis":{"nowait":false},"clone":{"nowait":false},"set":{"nowait":false},"new":{"nowait":false},"rotate":{"nowait":false},"localToWorld":{"nowait":false},"worldToLocal":{"nowait":false}},"fields":{"forward":{},"down":{},"right":{},"back":{},"up":{},"left":{},"quaternion":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ParentChanger',
  shortName: 'ParentChanger',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ParentChanger_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_ParentChanger_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ParentChanger_initialize(dstParent) {
        "use strict";
        var _this=this;
        var cnode;
        var t;
        
        
        _this.nodes={};
        dstParent=dstParent||Tonyu.classes.kernel.Transform.root;
        _this.dstParent=dstParent;
        _this.nodes[dstParent.id]=cnode=_this.cn({transform: dstParent,isDst: true});
        t = dstParent.parent;
        for (; t ; t=t.parent) {
          {
            cnode=_this.cn({transform: t,next: cnode,relation: "child"});
            _this.nodes[t.id]=cnode;
          }
        }
      },
      cn :function _trc_ParentChanger_cn(n) {
        "use strict";
        var _this=this;
        
        switch (n.relation) {
        case "parent":
          _this.chk(n.next.transform.isParentOf(n.transform),"cn::parent not match");
          break;
          
        case "child":
          _this.chk(n.next.transform.isChildOf(n.transform),"cn::child not match");
          break;
          
        case "sibling":
          _this.chk(n.next.transform.isSibling(n.transform),"cn::sibling not match");
          break;
          
        default:
          _this.chk(n.isDst,"cn::relation not set");
        }
        return n;
      },
      fiber$cn :function _trc_ParentChanger_f_cn(_thread,n) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_ParentChanger_ent_cn(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              switch (n.relation) {
              case "parent":
                __pc=1     ;break;
              case "child":
                __pc=3     ;break;
              case "sibling":
                __pc=5     ;break;
              default:
                __pc=7     ;break;
                
              }
              break;
            case 1     :
              _this.fiber$chk(_thread, n.next.transform.isParentOf(n.transform), "cn::parent not match");
              __pc=2;return;
            case 2:
              
              __pc=9     ; break;
              
            case 3     :
              _this.fiber$chk(_thread, n.next.transform.isChildOf(n.transform), "cn::child not match");
              __pc=4;return;
            case 4:
              
              __pc=9     ; break;
              
            case 5     :
              _this.fiber$chk(_thread, n.next.transform.isSibling(n.transform), "cn::sibling not match");
              __pc=6;return;
            case 6:
              
              __pc=9     ; break;
              
            case 7     :
              _this.fiber$chk(_thread, n.isDst, "cn::relation not set");
              __pc=8;return;
            case 8:
              
              case 9     :
              
              _thread.exit(n);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      chk :function _trc_ParentChanger_chk(b,mesg) {
        "use strict";
        var _this=this;
        
        if (! b) {
          throw new Error("ParentChanger::"+mesg);
          
        }
      },
      fiber$chk :function _trc_ParentChanger_f_chk(_thread,b,mesg) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! b) {
          throw new Error("ParentChanger::"+mesg);
          
        }
        
        _thread.retVal=_this;return;
      },
      getNode :function _trc_ParentChanger_getNode(tt) {
        "use strict";
        var _this=this;
        var cnode;
        var prev;
        var path;
        var t;
        
        if (_this.nodes[tt.id]) {
          return _this.nodes[tt.id];
        }
        
        path = [];
        
        t = tt;
        
        while (true) {
          _this.chk(t,"t reached to root(null)");
          cnode=_this.nodes[t.id];
          if (cnode) {
            break;
            
            
          }
          path.unshift(t);
          t=t.parent;
          
        }
        if (cnode.relation==="child") {
          t=path.shift();
          cnode=_this.nodes[t.id]=_this.cn({next: cnode.next,relation: "sibling",transform: t});
          
        }
        while (t=path.shift()) {
          _this.chk(t.parent===cnode.transform,"getNode cnode parent not match");
          cnode=_this.nodes[t.id]=_this.cn({next: cnode,relation: "parent",transform: t});
          
        }
        _this.chk(cnode.transform===tt,"getNode cnode not match");
        return cnode;
      },
      fiber$getNode :function _trc_ParentChanger_f_getNode(_thread,tt) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cnode;
        var prev;
        var path;
        var t;
        
        if (_this.nodes[tt.id]) {
          _thread.retVal=_this.nodes[tt.id];return;
          
        }
        
        path = [];
        
        t = tt;
        
        
        _thread.enter(function _trc_ParentChanger_ent_getNode(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              _this.fiber$chk(_thread, t, "t reached to root(null)");
              __pc=2;return;
            case 2:
              
              cnode=_this.nodes[t.id];
              if (!(cnode)) { __pc=3     ; break; }
              __pc=4     ; break;
              
            case 3     :
              
              path.unshift(t);
              t=t.parent;
              __pc=1;break;
            case 4     :
              
              if (cnode.relation==="child") {
                t=path.shift();
                cnode=_this.nodes[t.id]=_this.cn({next: cnode.next,relation: "sibling",transform: t});
                
              }
            case 5:
              if (!(t=path.shift())) { __pc=7     ; break; }
              _this.fiber$chk(_thread, t.parent===cnode.transform, "getNode cnode parent not match");
              __pc=6;return;
            case 6:
              
              cnode=_this.nodes[t.id]=_this.cn({next: cnode,relation: "parent",transform: t});
              __pc=5;break;
            case 7     :
              
              _this.fiber$chk(_thread, cnode.transform===tt, "getNode cnode not match");
              __pc=8;return;
            case 8:
              
              _thread.exit(cnode);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      change :function _trc_ParentChanger_change(t,res) {
        "use strict";
        var _this=this;
        var n;
        var dstNode;
        
        res=res||new Tonyu.classes.kernel.Transform;
        res.set(t);
        if (res.parent===_this.dstParent) {
          return res;
        }
        n = _this.getNode(res.parent);
        
        dstNode = _this.getNode(_this.dstParent);
        
        while (n!==dstNode) {
          _this.chk(res.parent===n.transform,"convert not match ");
          switch (n.relation) {
          case "parent":
            n.transform.childToSibling(res,res);
            break;
            
          case "child":
            _this.chk(n.next.transform.isSibling(res),"convert::child not match");
            n.next.transform.siblingToChild(res,res);
            break;
            
          case "sibling":
            n.transform.childToSibling(res,res);
            _this.chk(n.next.transform.isSibling(res),"convert::sibling not match");
            n.next.transform.siblingToChild(res,res);
            break;
            
          default:
            _this.chk(false,"Unknown relation:"+n.relation+"/"+n.transform.id+"/"+_this.dstParent.id);
          }
          n=n.next;
          
        }
        _this.chk(res.parent===_this.dstParent,"change::fail");
        return res;
      },
      fiber$change :function _trc_ParentChanger_f_change(_thread,t,res) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var n;
        var dstNode;
        
        res=res||new Tonyu.classes.kernel.Transform;
        res.set(t);
        if (res.parent===_this.dstParent) {
          _thread.retVal=res;return;
          
        }
        
        _thread.enter(function _trc_ParentChanger_ent_change(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getNode(_thread, res.parent);
              __pc=1;return;
            case 1:
              n=_thread.retVal;
              
              _this.fiber$getNode(_thread, _this.dstParent);
              __pc=2;return;
            case 2:
              dstNode=_thread.retVal;
              
            case 3:
              if (!(n!==dstNode)) { __pc=13    ; break; }
              _this.fiber$chk(_thread, res.parent===n.transform, "convert not match ");
              __pc=4;return;
            case 4:
              
              switch (n.relation) {
              case "parent":
                __pc=5     ;break;
              case "child":
                __pc=6     ;break;
              case "sibling":
                __pc=8     ;break;
              default:
                __pc=10    ;break;
                
              }
              break;
            case 5     :
              n.transform.childToSibling(res,res);
              __pc=12    ; break;
              
            case 6     :
              _this.fiber$chk(_thread, n.next.transform.isSibling(res), "convert::child not match");
              __pc=7;return;
            case 7:
              
              n.next.transform.siblingToChild(res,res);
              __pc=12    ; break;
              
            case 8     :
              n.transform.childToSibling(res,res);
              _this.fiber$chk(_thread, n.next.transform.isSibling(res), "convert::sibling not match");
              __pc=9;return;
            case 9:
              
              n.next.transform.siblingToChild(res,res);
              __pc=12    ; break;
              
            case 10    :
              _this.fiber$chk(_thread, false, "Unknown relation:"+n.relation+"/"+n.transform.id+"/"+_this.dstParent.id);
              __pc=11;return;
            case 11:
              
              case 12    :
              
              n=n.next;
              __pc=3;break;
            case 13    :
              
              _this.fiber$chk(_thread, res.parent===_this.dstParent, "change::fail");
              __pc=14;return;
            case 14:
              
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"cn":{"nowait":false},"chk":{"nowait":false},"getNode":{"nowait":false},"change":{"nowait":false}},"fields":{"dstParent":{},"nodes":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PointShape',
  shortName: 'PointShape',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.AbstractShape,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_PointShape_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_PointShape_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      clone :function _trc_PointShape_clone() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.PointShape({x: _this.x,y: _this.y,_layer: _this._layer});
      },
      fiber$clone :function _trc_PointShape_f_clone(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.PointShape({x: _this.x,y: _this.y,_layer: _this._layer});return;
        
        
        _thread.retVal=_this;return;
      },
      changeLayer :function _trc_PointShape_changeLayer(newLayer) {
        "use strict";
        var _this=this;
        var c;
        
        c = _this.screen.convert({x: _this.x,y: _this.y,layer: _this._layer},newLayer);
        
        _this.x=c.x;
        _this.y=c.y;
        _this._layer=newLayer;
      },
      fiber$changeLayer :function _trc_PointShape_f_changeLayer(_thread,newLayer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        
        c = _this.screen.convert({x: _this.x,y: _this.y,layer: _this._layer},newLayer);
        
        _this.x=c.x;
        _this.y=c.y;
        _this._layer=newLayer;
        
        _thread.retVal=_this;return;
      },
      intersectsRaw :function _trc_PointShape_intersectsRaw(s) {
        "use strict";
        var _this=this;
        
        return s.containsRaw(_this);
      },
      fiber$intersectsRaw :function _trc_PointShape_f_intersectsRaw(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=s.containsRaw(_this);return;
        
        
        _thread.retVal=_this;return;
      },
      containsRaw :function _trc_PointShape_containsRaw(p) {
        "use strict";
        var _this=this;
        
        return p.x===_this.x&&p.y===_this.y;
      },
      fiber$containsRaw :function _trc_PointShape_f_containsRaw(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=p.x===_this.x&&p.y===_this.y;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__xmin :function _trc_PointShape___getter__xmin() {
        "use strict";
        var _this=this;
        
        return _this.x;
      },
      __getter__xmax :function _trc_PointShape___getter__xmax() {
        "use strict";
        var _this=this;
        
        return _this.x;
      },
      __getter__ymin :function _trc_PointShape___getter__ymin() {
        "use strict";
        var _this=this;
        
        return _this.y;
      },
      __getter__ymax :function _trc_PointShape___getter__ymax() {
        "use strict";
        var _this=this;
        
        return _this.y;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"clone":{"nowait":false},"changeLayer":{"nowait":false},"intersectsRaw":{"nowait":false},"containsRaw":{"nowait":false},"__getter__xmin":{"nowait":true},"__getter__xmax":{"nowait":true},"__getter__ymin":{"nowait":true},"__getter__ymax":{"nowait":true}},"fields":{"x":{},"y":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Quaternion',
  shortName: 'Quaternion',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Quaternion_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_Quaternion_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Quaternion_initialize(p) {
        "use strict";
        var _this=this;
        var v;
        
        __superClass.apply( _this, [p]);
        if (_this.axis&&typeof  _this.r==="number") {
          _this.theta=_this.r/2;
          v = _this.axis.normalize(_this.sin(_this.theta));
          
          _this.x=v.x;
          _this.y=v.y;
          _this.z=v.z;
          _this.w=_this.cos(_this.theta);
          
        } else {
          _this.x=_this.x||0;
          _this.y=_this.y||0;
          _this.z=_this.z||0;
          if (_this.w==null) {
            _this.w=1;
          }
          
        }
      },
      set :function _trc_Quaternion_set(q) {
        "use strict";
        var _this=this;
        
        _this.x=q.x;
        _this.y=q.y;
        _this.z=q.z;
        _this.w=q.w;
        return _this;
      },
      fiber$set :function _trc_Quaternion_f_set(_thread,q) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x=q.x;
        _this.y=q.y;
        _this.z=q.z;
        _this.w=q.w;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__length :function _trc_Quaternion___getter__length() {
        "use strict";
        var _this=this;
        
        return _this.sqrt(_this.lengthSQ);
      },
      __getter__lengthSQ :function _trc_Quaternion___getter__lengthSQ() {
        "use strict";
        var _this=this;
        
        return _this.x*_this.x+_this.y*_this.y+_this.z*_this.z+_this.w*_this.w;
      },
      clone :function _trc_Quaternion_clone() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.Quaternion({x: _this.x,y: _this.y,z: _this.z,w: _this.w});
      },
      fiber$clone :function _trc_Quaternion_f_clone(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.Quaternion({x: _this.x,y: _this.y,z: _this.z,w: _this.w});return;
        
        
        _thread.retVal=_this;return;
      },
      addX :function _trc_Quaternion_addX(q) {
        "use strict";
        var _this=this;
        
        _this.x+=q.x;
        _this.y+=q.y;
        _this.z+=q.z;
        _this.w+=q.w;
        return _this;
      },
      fiber$addX :function _trc_Quaternion_f_addX(_thread,q) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x+=q.x;
        _this.y+=q.y;
        _this.z+=q.z;
        _this.w+=q.w;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      add :function _trc_Quaternion_add(q) {
        "use strict";
        var _this=this;
        
        return _this.clone().addX(q);
      },
      fiber$add :function _trc_Quaternion_f_add(_thread,q) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().addX(q);return;
        
        
        _thread.retVal=_this;return;
      },
      subX :function _trc_Quaternion_subX(q) {
        "use strict";
        var _this=this;
        
        _this.x-=q.x;
        _this.y-=q.y;
        _this.z-=q.z;
        _this.w-=q.w;
        return _this;
      },
      fiber$subX :function _trc_Quaternion_f_subX(_thread,q) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x-=q.x;
        _this.y-=q.y;
        _this.z-=q.z;
        _this.w-=q.w;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      sub :function _trc_Quaternion_sub(q) {
        "use strict";
        var _this=this;
        
        return _this.clone().subX(q);
      },
      fiber$sub :function _trc_Quaternion_f_sub(_thread,q) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().subX(q);return;
        
        
        _thread.retVal=_this;return;
      },
      mulX :function _trc_Quaternion_mulX(k) {
        "use strict";
        var _this=this;
        
        _this.x*=k;
        _this.y*=k;
        _this.z*=k;
        _this.w*=k;
        return _this;
      },
      fiber$mulX :function _trc_Quaternion_f_mulX(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x*=k;
        _this.y*=k;
        _this.z*=k;
        _this.w*=k;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      mul :function _trc_Quaternion_mul(k) {
        "use strict";
        var _this=this;
        
        return _this.clone().mulX(k);
      },
      fiber$mul :function _trc_Quaternion_f_mul(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().mulX(k);return;
        
        
        _thread.retVal=_this;return;
      },
      product :function _trc_Quaternion_product(b,dst) {
        "use strict";
        var _this=this;
        var a;
        var qax;
        var qay;
        var qaz;
        var qaw;
        var qbx;
        var qby;
        var qbz;
        var qbw;
        
        a = _this;
        
        qax = a.x;
        qay = a.y;
        qaz = a.z;
        qaw = a.w;
        
        qbx = b.x;
        qby = b.y;
        qbz = b.z;
        qbw = b.w;
        
        if (! dst) {
          dst=new Tonyu.classes.kernel.Quaternion;
        }
        dst.x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;
        dst.y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;
        dst.z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;
        dst.w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;
        return dst;
      },
      fiber$product :function _trc_Quaternion_f_product(_thread,b,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var qax;
        var qay;
        var qaz;
        var qaw;
        var qbx;
        var qby;
        var qbz;
        var qbw;
        
        a = _this;
        
        qax = a.x;
        qay = a.y;
        qaz = a.z;
        qaw = a.w;
        
        qbx = b.x;
        qby = b.y;
        qbz = b.z;
        qbw = b.w;
        
        if (! dst) {
          dst=new Tonyu.classes.kernel.Quaternion;
        }
        dst.x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;
        dst.y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;
        dst.z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;
        dst.w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;
        _thread.retVal=dst;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__inverse :function _trc_Quaternion___getter__inverse() {
        "use strict";
        var _this=this;
        
        return _this.conjugate.mulX(1/_this.lengthSQ);
      },
      __getter__conjugate :function _trc_Quaternion___getter__conjugate() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.Quaternion({x: - _this.x,y: - _this.y,z: - _this.z,w: _this.w});
      },
      rotate :function _trc_Quaternion_rotate(p,dst) {
        "use strict";
        var _this=this;
        var x;
        var y;
        var z;
        var q;
        var qx;
        var qy;
        var qz;
        var qw;
        var ix;
        var iy;
        var iz;
        var iw;
        
        x = p.x;
        y = p.y;
        z = p.z;
        
        q = _this;
        
        qx = q.x;
        qy = q.y;
        qz = q.z;
        qw = q.w;
        
        ix = qw*x+qy*z-qz*y;
        
        iy = qw*y+qz*x-qx*z;
        
        iz = qw*z+qx*y-qy*x;
        
        iw = - qx*x-qy*y-qz*z;
        
        if (! dst) {
          dst=new Tonyu.classes.kernel.Vec3;
          
        }
        dst.x=ix*qw+iw*- qx+iy*- qz-iz*- qy;
        dst.y=iy*qw+iw*- qy+iz*- qx-ix*- qz;
        dst.z=iz*qw+iw*- qz+ix*- qy-iy*- qx;
        return dst;
      },
      fiber$rotate :function _trc_Quaternion_f_rotate(_thread,p,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var x;
        var y;
        var z;
        var q;
        var qx;
        var qy;
        var qz;
        var qw;
        var ix;
        var iy;
        var iz;
        var iw;
        
        x = p.x;
        y = p.y;
        z = p.z;
        
        q = _this;
        
        qx = q.x;
        qy = q.y;
        qz = q.z;
        qw = q.w;
        
        ix = qw*x+qy*z-qz*y;
        
        iy = qw*y+qz*x-qx*z;
        
        iz = qw*z+qx*y-qy*x;
        
        iw = - qx*x-qy*y-qz*z;
        
        if (! dst) {
          dst=new Tonyu.classes.kernel.Vec3;
          
        }
        dst.x=ix*qw+iw*- qx+iy*- qz-iz*- qy;
        dst.y=iy*qw+iw*- qy+iz*- qx-ix*- qz;
        dst.z=iz*qw+iw*- qz+ix*- qy-iy*- qx;
        _thread.retVal=dst;return;
        
        
        _thread.retVal=_this;return;
      },
      calcTheta :function _trc_Quaternion_calcTheta() {
        "use strict";
        var _this=this;
        
        _this.theta=_this.atanxy(_this.w,_this.sqrt(_this.x*_this.x+_this.y*_this.y+_this.z*_this.z));
        _this.r=_this.theta*2;
        return _this.theta;
      },
      fiber$calcTheta :function _trc_Quaternion_f_calcTheta(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.theta=_this.atanxy(_this.w,_this.sqrt(_this.x*_this.x+_this.y*_this.y+_this.z*_this.z));
        _this.r=_this.theta*2;
        _thread.retVal=_this.theta;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"set":{"nowait":false},"__getter__length":{"nowait":true},"__getter__lengthSQ":{"nowait":true},"clone":{"nowait":false},"addX":{"nowait":false},"add":{"nowait":false},"subX":{"nowait":false},"sub":{"nowait":false},"mulX":{"nowait":false},"mul":{"nowait":false},"product":{"nowait":false},"__getter__inverse":{"nowait":true},"__getter__conjugate":{"nowait":true},"rotate":{"nowait":false},"calcTheta":{"nowait":false}},"fields":{"x":{},"y":{},"z":{},"w":{},"axis":{},"r":{},"theta":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.RectShape',
  shortName: 'RectShape',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.AbstractShape,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_RectShape_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_RectShape_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      clone :function _trc_RectShape_clone() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.RectShape({x: _this.x,y: _this.y,width: _this.width,height: _this.height,_layer: _this._layer});
      },
      fiber$clone :function _trc_RectShape_f_clone(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.RectShape({x: _this.x,y: _this.y,width: _this.width,height: _this.height,_layer: _this._layer});return;
        
        
        _thread.retVal=_this;return;
      },
      changeLayer :function _trc_RectShape_changeLayer(newLayer) {
        "use strict";
        var _this=this;
        var c;
        var rb;
        
        c = _this.screen.convert({x: _this.x,y: _this.y,layer: _this._layer},newLayer);
        
        rb = _this.screen.convert({x: _this.x+_this.width,y: _this.y+_this.height,layer: _this._layer},newLayer);
        
        _this.x=c.x;
        _this.y=c.y;
        _this.width=(rb.x-c.x);
        _this.height=(rb.y-c.y);
        _this._layer=newLayer;
      },
      fiber$changeLayer :function _trc_RectShape_f_changeLayer(_thread,newLayer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        var rb;
        
        c = _this.screen.convert({x: _this.x,y: _this.y,layer: _this._layer},newLayer);
        
        rb = _this.screen.convert({x: _this.x+_this.width,y: _this.y+_this.height,layer: _this._layer},newLayer);
        
        _this.x=c.x;
        _this.y=c.y;
        _this.width=(rb.x-c.x);
        _this.height=(rb.y-c.y);
        _this._layer=newLayer;
        
        _thread.retVal=_this;return;
      },
      intersectsRaw :function _trc_RectShape_intersectsRaw(s) {
        "use strict";
        var _this=this;
        
        if (Tonyu.is(s,Tonyu.classes.kernel.RectShape)) {
          return Math.abs(_this.x-s.x)*2<_this.width+s.width&&Math.abs(_this.y-s.y)*2<_this.height+s.height;
          
        }
        return _this.containsRaw(s);
      },
      fiber$intersectsRaw :function _trc_RectShape_f_intersectsRaw(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (Tonyu.is(s,Tonyu.classes.kernel.RectShape)) {
          _thread.retVal=Math.abs(_this.x-s.x)*2<_this.width+s.width&&Math.abs(_this.y-s.y)*2<_this.height+s.height;return;
          
          
        }
        
        _thread.enter(function _trc_RectShape_ent_intersectsRaw(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$containsRaw(_thread, s);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      containsRaw :function _trc_RectShape_containsRaw(p) {
        "use strict";
        var _this=this;
        
        return p.x>=_this.xmin&&p.x<=_this.xmax&&p.y>=_this.ymin&&p.y<=_this.ymax;
      },
      fiber$containsRaw :function _trc_RectShape_f_containsRaw(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=p.x>=_this.xmin&&p.x<=_this.xmax&&p.y>=_this.ymin&&p.y<=_this.ymax;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__xmin :function _trc_RectShape___getter__xmin() {
        "use strict";
        var _this=this;
        
        return _this.x-_this.width/2;
      },
      __getter__xmax :function _trc_RectShape___getter__xmax() {
        "use strict";
        var _this=this;
        
        return _this.x+_this.width/2;
      },
      __getter__ymin :function _trc_RectShape___getter__ymin() {
        "use strict";
        var _this=this;
        
        return _this.y-_this.height/2;
      },
      __getter__ymax :function _trc_RectShape___getter__ymax() {
        "use strict";
        var _this=this;
        
        return _this.y+_this.height/2;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"clone":{"nowait":false},"changeLayer":{"nowait":false},"intersectsRaw":{"nowait":false},"containsRaw":{"nowait":false},"__getter__xmin":{"nowait":true},"__getter__xmax":{"nowait":true},"__getter__ymin":{"nowait":true},"__getter__ymax":{"nowait":true}},"fields":{"x":{},"y":{},"width":{},"height":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Transform',
  shortName: 'Transform',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Transform_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
        
        
      },
      fiber$main :function _trc_Transform_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        
        
        _thread.retVal=_this;return;
      },
      _static :function _trc_Transform__static() {
        "use strict";
        var _this=this;
        
        if (! Tonyu.classes.kernel.Transform._static) {
          Tonyu.classes.kernel.Transform._static=true;
          Tonyu.classes.kernel.Transform.IDSEQ=1;
          Tonyu.classes.kernel.Transform.root=new Tonyu.classes.kernel.Transform;
          
        }
      },
      fiber$_static :function _trc_Transform_f__static(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! Tonyu.classes.kernel.Transform._static) {
          Tonyu.classes.kernel.Transform._static=true;
          Tonyu.classes.kernel.Transform.IDSEQ=1;
          Tonyu.classes.kernel.Transform.root=new Tonyu.classes.kernel.Transform;
          
        }
        
        _thread.retVal=_this;return;
      },
      __setter__parent :function _trc_Transform___setter__parent(p) {
        "use strict";
        var _this=this;
        
        if (_this._parent===p) {
          return _this;
        }
        _this._parent=p;
      },
      __getter__parent :function _trc_Transform___getter__parent() {
        "use strict";
        var _this=this;
        
        return _this._parent;
      },
      __getter__quaternion :function _trc_Transform___getter__quaternion() {
        "use strict";
        var _this=this;
        
        return _this.direction.quaternion;
      },
      initialize :function _trc_Transform_initialize(param) {
        "use strict";
        var _this=this;
        
        _this._static();
        __superClass.apply( _this, [param]);
        _this.id=Tonyu.classes.kernel.Transform.IDSEQ++;
        _this.scale=_this.scale||1;
        _this.direction=_this.direction||new Tonyu.classes.kernel.Direction;
        _this.position=_this.position||new Tonyu.classes.kernel.Vec3(0,0,0);
      },
      child :function _trc_Transform_child(param) {
        "use strict";
        var _this=this;
        
        param.parent=_this;
        return new Tonyu.classes.kernel.Transform(param);
      },
      fiber$child :function _trc_Transform_f_child(_thread,param) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        param.parent=_this;
        _thread.retVal=new Tonyu.classes.kernel.Transform(param);return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__isRoot :function _trc_Transform___getter__isRoot() {
        "use strict";
        var _this=this;
        
        return _this===Tonyu.classes.kernel.Transform.root;
      },
      clone :function _trc_Transform_clone() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.Transform().set(_this);
      },
      fiber$clone :function _trc_Transform_f_clone(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.Transform().set(_this);return;
        
        
        _thread.retVal=_this;return;
      },
      set :function _trc_Transform_set(t) {
        "use strict";
        var _this=this;
        
        _this.position.set(t.position);
        _this.direction.set(t.direction);
        _this.scale=t.scale;
        _this._parent=t.parent;
        return _this;
      },
      fiber$set :function _trc_Transform_f_set(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.position.set(t.position);
        _this.direction.set(t.direction);
        _this.scale=t.scale;
        _this._parent=t.parent;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      product :function _trc_Transform_product(t,dst) {
        "use strict";
        var _this=this;
        var writeToThis;
        
        
        if (dst===_this) {
          writeToThis=true;
          dst=false;
          
        }
        if (! dst) {
          dst=new Tonyu.classes.kernel.Transform;
        }
        _this.quaternion.product(t.quaternion,dst.quaternion);
        dst.scale=_this.scale*t.scale;
        _this.localToWorld(t.position,dst.position);
        if (writeToThis) {
          _this.set(dst);
          return _this;
          
        }
        return dst;
      },
      fiber$product :function _trc_Transform_f_product(_thread,t,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var writeToThis;
        
        
        if (dst===_this) {
          writeToThis=true;
          dst=false;
          
        }
        if (! dst) {
          dst=new Tonyu.classes.kernel.Transform;
        }
        _this.quaternion.product(t.quaternion,dst.quaternion);
        dst.scale=_this.scale*t.scale;
        
        _thread.enter(function _trc_Transform_ent_product(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$localToWorld(_thread, t.position, dst.position);
              __pc=1;return;
            case 1:
              
              if (!(writeToThis)) { __pc=3     ; break; }
              _this.fiber$set(_thread, dst);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            case 3     :
              
              _thread.exit(dst);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      parentChanged :function _trc_Transform_parentChanged(to,dst) {
        "use strict";
        var _this=this;
        var p;
        
        p = new Tonyu.classes.kernel.ParentChanger(to);
        
        return p.change(_this,dst);
      },
      fiber$parentChanged :function _trc_Transform_f_parentChanged(_thread,to,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        
        p = new Tonyu.classes.kernel.ParentChanger(to);
        
        _thread.retVal=p.change(_this,dst);return;
        
        
        _thread.retVal=_this;return;
      },
      changeParent :function _trc_Transform_changeParent(to) {
        "use strict";
        var _this=this;
        var c;
        
        c = _this.parentChanged(to);
        
        return _this.set(c);
      },
      fiber$changeParent :function _trc_Transform_f_changeParent(_thread,to) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        
        
        _thread.enter(function _trc_Transform_ent_changeParent(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$parentChanged(_thread, to);
              __pc=1;return;
            case 1:
              c=_thread.retVal;
              
              _this.fiber$set(_thread, c);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      localToWorld :function _trc_Transform_localToWorld(local,dst) {
        "use strict";
        var _this=this;
        
        return _this.childToSibling(local,dst);
      },
      fiber$localToWorld :function _trc_Transform_f_localToWorld(_thread,local,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Transform_ent_localToWorld(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$childToSibling(_thread, local, dst);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      childToSibling :function _trc_Transform_childToSibling(child,dst) {
        "use strict";
        var _this=this;
        var res;
        
        if (Tonyu.is(child,Tonyu.classes.kernel.Transform)) {
          res = _this.product(child,dst);
          
          res._parent=_this.parent;
          return res;
          
        }
        dst=_this.direction.localToWorld(child,dst);
        dst.mulX(_this.scale);
        dst.addX_v(_this.position);
        return dst;
      },
      fiber$childToSibling :function _trc_Transform_f_childToSibling(_thread,child,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        
        _thread.enter(function _trc_Transform_ent_childToSibling(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(Tonyu.is(child,Tonyu.classes.kernel.Transform))) { __pc=2     ; break; }
              _this.fiber$product(_thread, child, dst);
              __pc=1;return;
            case 1:
              res=_thread.retVal;
              
              res._parent=_this.parent;
              _thread.exit(res);return;
            case 2     :
              
              dst=_this.direction.localToWorld(child,dst);
              dst.mulX(_this.scale);
              dst.addX_v(_this.position);
              _thread.exit(dst);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      worldToLocal :function _trc_Transform_worldToLocal(local,dst) {
        "use strict";
        var _this=this;
        
        return _this.siblingToChild(local,dst);
      },
      fiber$worldToLocal :function _trc_Transform_f_worldToLocal(_thread,local,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Transform_ent_worldToLocal(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$siblingToChild(_thread, local, dst);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      siblingToChild :function _trc_Transform_siblingToChild(sibling,dst) {
        "use strict";
        var _this=this;
        var copyToSibling;
        
        
        if (Tonyu.is(sibling,Tonyu.classes.kernel.Transform)) {
          if (dst===sibling) {
            copyToSibling=true;
            dst=null;
            
          }
          if (! dst) {
            dst=new Tonyu.classes.kernel.Transform;
          }
          _this.siblingToChild(sibling.position,dst.position);
          _this.quaternion.inverse.product(sibling.quaternion,dst.quaternion);
          dst.scale=sibling.scale/_this.scale;
          dst._parent=_this;
          if (copyToSibling) {
            sibling.set(dst);
            return sibling;
            
          }
          return dst;
          
        }
        if (! dst) {
          dst=new Tonyu.classes.kernel.Vec3(0,0,0);
        }
        dst.set(sibling);
        dst.subX_v(_this.position);
        _this.direction.worldToLocal(dst,dst);
        dst.divX(_this.scale);
        return dst;
      },
      fiber$siblingToChild :function _trc_Transform_f_siblingToChild(_thread,sibling,dst) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var copyToSibling;
        
        
        
        _thread.enter(function _trc_Transform_ent_siblingToChild(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(Tonyu.is(sibling,Tonyu.classes.kernel.Transform))) { __pc=3     ; break; }
              if (dst===sibling) {
                copyToSibling=true;
                dst=null;
                
              }
              if (! dst) {
                dst=new Tonyu.classes.kernel.Transform;
              }
              _this.fiber$siblingToChild(_thread, sibling.position, dst.position);
              __pc=1;return;
            case 1:
              
              _this.quaternion.inverse.product(sibling.quaternion,dst.quaternion);
              dst.scale=sibling.scale/_this.scale;
              dst._parent=_this;
              if (!(copyToSibling)) { __pc=2     ; break; }
              sibling.set(dst);
              _thread.exit(sibling);return;
            case 2     :
              
              _thread.exit(dst);return;
            case 3     :
              
              if (! dst) {
                dst=new Tonyu.classes.kernel.Vec3(0,0,0);
              }
              dst.set(sibling);
              dst.subX_v(_this.position);
              _this.direction.worldToLocal(dst,dst);
              dst.divX(_this.scale);
              _thread.exit(dst);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      changeScale :function _trc_Transform_changeScale(vec,by) {
        "use strict";
        var _this=this;
        
        return vec.mulX(by);
      },
      fiber$changeScale :function _trc_Transform_f_changeScale(_thread,vec,by) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=vec.mulX(by);return;
        
        
        _thread.retVal=_this;return;
      },
      isSibling :function _trc_Transform_isSibling(sib) {
        "use strict";
        var _this=this;
        
        return sib.parent===_this.parent;
      },
      fiber$isSibling :function _trc_Transform_f_isSibling(_thread,sib) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=sib.parent===_this.parent;return;
        
        
        _thread.retVal=_this;return;
      },
      isParentOf :function _trc_Transform_isParentOf(child) {
        "use strict";
        var _this=this;
        
        return child.parent===_this;
      },
      fiber$isParentOf :function _trc_Transform_f_isParentOf(_thread,child) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=child.parent===_this;return;
        
        
        _thread.retVal=_this;return;
      },
      isChildOf :function _trc_Transform_isChildOf(parent) {
        "use strict";
        var _this=this;
        
        return _this.parent===parent;
      },
      fiber$isChildOf :function _trc_Transform_f_isChildOf(_thread,parent) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.parent===parent;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__inverse :function _trc_Transform___getter__inverse() {
        "use strict";
        var _this=this;
        
        return _this.siblingToChild(new Tonyu.classes.kernel.Transform());
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"_static":{"nowait":false},"__setter__parent":{"nowait":true},"__getter__parent":{"nowait":true},"__getter__quaternion":{"nowait":true},"new":{"nowait":false},"child":{"nowait":false},"__getter__isRoot":{"nowait":true},"clone":{"nowait":false},"set":{"nowait":false},"product":{"nowait":false},"parentChanged":{"nowait":false},"changeParent":{"nowait":false},"localToWorld":{"nowait":false},"childToSibling":{"nowait":false},"worldToLocal":{"nowait":false},"siblingToChild":{"nowait":false},"changeScale":{"nowait":false},"isSibling":{"nowait":false},"isParentOf":{"nowait":false},"isChildOf":{"nowait":false},"__getter__inverse":{"nowait":true}},"fields":{"actor":{},"_parent":{},"direction":{},"position":{},"scale":{},"id":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Transform2D',
  shortName: 'Transform2D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Transform2D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_Transform2D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Transform2D_initialize(actor) {
        "use strict";
        var _this=this;
        
        _this.actor=actor;
      },
      __getter__position :function _trc_Transform2D___getter__position() {
        "use strict";
        var _this=this;
        
        return _this.actor.position;
      },
      __getter__scale :function _trc_Transform2D___getter__scale() {
        "use strict";
        var _this=this;
        var x;
        var y;
        
        x = _this.actor.scaleX;
        y = _this.actor.scaleY;
        
        x=(typeof  x==="number"&&x==x)?x:1;
        y=(typeof  y==="number"&&y==y)?y:x;
        return {x: x,y: y};
      },
      __getter__rotation :function _trc_Transform2D___getter__rotation() {
        "use strict";
        var _this=this;
        
        return _this.actor.rotation;
      },
      __getter__base :function _trc_Transform2D___getter__base() {
        "use strict";
        var _this=this;
        var s;
        
        s = _this.scale;
        
        return {x: new Tonyu.classes.kernel.Vec3(_this.cos(_this.rotation)*s.x,_this.sin(_this.rotation)*s.x),y: new Tonyu.classes.kernel.Vec3(_this.cos(_this.rotation+90)*s.y,_this.sin(_this.rotation+90)*s.y)};
      },
      localToWorld :function _trc_Transform2D_localToWorld(pos) {
        "use strict";
        var _this=this;
        var b;
        
        b = _this.base;
        
        return b.x.mul(pos.x).addX(b.y.mul(pos.y)).addX(_this.position);
      },
      fiber$localToWorld :function _trc_Transform2D_f_localToWorld(_thread,pos) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b;
        
        b = _this.base;
        
        _thread.retVal=b.x.mul(pos.x).addX(b.y.mul(pos.y)).addX(_this.position);return;
        
        
        _thread.retVal=_this;return;
      },
      worldToLocal :function _trc_Transform2D_worldToLocal(pos) {
        "use strict";
        var _this=this;
        var b;
        var det;
        
        b = _this.base;
        
        pos.z=pos.z||0;
        pos=_this.position.mul(- 1).addX(pos);
        det = b.x.x*b.y.y-b.y.x*b.x.y;
        
        return new Tonyu.classes.kernel.Vec3(b.y.y*pos.x-b.y.x*pos.y,- b.x.y*pos.x+b.x.x*pos.y).divX(det);
      },
      fiber$worldToLocal :function _trc_Transform2D_f_worldToLocal(_thread,pos) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b;
        var det;
        
        b = _this.base;
        
        pos.z=pos.z||0;
        pos=_this.position.mul(- 1).addX(pos);
        det = b.x.x*b.y.y-b.y.x*b.x.y;
        
        _thread.retVal=new Tonyu.classes.kernel.Vec3(b.y.y*pos.x-b.y.x*pos.y,- b.x.y*pos.x+b.x.x*pos.y).divX(det);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"__getter__position":{"nowait":true},"__getter__scale":{"nowait":true},"__getter__rotation":{"nowait":true},"__getter__base":{"nowait":true},"localToWorld":{"nowait":false},"worldToLocal":{"nowait":false}},"fields":{"actor":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Vec3',
  shortName: 'Vec3',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Vec3_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Vec3_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Vec3_initialize(x,y,z) {
        "use strict";
        var _this=this;
        
        if (typeof  x==="object") {
          z=x.z;
          y=x.y;
          x=x.x;
          
        }
        _this.x=(typeof  x==="number")?x:0;
        _this.y=(typeof  y==="number")?y:0;
        _this.z=(typeof  z==="number")?z:0;
      },
      checkNum :function _trc_Vec3_checkNum(o) {
        "use strict";
        var _this=this;
        var name;
        var val;
        var _it_5634;
        
        _it_5634=Tonyu.iterator(o,2);
        while(_it_5634.next()) {
          name=_it_5634[0];
          val=_it_5634[1];
          
          if (typeof  val!=="number") {
            throw new Error(name+"("+val+")は数値ではありません．");
            
            
          }
          
        }
      },
      fiber$checkNum :function _trc_Vec3_f_checkNum(_thread,o) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var name;
        var val;
        var _it_5634;
        
        _it_5634=Tonyu.iterator(o,2);
        while(_it_5634.next()) {
          name=_it_5634[0];
          val=_it_5634[1];
          
          if (typeof  val!=="number") {
            throw new Error(name+"("+val+")は数値ではありません．");
            
            
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      parsePointArgs :function _trc_Vec3_parsePointArgs(args) {
        "use strict";
        var _this=this;
        var a;
        var p;
        
        a = new Tonyu.classes.kernel.ArgParser(args);
        
        p = a.shift(Object);
        
        if (! p) {
          p={};
          p.x=a.shift();
          p.y=a.shift();
          p.z=a.shift();
          
        }
        p.z=p.z||0;
        return p;
      },
      fiber$parsePointArgs :function _trc_Vec3_f_parsePointArgs(_thread,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var p;
        
        a = new Tonyu.classes.kernel.ArgParser(args);
        
        p = a.shift(Object);
        
        if (! p) {
          p={};
          p.x=a.shift();
          p.y=a.shift();
          p.z=a.shift();
          
        }
        p.z=p.z||0;
        _thread.retVal=p;return;
        
        
        _thread.retVal=_this;return;
      },
      addX :function _trc_Vec3_addX() {
        "use strict";
        var _this=this;
        var p;
        
        p = _this.parsePointArgs(arguments);
        
        _this.x+=p.x;
        _this.y+=p.y;
        _this.z+=p.z;
        return _this;
      },
      fiber$addX :function _trc_Vec3_f_addX(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        
        
        _thread.enter(function _trc_Vec3_ent_addX(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$parsePointArgs(_thread, _arguments);
              __pc=1;return;
            case 1:
              p=_thread.retVal;
              
              _this.x+=p.x;
              _this.y+=p.y;
              _this.z+=p.z;
              _thread.exit(_this);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      addX_v :function _trc_Vec3_addX_v(p) {
        "use strict";
        var _this=this;
        
        _this.x+=p.x;
        _this.y+=p.y;
        _this.z+=p.z;
        return _this;
      },
      fiber$addX_v :function _trc_Vec3_f_addX_v(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x+=p.x;
        _this.y+=p.y;
        _this.z+=p.z;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      subX :function _trc_Vec3_subX() {
        "use strict";
        var _this=this;
        var p;
        
        p = _this.parsePointArgs(arguments);
        
        _this.x-=p.x;
        _this.y-=p.y;
        _this.z-=p.z;
        return _this;
      },
      fiber$subX :function _trc_Vec3_f_subX(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        
        
        _thread.enter(function _trc_Vec3_ent_subX(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$parsePointArgs(_thread, _arguments);
              __pc=1;return;
            case 1:
              p=_thread.retVal;
              
              _this.x-=p.x;
              _this.y-=p.y;
              _this.z-=p.z;
              _thread.exit(_this);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      subX_v :function _trc_Vec3_subX_v(p) {
        "use strict";
        var _this=this;
        
        _this.x-=p.x;
        _this.y-=p.y;
        _this.z-=p.z;
        return _this;
      },
      fiber$subX_v :function _trc_Vec3_f_subX_v(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x-=p.x;
        _this.y-=p.y;
        _this.z-=p.z;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      mulX :function _trc_Vec3_mulX(k) {
        "use strict";
        var _this=this;
        
        _this.x=_this.x*k;
        _this.y=_this.y*k;
        _this.z=_this.z*k;
        return _this;
      },
      fiber$mulX :function _trc_Vec3_f_mulX(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x=_this.x*k;
        _this.y=_this.y*k;
        _this.z=_this.z*k;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      divX :function _trc_Vec3_divX(k) {
        "use strict";
        var _this=this;
        
        _this.x=_this.x/k;
        _this.y=_this.y/k;
        _this.z=_this.z/k;
        return _this;
      },
      fiber$divX :function _trc_Vec3_f_divX(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x=_this.x/k;
        _this.y=_this.y/k;
        _this.z=_this.z/k;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      add :function _trc_Vec3_add(x,y,z) {
        "use strict";
        var _this=this;
        
        return _this.clone().addX(x,y,z);
      },
      fiber$add :function _trc_Vec3_f_add(_thread,x,y,z) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().addX(x,y,z);return;
        
        
        _thread.retVal=_this;return;
      },
      sub :function _trc_Vec3_sub(x,y,z) {
        "use strict";
        var _this=this;
        
        return _this.clone().subX(x,y,z);
      },
      fiber$sub :function _trc_Vec3_f_sub(_thread,x,y,z) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().subX(x,y,z);return;
        
        
        _thread.retVal=_this;return;
      },
      mul :function _trc_Vec3_mul(k) {
        "use strict";
        var _this=this;
        
        return _this.clone().mulX(k);
      },
      fiber$mul :function _trc_Vec3_f_mul(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().mulX(k);return;
        
        
        _thread.retVal=_this;return;
      },
      div :function _trc_Vec3_div(k) {
        "use strict";
        var _this=this;
        
        return _this.clone().divX(k);
      },
      fiber$div :function _trc_Vec3_f_div(_thread,k) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().divX(k);return;
        
        
        _thread.retVal=_this;return;
      },
      clone :function _trc_Vec3_clone() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.Vec3(_this.x,_this.y,_this.z);
      },
      fiber$clone :function _trc_Vec3_f_clone(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.Vec3(_this.x,_this.y,_this.z);return;
        
        
        _thread.retVal=_this;return;
      },
      set :function _trc_Vec3_set(x,y,z) {
        "use strict";
        var _this=this;
        
        if (typeof  x==="object") {
          y=x.y;
          z=x.z;
          x=x.x;
          
        }
        if (typeof  x==="number") {
          _this.x=x;
        }
        if (typeof  y==="number") {
          _this.y=y;
        }
        if (typeof  z==="number") {
          _this.z=z;
        }
        return _this;
      },
      fiber$set :function _trc_Vec3_f_set(_thread,x,y,z) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  x==="object") {
          y=x.y;
          z=x.z;
          x=x.x;
          
        }
        if (typeof  x==="number") {
          _this.x=x;
        }
        if (typeof  y==="number") {
          _this.y=y;
        }
        if (typeof  z==="number") {
          _this.z=z;
        }
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      setTo :function _trc_Vec3_setTo(t) {
        "use strict";
        var _this=this;
        
        t.x=_this.x;
        t.y=_this.y;
        t.z=_this.z;
      },
      fiber$setTo :function _trc_Vec3_f_setTo(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        t.x=_this.x;
        t.y=_this.y;
        t.z=_this.z;
        
        _thread.retVal=_this;return;
      },
      addTo :function _trc_Vec3_addTo(t) {
        "use strict";
        var _this=this;
        
        t.x+=_this.x;
        t.y+=_this.y;
        t.z+=_this.z;
      },
      fiber$addTo :function _trc_Vec3_f_addTo(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        t.x+=_this.x;
        t.y+=_this.y;
        t.z+=_this.z;
        
        _thread.retVal=_this;return;
      },
      dist :function _trc_Vec3_dist(vec) {
        "use strict";
        var _this=this;
        var dx;
        var dy;
        var dz;
        
        if (vec) {
          dx = vec.x-_this.x;
          
          dy = vec.y-_this.y;
          
          dz = vec.z-_this.z;
          
          return _this.sqrt(dx*dx+dy*dy+dz*dz);
          
        }
        return _this.sqrt(_this.x*_this.x+_this.y*_this.y+_this.z*_this.z);
      },
      __getter__length :function _trc_Vec3___getter__length() {
        "use strict";
        var _this=this;
        
        return _this.sqrt(_this.x*_this.x+_this.y*_this.y+_this.z*_this.z);
      },
      __setter__length :function _trc_Vec3___setter__length(l) {
        "use strict";
        var _this=this;
        
        return _this.normalizeX(l);
      },
      lerp :function _trc_Vec3_lerp(to,t) {
        "use strict";
        var _this=this;
        
        return _this.mul(1-t).addX_v(to.mul(t));
      },
      fiber$lerp :function _trc_Vec3_f_lerp(_thread,to,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.mul(1-t).addX_v(to.mul(t));return;
        
        
        _thread.retVal=_this;return;
      },
      slerp :function _trc_Vec3_slerp(to,t) {
        "use strict";
        var _this=this;
        
        return _this.mul(1-t).addX_v(to.mul(t));
      },
      fiber$slerp :function _trc_Vec3_f_slerp(_thread,to,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.mul(1-t).addX_v(to.mul(t));return;
        
        
        _thread.retVal=_this;return;
      },
      normalizeX :function _trc_Vec3_normalizeX(len) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.length;
        
        if (l==0) {
          return _this;
        }
        len=(typeof  len==="number")?len:1;
        _this.x*=len/l;
        _this.y*=len/l;
        _this.z*=len/l;
        return _this;
      },
      fiber$normalizeX :function _trc_Vec3_f_normalizeX(_thread,len) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        l = _this.length;
        
        if (l==0) {
          _thread.retVal=_this;return;
          
        }
        len=(typeof  len==="number")?len:1;
        _this.x*=len/l;
        _this.y*=len/l;
        _this.z*=len/l;
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      normalize :function _trc_Vec3_normalize(len) {
        "use strict";
        var _this=this;
        
        return _this.clone().normalizeX(len);
      },
      fiber$normalize :function _trc_Vec3_f_normalize(_thread,len) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().normalizeX(len);return;
        
        
        _thread.retVal=_this;return;
      },
      productX :function _trc_Vec3_productX() {
        "use strict";
        var _this=this;
        var a;
        var b;
        var i;
        var j;
        var k;
        
        a = _this;
        
        b = _this.parsePointArgs(arguments);
        
        i = a.y*b.z-a.z*b.y;
        
        j = a.z*b.x-a.x*b.z;
        
        k = a.x*b.y-a.y*b.x;
        
        a.x=i;
        a.y=j;
        a.z=k;
        if (Tonyu.globals.$fixProductOrder) {
          return a;
        }
        return a.mul(- 1);
      },
      fiber$productX :function _trc_Vec3_f_productX(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var b;
        var i;
        var j;
        var k;
        
        a = _this;
        
        
        _thread.enter(function _trc_Vec3_ent_productX(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$parsePointArgs(_thread, _arguments);
              __pc=1;return;
            case 1:
              b=_thread.retVal;
              
              i = a.y*b.z-a.z*b.y;
              
              j = a.z*b.x-a.x*b.z;
              
              k = a.x*b.y-a.y*b.x;
              
              a.x=i;
              a.y=j;
              a.z=k;
              if (!(Tonyu.globals.$fixProductOrder)) { __pc=2     ; break; }
              _thread.exit(a);return;
            case 2     :
              
              _thread.exit(a.mul(- 1));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      product :function _trc_Vec3_product(x,y,z) {
        "use strict";
        var _this=this;
        
        return _this.clone().productX(x,y,z);
      },
      fiber$product :function _trc_Vec3_f_product(_thread,x,y,z) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.clone().productX(x,y,z);return;
        
        
        _thread.retVal=_this;return;
      },
      innerProduct :function _trc_Vec3_innerProduct() {
        "use strict";
        var _this=this;
        var a;
        
        a = _this.parsePointArgs(arguments);
        
        return _this.x*a.x+_this.y*a.y+_this.z*a.z;
      },
      fiber$innerProduct :function _trc_Vec3_f_innerProduct(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        
        
        _thread.enter(function _trc_Vec3_ent_innerProduct(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$parsePointArgs(_thread, _arguments);
              __pc=1;return;
            case 1:
              a=_thread.retVal;
              
              _thread.exit(_this.x*a.x+_this.y*a.y+_this.z*a.z);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__angleXY :function _trc_Vec3___getter__angleXY() {
        "use strict";
        var _this=this;
        
        return _this.atanxy(_this.x,_this.y);
      },
      __setter__angleXY :function _trc_Vec3___setter__angleXY(a) {
        "use strict";
        var _this=this;
        var l;
        
        l = Tonyu.globals.$Math.sqrt(_this.x*_this.x+_this.y*_this.y);
        
        _this.x=_this.cos(a)*l;
        _this.y=_this.sin(a)*l;
        return a;
      },
      rotate :function _trc_Vec3_rotate(angle,axis) {
        "use strict";
        var _this=this;
        var v90;
        
        if (! axis) {
          axis=new Tonyu.classes.kernel.Vec3(0,0,Tonyu.globals.$fixProductOrder?- 1:1);
        }
        v90 = _this.product(axis);
        
        v90.length=_this.length;
        return _this.mul(_this.cos(angle)).add(v90.mul(_this.sin(angle)));
      },
      fiber$rotate :function _trc_Vec3_f_rotate(_thread,angle,axis) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var v90;
        
        if (! axis) {
          axis=new Tonyu.classes.kernel.Vec3(0,0,Tonyu.globals.$fixProductOrder?- 1:1);
        }
        
        _thread.enter(function _trc_Vec3_ent_rotate(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$product(_thread, axis);
              __pc=1;return;
            case 1:
              v90=_thread.retVal;
              
              v90.length=_this.length;
              _thread.exit(_this.mul(_this.cos(angle)).add(v90.mul(_this.sin(angle))));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      rotateX :function _trc_Vec3_rotateX(angle,axis) {
        "use strict";
        var _this=this;
        
        return _this.set(_this.rotate(angle,axis));
      },
      fiber$rotateX :function _trc_Vec3_f_rotateX(_thread,angle,axis) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Vec3_ent_rotateX(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$set(_thread, _this.rotate(angle,axis));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      toString :function _trc_Vec3_toString() {
        "use strict";
        var _this=this;
        
        return "("+[_this.x,_this.y,_this.z].join(",")+")";
      },
      fiber$toString :function _trc_Vec3_f_toString(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal="("+[_this.x,_this.y,_this.z].join(",")+")";return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"checkNum":{"nowait":false},"parsePointArgs":{"nowait":false},"addX":{"nowait":false},"addX_v":{"nowait":false},"subX":{"nowait":false},"subX_v":{"nowait":false},"mulX":{"nowait":false},"divX":{"nowait":false},"add":{"nowait":false},"sub":{"nowait":false},"mul":{"nowait":false},"div":{"nowait":false},"clone":{"nowait":false},"set":{"nowait":false},"setTo":{"nowait":false},"addTo":{"nowait":false},"dist":{"nowait":true},"__getter__length":{"nowait":true},"__setter__length":{"nowait":true},"lerp":{"nowait":false},"slerp":{"nowait":false},"normalizeX":{"nowait":false},"normalize":{"nowait":false},"productX":{"nowait":false},"product":{"nowait":false},"innerProduct":{"nowait":false},"__getter__angleXY":{"nowait":true},"__setter__angleXY":{"nowait":true},"rotate":{"nowait":false},"rotateX":{"nowait":false},"toString":{"nowait":false}},"fields":{"x":{},"y":{},"z":{},"Vector":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Vec3View',
  shortName: 'Vec3View',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Vec3,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Vec3View_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Vec3View_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Vec3View_initialize(target,attrs) {
        "use strict";
        var _this=this;
        
        _this.target=target;
        _this.attrs=attrs||{x: "x",y: "y",z: "z"};
      },
      __getter__x :function _trc_Vec3View___getter__x() {
        "use strict";
        var _this=this;
        
        return _this.target[_this.attrs.x]||0;
      },
      __getter__y :function _trc_Vec3View___getter__y() {
        "use strict";
        var _this=this;
        
        return _this.target[_this.attrs.y]||0;
      },
      __getter__z :function _trc_Vec3View___getter__z() {
        "use strict";
        var _this=this;
        
        return _this.target[_this.attrs.z]||0;
      },
      __setter__x :function _trc_Vec3View___setter__x(v) {
        "use strict";
        var _this=this;
        
        return _this.target[_this.attrs.x]=v;
      },
      __setter__y :function _trc_Vec3View___setter__y(v) {
        "use strict";
        var _this=this;
        
        return _this.target[_this.attrs.y]=v;
      },
      __setter__z :function _trc_Vec3View___setter__z(v) {
        "use strict";
        var _this=this;
        
        return _this.target[_this.attrs.z]=v;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"__getter__x":{"nowait":true},"__getter__y":{"nowait":true},"__getter__z":{"nowait":true},"__setter__x":{"nowait":true},"__setter__y":{"nowait":true},"__setter__z":{"nowait":true}},"fields":{"target":{},"attrs":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ActorTouch',
  shortName: 'ActorTouch',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.EventHandler,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ActorTouch_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_ActorTouch_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      newListener :function _trc_ActorTouch_newListener(f) {
        "use strict";
        var _this=this;
        var ts;
        
        ts = Tonyu.globals.$Screen.multiLayerTouches;
        
        ts.add(_this.target);
        return {dispose: (function anonymous_183() {
          
          ts.remove(_this.target);
        })};
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"newListener":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.Align2D',
  shortName: 'Align2D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Align2D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
      },
      fiber$main :function _trc_Align2D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Align2D_initialize() {
        "use strict";
        var _this=this;
        var params;
        var p;
        
        
        if (arguments.length>=2) {
          params=Array.prototype.slice.call(arguments);
        } else {
          params=arguments[0];
        }
        params=params||["center","middle"];
        
        switch (typeof  params) {
        case "string":
          params=params.split(/[ ,]+/).map((function anonymous_446(s) {
            var n;
            
            n = s-0;
            
            if (n===n) {
              return n;
            }
            return s;
          }));
        case "object":
          if (typeof  params.shift==="function") {
            while (params.length) {
              p=params.shift();
              switch (typeof  p) {
              case "string":
                if (_this.h==null) {
                  _this.h=p;
                } else {
                  _this.v=p;
                }
                break;
                
              case "number":
                _this.offset=_this.offset||{};
                if (_this.offset.x==null) {
                  _this.offset.x=p;
                } else {
                  _this.offset.y=p;
                }
                break;
                
              case "object":
                if (_this.h==null) {
                  _this.h=p.h||p[0];
                  _this.v=p.v||p[1];
                  
                } else {
                  _this.offset=_this.offset||{};
                  _this.offset.x=p.x||p[0];
                  _this.offset.y=p.y||p[1];
                  
                }
                break;
                
              }
              
            }
            
          } else {
            _this.h=params.h;
            _this.v=params.v;
            _this.offset=params.offset||params.ofs;
            if (typeof  _this.offset.shift==="function") {
              _this.offset.x=_this.offset[0]||0;
              _this.offset.y=_this.offset[1]||0;
              
            }
            if (! _this.offset) {
              _this.offset=_this.offset||{};
              _this.offset.x=params.offsetX||params.ofsX||params.ox||params.x;
              _this.offset.y=params.offsetY||params.ofsY||params.oy||params.y;
              
            }
            
          }
          break;
          
        }
        _this.h=_this.h||"center";
        _this.v=_this.v||"default";
        _this.offset=_this.offset||{};
        _this.offset.x=_this.offset.x||0;
        _this.offset.y=_this.offset.y||0;
        if (_this.v=="center") {
          _this.v="middle";
        }
      },
      __getter__isOriginPivot :function _trc_Align2D___getter__isOriginPivot() {
        "use strict";
        var _this=this;
        
        return _this.h=="center"&&(_this.v=="middle"||_this.v=="default")&&_this.offset.x==0&&_this.offset.y==0;
      },
      getDrawRect :function _trc_Align2D_getDrawRect(obj) {
        "use strict";
        var _this=this;
        var width;
        var height;
        var res;
        
        width = obj.width;
        
        height = obj.height;
        
        res = {x: - _this.offset.x,y: - _this.offset.y,width: width,height: height};
        
        switch (_this.h) {
        case "left":
          res.x+=res.width/2;
          break;
          
        case "right":
          res.x-=res.width/2;
          break;
          
        }
        switch (_this.v) {
        case "top":
          res.y+=res.height/2;
          break;
          
        case "bottom":
          res.y-=res.height/2;
          break;
          
        }
        return res;
      },
      fiber$getDrawRect :function _trc_Align2D_f_getDrawRect(_thread,obj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var width;
        var height;
        var res;
        
        width = obj.width;
        
        height = obj.height;
        
        res = {x: - _this.offset.x,y: - _this.offset.y,width: width,height: height};
        
        switch (_this.h) {
        case "left":
          res.x+=res.width/2;
          break;
          
        case "right":
          res.x-=res.width/2;
          break;
          
        }
        switch (_this.v) {
        case "top":
          res.y+=res.height/2;
          break;
          
        case "bottom":
          res.y-=res.height/2;
          break;
          
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"__getter__isOriginPivot":{"nowait":true},"getDrawRect":{"nowait":false}},"fields":{"h":{},"v":{},"offset":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.AnimMod',
  shortName: 'AnimMod',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.SpriteMod,Tonyu.classes.kernel.SchedulerMod,Tonyu.classes.kernel.ParallelMod],
  methods: function (__superClass) {
    return {
      main :function _trc_AnimMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_AnimMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initAnimMod :function _trc_AnimMod_initAnimMod() {
        "use strict";
        var _this=this;
        
        if (_this.anim instanceof Array) {
          _this.startAnim();
          
        } else {
          _this.animMode=false;
          
        }
        if (_this.animFps==null) {
          _this.animFps=1;
        }
      },
      fiber$initAnimMod :function _trc_AnimMod_f_initAnimMod(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.anim instanceof Array) {
          _this.startAnim();
          
        } else {
          _this.animMode=false;
          
        }
        if (_this.animFps==null) {
          _this.animFps=1;
        }
        
        _thread.retVal=_this;return;
      },
      setAnimFps :function _trc_AnimMod_setAnimFps(f) {
        "use strict";
        var _this=this;
        
        _this.animFps=f;
        _this.animFrame=0;
        _this.startAnim();
      },
      startAnim :function _trc_AnimMod_startAnim() {
        "use strict";
        var _this=this;
        
        if (! _this.animMode) {
          _this.animMode=_this.parallel(Tonyu.bindFunc(_this,_this._animation));
          _this.animFrame=_this.animFrame||0;
          
        }
      },
      stopAnim :function _trc_AnimMod_stopAnim() {
        "use strict";
        var _this=this;
        
        if (_this.animMode) {
          _this.animMode.kill();
          _this.animMode=null;
          
        }
      },
      _animation :function _trc_AnimMod__animation() {
        "use strict";
        var _this=this;
        var age;
        
        age = 0;
        
        while (true) {
          age++;
          if (age%_this.animFps==0&&_this.anim instanceof Array) {
            _this.p=_this.anim[_this.animFrame%_this.anim.length];
            _this.animFrame++;
            
          }
          _this.update();
          
        }
      },
      fiber$_animation :function _trc_AnimMod_f__animation(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var age;
        
        age = 0;
        
        
        _thread.enter(function _trc_AnimMod_ent__animation(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              age++;
              if (age%_this.animFps==0&&_this.anim instanceof Array) {
                _this.p=_this.anim[_this.animFrame%_this.anim.length];
                _this.animFrame++;
                
              }
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initAnimMod":{"nowait":false},"setAnimFps":{"nowait":true},"startAnim":{"nowait":true},"stopAnim":{"nowait":true},"_animation":{"nowait":false}},"fields":{"anim":{},"animMode":{},"animFrame":{},"animFps":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Color',
  shortName: 'Color',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Color_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Color_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Color_initialize() {
        "use strict";
        var _this=this;
        var a;
        var s;
        var rgba;
        var p;
        var x;
        var y;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        
        
        _this.maxs={r: 255,g: 255,b: 255,a: 255,h: 360,s: 1,l: 1};
        p = a.peek(0);
        
        if (p&&p.height&&p.width&&p.data) {
          _this.imageData=a.shift();
          x = a.shift();
          
          y = a.shift();
          
          _this.index=(x+y*p.width)*4;
          _this.value={};
          return _this;
          
        }
        if (s=a.shift("string")) {
          _this.type="name";
          _this.value={name: s};
          
        } else {
          if (s=a.shift("object")) {
            if (typeof  s.r=="number") {
              _this.type="rgba";
              _this.value=s;
              _this.fillNum("g","b","a");
              
            } else {
              if (typeof  s.h=="number") {
                _this.type="hsl";
                _this.value=s;
                _this.fillNum("s","l","a");
                
              } else {
                throw new Error("Invalid color spec");
                
                
              }
            }
            
          } else {
            if ((s=a.shift("number"))!=null) {
              _this.type="rgba";
              _this.value={r: s};
              _this.value.g=a.shift();
              _this.value.b=a.shift();
              _this.value.a=a.shift();
              _this.fillNum("g","b","a");
              
            } else {
              throw new Error("Invalid color spec");
              
              
            }
          }
        }
      },
      fillNum :function _trc_Color_fillNum() {
        "use strict";
        var _this=this;
        var a;
        var k;
        var _it_5669;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        _it_5669=Tonyu.iterator(a.toArray(),1);
        while(_it_5669.next()) {
          k=_it_5669[0];
          
          if (_this.value[k]==null) {
            _this.value[k]=(k=="a"?_this.maxs.a:0);
          }
          
        }
      },
      fiber$fillNum :function _trc_Color_f_fillNum(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var k;
        var _it_5669;
        
        a = new Tonyu.classes.kernel.ArgParser(_arguments);
        
        _it_5669=Tonyu.iterator(a.toArray(),1);
        while(_it_5669.next()) {
          k=_it_5669[0];
          
          if (_this.value[k]==null) {
            _this.value[k]=(k=="a"?_this.maxs.a:0);
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      __getter__r :function _trc_Color___getter__r() {
        "use strict";
        var _this=this;
        
        _this.makeRGBA();
        if (_this.imageData) {
          return _this.imageData.data[_this.index];
        }
        return _this.value.r;
      },
      __getter__g :function _trc_Color___getter__g() {
        "use strict";
        var _this=this;
        
        _this.makeRGBA();
        if (_this.imageData) {
          return _this.imageData.data[_this.index+1];
        }
        return _this.value.g;
      },
      __getter__b :function _trc_Color___getter__b() {
        "use strict";
        var _this=this;
        
        _this.makeRGBA();
        if (_this.imageData) {
          return _this.imageData.data[_this.index+2];
        }
        return _this.value.b;
      },
      __getter__a :function _trc_Color___getter__a() {
        "use strict";
        var _this=this;
        
        if (_this.imageData) {
          return _this.imageData.data[_this.index+3];
        }
        return _this.value.a;
      },
      __setter__a :function _trc_Color___setter__a(v) {
        "use strict";
        var _this=this;
        
        _this.clearName();
        v=_this.clamp(v,0,_this.maxs.a);
        if (_this.imageData) {
          _this.imageData.data[_this.index+3]=v;
        } else {
          _this.value.a=v;
        }
      },
      __setter__r :function _trc_Color___setter__r(v) {
        "use strict";
        var _this=this;
        
        _this.makeRGBA();
        _this.clearName();
        _this.clearHSLA();
        v=_this.clamp(v,0,_this.maxs.r);
        if (_this.imageData) {
          _this.imageData.data[_this.index]=v;
        } else {
          _this.value.r=v;
        }
      },
      __setter__g :function _trc_Color___setter__g(v) {
        "use strict";
        var _this=this;
        
        _this.makeRGBA();
        _this.clearName();
        _this.clearHSLA();
        v=_this.clamp(v,0,_this.maxs.g);
        if (_this.imageData) {
          _this.imageData.data[_this.index+1]=v;
        }
        _this.value.g=v;
      },
      __setter__b :function _trc_Color___setter__b(v) {
        "use strict";
        var _this=this;
        
        _this.makeRGBA();
        _this.clearName();
        _this.clearHSLA();
        v=_this.clamp(v,0,_this.maxs.b);
        if (_this.imageData) {
          _this.imageData.data[_this.index+2]=v;
        }
        _this.value.b=v;
      },
      __getter__h :function _trc_Color___getter__h() {
        "use strict";
        var _this=this;
        
        _this.makeHSLA();
        return _this.value.h;
      },
      __getter__s :function _trc_Color___getter__s() {
        "use strict";
        var _this=this;
        
        _this.makeHSLA();
        return _this.value.s;
      },
      __getter__l :function _trc_Color___getter__l() {
        "use strict";
        var _this=this;
        
        _this.makeHSLA();
        return _this.value.l;
      },
      __setter__h :function _trc_Color___setter__h(v) {
        "use strict";
        var _this=this;
        
        _this.makeHSLA();
        _this.clearName();
        _this.value.h=_this.amod(v,360);
        if (_this.imageData) {
          _this.makeRGBA(true);
        } else {
          _this.clearRGBA();
        }
      },
      __setter__s :function _trc_Color___setter__s(v) {
        "use strict";
        var _this=this;
        
        _this.makeHSLA();
        _this.clearName();
        _this.value.s=_this.clamp(v,0,_this.maxs.s);
        if (_this.imageData) {
          _this.makeRGBA(true);
        } else {
          _this.clearRGBA();
        }
      },
      __setter__l :function _trc_Color___setter__l(v) {
        "use strict";
        var _this=this;
        
        _this.makeHSLA();
        _this.clearName();
        _this.value.l=_this.clamp(v,0,_this.maxs.l);
        if (_this.imageData) {
          _this.makeRGBA(true);
        } else {
          _this.clearRGBA();
        }
      },
      setHSLA :function _trc_Color_setHSLA(h,s,l,a) {
        "use strict";
        var _this=this;
        
        _this.value.h=h;
        _this.value.s=s;
        _this.value.l=l;
        if (typeof  a==="number") {
          if (_this.imageData) {
            _this.imageData.data[_this.index+3]=a;
            
          } else {
            _this.value.a=a;
          }
          
        }
        if (_this.imageData) {
          _this.makeRGBA(true);
        } else {
          _this.clearRGBA();
        }
        return true;
      },
      fiber$setHSLA :function _trc_Color_f_setHSLA(_thread,h,s,l,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.value.h=h;
        _this.value.s=s;
        _this.value.l=l;
        if (typeof  a==="number") {
          if (_this.imageData) {
            _this.imageData.data[_this.index+3]=a;
            
          } else {
            _this.value.a=a;
          }
          
        }
        
        _thread.enter(function _trc_Color_ent_setHSLA(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.imageData)) { __pc=2     ; break; }
              _this.fiber$makeRGBA(_thread, true);
              __pc=1;return;
            case 1:
              
              __pc=4     ;break;
            case 2     :
              _this.fiber$clearRGBA(_thread);
              __pc=3;return;
            case 3:
              
            case 4     :
              
              _thread.exit(true);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      setRGBA :function _trc_Color_setRGBA(r,g,b,a) {
        "use strict";
        var _this=this;
        var n;
        var i;
        
        if (_this.imageData) {
          n = ((typeof  a==="number")?4:3);
          
          i = 0;
          for (; i<n ; i++) {
            _this.imageData.data[_this.index+i]=[r,g,b,a][i];
          }
          
        } else {
          _this.value.r=r;
          _this.value.g=g;
          _this.value.b=b;
          if (typeof  a==="number") {
            _this.value.a=a;
          }
          _this.clearHSLA();
          _this.clearName();
          
        }
      },
      fiber$setRGBA :function _trc_Color_f_setRGBA(_thread,r,g,b,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var n;
        var i;
        
        
        _thread.enter(function _trc_Color_ent_setRGBA(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.imageData)) { __pc=1     ; break; }
              {
                n = ((typeof  a==="number")?4:3);
                
                i = 0;
                for (; i<n ; i++) {
                  _this.imageData.data[_this.index+i]=[r,g,b,a][i];
                }
              }
              __pc=4     ;break;
            case 1     :
              _this.value.r=r;
              _this.value.g=g;
              _this.value.b=b;
              if (typeof  a==="number") {
                _this.value.a=a;
              }
              _this.fiber$clearHSLA(_thread);
              __pc=2;return;
            case 2:
              
              _this.fiber$clearName(_thread);
              __pc=3;return;
            case 3:
              
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      hasRGBA :function _trc_Color_hasRGBA() {
        "use strict";
        var _this=this;
        
        return _this.imageData||typeof  (_this.value.r)==="number";
      },
      fiber$hasRGBA :function _trc_Color_f_hasRGBA(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.imageData||typeof  (_this.value.r)==="number";return;
        
        
        _thread.retVal=_this;return;
      },
      hasHSLA :function _trc_Color_hasHSLA() {
        "use strict";
        var _this=this;
        
        return typeof  (_this.value.h)==="number";
      },
      fiber$hasHSLA :function _trc_Color_f_hasHSLA(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=typeof  (_this.value.h)==="number";return;
        
        
        _thread.retVal=_this;return;
      },
      hasName :function _trc_Color_hasName() {
        "use strict";
        var _this=this;
        
        return typeof  (_this.value.name)==="string";
      },
      fiber$hasName :function _trc_Color_f_hasName(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=typeof  (_this.value.name)==="string";return;
        
        
        _thread.retVal=_this;return;
      },
      clearRGBA :function _trc_Color_clearRGBA() {
        "use strict";
        var _this=this;
        
        delete _this.value.r;
      },
      fiber$clearRGBA :function _trc_Color_f_clearRGBA(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        delete _this.value.r;
        
        _thread.retVal=_this;return;
      },
      clearHSLA :function _trc_Color_clearHSLA() {
        "use strict";
        var _this=this;
        
        delete _this.value.h;
      },
      fiber$clearHSLA :function _trc_Color_f_clearHSLA(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        delete _this.value.h;
        
        _thread.retVal=_this;return;
      },
      clearName :function _trc_Color_clearName() {
        "use strict";
        var _this=this;
        
        delete _this.value.name;
      },
      fiber$clearName :function _trc_Color_f_clearName(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        delete _this.value.name;
        
        _thread.retVal=_this;return;
      },
      lerpRGBA :function _trc_Color_lerpRGBA(c,t) {
        "use strict";
        var _this=this;
        
        t=t||0;
        return new Tonyu.classes.kernel.Color(_this.r*(1-t)+c.r*t,_this.g*(1-t)+c.g*t,_this.b*(1-t)+c.b*t,_this.a*(1-t)+c.a*t);
      },
      fiber$lerpRGBA :function _trc_Color_f_lerpRGBA(_thread,c,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        t=t||0;
        _thread.retVal=new Tonyu.classes.kernel.Color(_this.r*(1-t)+c.r*t,_this.g*(1-t)+c.g*t,_this.b*(1-t)+c.b*t,_this.a*(1-t)+c.a*t);return;
        
        
        _thread.retVal=_this;return;
      },
      distRGBA :function _trc_Color_distRGBA(other) {
        "use strict";
        var _this=this;
        var dr;
        var dg;
        var db;
        var da;
        
        if (Tonyu.is(other,Tonyu.classes.kernel.Color)) {
          
          
        } else {
          other=new Tonyu.classes.kernel.Color(other+"");
          
        }
        dr = (_this.r/_this.maxs.r-other.r/other.maxs.r);
        
        dg = (_this.g/_this.maxs.g-other.g/other.maxs.g);
        
        db = (_this.b/_this.maxs.b-other.b/other.maxs.b);
        
        da = (_this.a/_this.maxs.a-other.a/other.maxs.a);
        
        return _this.sqrt(dr*dr+dg*dg+db*db+da*da);
      },
      fiber$distRGBA :function _trc_Color_f_distRGBA(_thread,other) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var dr;
        var dg;
        var db;
        var da;
        
        if (Tonyu.is(other,Tonyu.classes.kernel.Color)) {
          
          
        } else {
          other=new Tonyu.classes.kernel.Color(other+"");
          
        }
        dr = (_this.r/_this.maxs.r-other.r/other.maxs.r);
        
        dg = (_this.g/_this.maxs.g-other.g/other.maxs.g);
        
        db = (_this.b/_this.maxs.b-other.b/other.maxs.b);
        
        da = (_this.a/_this.maxs.a-other.a/other.maxs.a);
        
        _thread.retVal=_this.sqrt(dr*dr+dg*dg+db*db+da*da);return;
        
        
        _thread.retVal=_this;return;
      },
      distHSLA :function _trc_Color_distHSLA(other) {
        "use strict";
        var _this=this;
        var dh;
        var ds;
        var dl;
        var da;
        
        if (Tonyu.is(other,Tonyu.classes.kernel.Color)) {
          
          
        } else {
          other=new Tonyu.classes.kernel.Color(other+"");
          
        }
        dh = _this.angleDiff(_this.h,other.h)/180;
        
        ds = (_this.s/_this.maxs.s-other.s/other.maxs.s);
        
        dl = (_this.l/_this.maxs.l-other.l/other.maxs.l);
        
        da = (_this.a/_this.maxs.a-other.a/other.maxs.a);
        
        return _this.sqrt(dh*dh+ds*ds+dl*dl+da*da);
      },
      fiber$distHSLA :function _trc_Color_f_distHSLA(_thread,other) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var dh;
        var ds;
        var dl;
        var da;
        
        if (Tonyu.is(other,Tonyu.classes.kernel.Color)) {
          
          
        } else {
          other=new Tonyu.classes.kernel.Color(other+"");
          
        }
        dh = _this.angleDiff(_this.h,other.h)/180;
        
        ds = (_this.s/_this.maxs.s-other.s/other.maxs.s);
        
        dl = (_this.l/_this.maxs.l-other.l/other.maxs.l);
        
        da = (_this.a/_this.maxs.a-other.a/other.maxs.a);
        
        _thread.retVal=_this.sqrt(dh*dh+ds*ds+dl*dl+da*da);return;
        
        
        _thread.retVal=_this;return;
      },
      makeRGBA :function _trc_Color_makeRGBA(force) {
        "use strict";
        var _this=this;
        var rgb;
        var i;
        
        if (! force&&_this.hasRGBA()) {
          return _this;
        }
        if (_this.hasHSLA()) {
          rgb = _this.HSLToRGB(_this.value.h,_this.value.s,_this.value.l);
          
          if (_this.imageData) {
            i = 0;
            for (; i<3 ; i++) {
              _this.imageData.data[_this.index+i]=rgb[i]*_this.maxs.r;
            }
            
          } else {
            _this.value.r=rgb[0]*_this.maxs.r;
            _this.value.g=rgb[1]*_this.maxs.g;
            _this.value.b=rgb[2]*_this.maxs.b;
            
          }
          return _this;
          
        }
        _this.nameToRGB();
      },
      fiber$makeRGBA :function _trc_Color_f_makeRGBA(_thread,force) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var rgb;
        var i;
        
        if (! force&&_this.hasRGBA()) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Color_ent_makeRGBA(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.hasHSLA())) { __pc=2     ; break; }
              _this.fiber$HSLToRGB(_thread, _this.value.h, _this.value.s, _this.value.l);
              __pc=1;return;
            case 1:
              rgb=_thread.retVal;
              
              if (_this.imageData) {
                i = 0;
                for (; i<3 ; i++) {
                  _this.imageData.data[_this.index+i]=rgb[i]*_this.maxs.r;
                }
                
              } else {
                _this.value.r=rgb[0]*_this.maxs.r;
                _this.value.g=rgb[1]*_this.maxs.g;
                _this.value.b=rgb[2]*_this.maxs.b;
                
              }
              _thread.exit(_this);return;
            case 2     :
              
              _this.fiber$nameToRGB(_thread);
              __pc=3;return;
            case 3:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      nameToRGB :function _trc_Color_nameToRGB() {
        "use strict";
        var _this=this;
        var ctx;
        var d;
        var i;
        
        ctx = _this.tmpCanvas();
        
        ctx.fillStyle=_this.value.name;
        ctx.fillRect(0,0,1,1);
        d = ctx.getImageData(0,0,1,1);
        
        d=d.data;
        if (_this.imageData) {
          i = 0;
          for (; i<4 ; i++) {
            _this.imageData.data[_this.index+i]=d[i];
          }
          
        } else {
          _this.value.r=d[0];
          _this.value.g=d[1];
          _this.value.b=d[2];
          _this.value.a=d[3];
          
        }
      },
      fiber$nameToRGB :function _trc_Color_f_nameToRGB(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        var d;
        var i;
        
        
        _thread.enter(function _trc_Color_ent_nameToRGB(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$tmpCanvas(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.fillStyle=_this.value.name;
              ctx.fillRect(0,0,1,1);
              d = ctx.getImageData(0,0,1,1);
              
              d=d.data;
              if (_this.imageData) {
                i = 0;
                for (; i<4 ; i++) {
                  _this.imageData.data[_this.index+i]=d[i];
                }
                
              } else {
                _this.value.r=d[0];
                _this.value.g=d[1];
                _this.value.b=d[2];
                _this.value.a=d[3];
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      makeHSLA :function _trc_Color_makeHSLA() {
        "use strict";
        var _this=this;
        var hsl;
        
        if (_this.hasHSLA()) {
          return _this;
        }
        if (! _this.hasRGBA()) {
          _this.nameToRGB();
        }
        
        if (_this.imageData) {
          hsl=_this.RGBToHSL(_this.imageData.data[_this.index]/_this.maxs.r,_this.imageData.data[_this.index+1]/_this.maxs.g,_this.imageData.data[_this.index+2]/_this.maxs.b);
          
        } else {
          hsl=_this.RGBToHSL(_this.value.r/_this.maxs.r,_this.value.g/_this.maxs.g,_this.value.b/_this.maxs.b);
          
        }
        _this.value.h=hsl[0];
        _this.value.s=hsl[1];
        _this.value.l=hsl[2];
        return _this;
      },
      fiber$makeHSLA :function _trc_Color_f_makeHSLA(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var hsl;
        
        if (_this.hasHSLA()) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Color_ent_makeHSLA(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this.hasRGBA())) { __pc=2     ; break; }
              _this.fiber$nameToRGB(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              
              if (!(_this.imageData)) { __pc=4     ; break; }
              _this.fiber$RGBToHSL(_thread, _this.imageData.data[_this.index]/_this.maxs.r, _this.imageData.data[_this.index+1]/_this.maxs.g, _this.imageData.data[_this.index+2]/_this.maxs.b);
              __pc=3;return;
            case 3:
              hsl=_thread.retVal;
              
              __pc=6     ;break;
            case 4     :
              _this.fiber$RGBToHSL(_thread, _this.value.r/_this.maxs.r, _this.value.g/_this.maxs.g, _this.value.b/_this.maxs.b);
              __pc=5;return;
            case 5:
              hsl=_thread.retVal;
              
            case 6     :
              
              _this.value.h=hsl[0];
              _this.value.s=hsl[1];
              _this.value.l=hsl[2];
              _thread.exit(_this);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      makeName :function _trc_Color_makeName(type) {
        "use strict";
        var _this=this;
        function p(r) {
          
          return _this.floor(r*100)+"%";
        }
        if (_this.hasName()) {
          return _this;
        }
        type=type||"rgb";
        if (type=="rgb") {
          _this.makeRGBA();
          if (_this.imageData) {
            _this.value.name="rgba("+[_this.floor(_this.imageData.data[_this.index]),_this.floor(_this.imageData.data[_this.index+1]),_this.floor(_this.imageData.data[_this.index+2]),_this.imageData.data[_this.index+3]/_this.maxs.a].join(",")+")";
            
          } else {
            _this.value.name="rgba("+[_this.floor(_this.value.r),_this.floor(_this.value.g),_this.floor(_this.value.b),_this.value.a/_this.maxs.a].join(",")+")";
            
          }
          
        }
        if (type=="hsl") {
          _this.makeHSLA();
          _this.value.name="hsla("+[_this.floor(_this.value.h),p(_this.value.s),p(_this.value.l),_this.value.a/_this.maxs.a].join(",")+")";
          
        }
        
      },
      fiber$makeName :function _trc_Color_f_makeName(_thread,type) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        function p(r) {
          
          return _this.floor(r*100)+"%";
        }
        if (_this.hasName()) {
          _thread.retVal=_this;return;
          
        }
        type=type||"rgb";
        
        _thread.enter(function _trc_Color_ent_makeName(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(type=="rgb")) { __pc=2     ; break; }
              _this.fiber$makeRGBA(_thread);
              __pc=1;return;
            case 1:
              
              if (_this.imageData) {
                _this.value.name="rgba("+[_this.floor(_this.imageData.data[_this.index]),_this.floor(_this.imageData.data[_this.index+1]),_this.floor(_this.imageData.data[_this.index+2]),_this.imageData.data[_this.index+3]/_this.maxs.a].join(",")+")";
                
              } else {
                _this.value.name="rgba("+[_this.floor(_this.value.r),_this.floor(_this.value.g),_this.floor(_this.value.b),_this.value.a/_this.maxs.a].join(",")+")";
                
              }
            case 2     :
              
              if (!(type=="hsl")) { __pc=4     ; break; }
              _this.fiber$makeHSLA(_thread);
              __pc=3;return;
            case 3:
              
              _this.value.name="hsla("+[_this.floor(_this.value.h),p(_this.value.s),p(_this.value.l),_this.value.a/_this.maxs.a].join(",")+")";
            case 4     :
              
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      toString :function _trc_Color_toString() {
        "use strict";
        var _this=this;
        
        _this.makeName();
        return _this.value.name;
      },
      tmpCanvas :function _trc_Color_tmpCanvas() {
        "use strict";
        var _this=this;
        var cv;
        
        if (Tonyu.classes.kernel.Color.ctx) {
          return Tonyu.classes.kernel.Color.ctx;
        }
        cv = $("<canvas>").attr({width: 1,height: 1}).css({display: "none"}).appendTo("body");
        
        Tonyu.classes.kernel.Color.ctx=cv[0].getContext("2d");
        return Tonyu.classes.kernel.Color.ctx;
      },
      fiber$tmpCanvas :function _trc_Color_f_tmpCanvas(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cv;
        
        if (Tonyu.classes.kernel.Color.ctx) {
          _thread.retVal=Tonyu.classes.kernel.Color.ctx;return;
          
        }
        cv = $("<canvas>").attr({width: 1,height: 1}).css({display: "none"}).appendTo("body");
        
        Tonyu.classes.kernel.Color.ctx=cv[0].getContext("2d");
        _thread.retVal=Tonyu.classes.kernel.Color.ctx;return;
        
        
        _thread.retVal=_this;return;
      },
      RGBToHSL :function _trc_Color_RGBToHSL(r,g,b) {
        "use strict";
        var _this=this;
        var min;
        var max;
        var diff;
        var h;
        var s;
        var l;
        
        min = Tonyu.globals.$Math.min(r,g,b);
        max = Tonyu.globals.$Math.max(r,g,b);
        diff = max-min;
        h = 0;
        s = 0;
        l = (min+max)/2;
        
        if (diff!=0) {
          s=l<0.5?diff/(max+min):diff/(2-max-min);
          h=(r==max?(g-b)/diff:g==max?2+(b-r)/diff:4+(r-g)/diff)*60;
          
        }
        return [h,s,l];
      },
      fiber$RGBToHSL :function _trc_Color_f_RGBToHSL(_thread,r,g,b) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var min;
        var max;
        var diff;
        var h;
        var s;
        var l;
        
        min = Tonyu.globals.$Math.min(r,g,b);
        max = Tonyu.globals.$Math.max(r,g,b);
        diff = max-min;
        h = 0;
        s = 0;
        l = (min+max)/2;
        
        if (diff!=0) {
          s=l<0.5?diff/(max+min):diff/(2-max-min);
          h=(r==max?(g-b)/diff:g==max?2+(b-r)/diff:4+(r-g)/diff)*60;
          
        }
        _thread.retVal=[h,s,l];return;
        
        
        _thread.retVal=_this;return;
      },
      HSLToRGB :function _trc_Color_HSLToRGB(h,s,l) {
        "use strict";
        var _this=this;
        var temp2;
        var temp1;
        var rtemp;
        var gtemp;
        var btemp;
        var rgb;
        var i;
        
        if (s==0) {
          return [l,l,l];
          
        }
        temp2 = l<0.5?l*(1+s):l+s-l*s;
        
        temp1 = 2*l-temp2;
        
        h/=360;
        rtemp = (h+1/3)%1;
        gtemp = h;
        btemp = (h+2/3)%1;
        rgb = [rtemp,gtemp,btemp];
        i = 0;
        
        ;
        
        while(i<3) {
          {
            rgb[i]=rgb[i]<1/6?temp1+(temp2-temp1)*6*rgb[i]:rgb[i]<1/2?temp2:rgb[i]<2/3?temp1+(temp2-temp1)*6*(2/3-rgb[i]):temp1;
          }
          ++ i;
        }
        return rgb;
      },
      fiber$HSLToRGB :function _trc_Color_f_HSLToRGB(_thread,h,s,l) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var temp2;
        var temp1;
        var rtemp;
        var gtemp;
        var btemp;
        var rgb;
        var i;
        
        if (s==0) {
          _thread.retVal=[l,l,l];return;
          
          
        }
        temp2 = l<0.5?l*(1+s):l+s-l*s;
        
        temp1 = 2*l-temp2;
        
        h/=360;
        rtemp = (h+1/3)%1;
        gtemp = h;
        btemp = (h+2/3)%1;
        rgb = [rtemp,gtemp,btemp];
        i = 0;
        
        ;
        
        while(i<3) {
          {
            rgb[i]=rgb[i]<1/6?temp1+(temp2-temp1)*6*rgb[i]:rgb[i]<1/2?temp2:rgb[i]<2/3?temp1+(temp2-temp1)*6*(2/3-rgb[i]):temp1;
          }
          ++ i;
        }
        _thread.retVal=rgb;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__name :function _trc_Color___getter__name() {
        "use strict";
        var _this=this;
        
        _this.makeName();
        return _this.value.name;
      },
      __setter__name :function _trc_Color___setter__name(v) {
        "use strict";
        var _this=this;
        
        _this.value.name=v;
        _this.nameToRGB();
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"fillNum":{"nowait":false},"__getter__r":{"nowait":true},"__getter__g":{"nowait":true},"__getter__b":{"nowait":true},"__getter__a":{"nowait":true},"__setter__a":{"nowait":true},"__setter__r":{"nowait":true},"__setter__g":{"nowait":true},"__setter__b":{"nowait":true},"__getter__h":{"nowait":true},"__getter__s":{"nowait":true},"__getter__l":{"nowait":true},"__setter__h":{"nowait":true},"__setter__s":{"nowait":true},"__setter__l":{"nowait":true},"setHSLA":{"nowait":false},"setRGBA":{"nowait":false},"hasRGBA":{"nowait":false},"hasHSLA":{"nowait":false},"hasName":{"nowait":false},"clearRGBA":{"nowait":false},"clearHSLA":{"nowait":false},"clearName":{"nowait":false},"lerpRGBA":{"nowait":false},"distRGBA":{"nowait":false},"distHSLA":{"nowait":false},"makeRGBA":{"nowait":false},"nameToRGB":{"nowait":false},"makeHSLA":{"nowait":false},"makeName":{"nowait":false},"toString":{"nowait":true},"tmpCanvas":{"nowait":false},"RGBToHSL":{"nowait":false},"HSLToRGB":{"nowait":false},"__getter__name":{"nowait":true},"__setter__name":{"nowait":true}},"fields":{"maxs":{},"imageData":{},"index":{},"value":{},"type":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Context3D',
  shortName: 'Context3D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Context3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
        
      },
      fiber$main :function _trc_Context3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        
        _thread.retVal=_this;return;
      },
      addSprite2D :function _trc_Context3D_addSprite2D(s) {
        "use strict";
        var _this=this;
        
        if (! (Tonyu.is(s,Tonyu.classes.kernel.ActorSprite))) {
          s=new Tonyu.classes.kernel.ActorSprite(s);
        }
        _this.sprites2D.push(s);
      },
      fiber$addSprite2D :function _trc_Context3D_f_addSprite2D(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! (Tonyu.is(s,Tonyu.classes.kernel.ActorSprite))) {
          s=new Tonyu.classes.kernel.ActorSprite(s);
        }
        _this.sprites2D.push(s);
        
        _thread.retVal=_this;return;
      },
      addSprite3D :function _trc_Context3D_addSprite3D(s) {
        "use strict";
        var _this=this;
        var pos3d;
        var pt;
        var scl;
        
        pos3d = s.transform?s.transform.position:(s.position||new Tonyu.classes.kernel.Vec3(s.x||0,s.y||0,s.z||0));
        
        pt = _this.to2D(pos3d);
        
        if (pt) {
          scl = (s.transform?s.transform.scale:(s.scale||1))*pt.scale;
          
          _this.addSprite2D({x: pt.x,y: pt.y,zOrder: pt.z,scaleX: (s.scaleX||1)*scl,scaleY: (s.scaleY||s.scaleX||1)*scl,p: s.p,text: s.text,fillStyle: s.fillStyle,width: s.width,height: s.height,radius: s.radius,rotation: s.rotation||0,alpha: s.alpha||255});
          
        }
      },
      fiber$addSprite3D :function _trc_Context3D_f_addSprite3D(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var pos3d;
        var pt;
        var scl;
        
        pos3d = s.transform?s.transform.position:(s.position||new Tonyu.classes.kernel.Vec3(s.x||0,s.y||0,s.z||0));
        
        
        _thread.enter(function _trc_Context3D_ent_addSprite3D(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$to2D(_thread, pos3d);
              __pc=1;return;
            case 1:
              pt=_thread.retVal;
              
              if (!(pt)) { __pc=3     ; break; }
              scl = (s.transform?s.transform.scale:(s.scale||1))*pt.scale;
              
              _this.fiber$addSprite2D(_thread, {x: pt.x,y: pt.y,zOrder: pt.z,scaleX: (s.scaleX||1)*scl,scaleY: (s.scaleY||s.scaleX||1)*scl,p: s.p,text: s.text,fillStyle: s.fillStyle,width: s.width,height: s.height,radius: s.radius,rotation: s.rotation||0,alpha: s.alpha||255});
              __pc=2;return;
            case 2:
              
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initialize :function _trc_Context3D_initialize(p) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [p]);
        _this.sprites2D=[];
        _this.curTransform=_this.camera.transform.inverse;
        _this.stack=[];
      },
      to2D :function _trc_Context3D_to2D(pos) {
        "use strict";
        var _this=this;
        
        if (! pos) {
          return _this.camera.to2D(_this.curTransform.position);
          
        }
        return _this.camera.to2D(_this.curTransform.childToSibling(pos));
      },
      fiber$to2D :function _trc_Context3D_f_to2D(_thread,pos) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! pos) {
          _thread.retVal=_this.camera.to2D(_this.curTransform.position);return;
          
          
        }
        _thread.retVal=_this.camera.to2D(_this.curTransform.childToSibling(pos));return;
        
        
        _thread.retVal=_this;return;
      },
      setTransform :function _trc_Context3D_setTransform(t) {
        "use strict";
        var _this=this;
        
        _this.curTransform=t;
      },
      fiber$setTransform :function _trc_Context3D_f_setTransform(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.curTransform=t;
        
        _thread.retVal=_this;return;
      },
      transform :function _trc_Context3D_transform(t) {
        "use strict";
        var _this=this;
        
        _this.curTransform=_this.curTransform.childToSibling(t);
      },
      fiber$transform :function _trc_Context3D_f_transform(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.curTransform=_this.curTransform.childToSibling(t);
        
        _thread.retVal=_this;return;
      },
      save :function _trc_Context3D_save() {
        "use strict";
        var _this=this;
        
        _this.stack.push({curTransform: _this.curTransform});
      },
      fiber$save :function _trc_Context3D_f_save(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.stack.push({curTransform: _this.curTransform});
        
        _thread.retVal=_this;return;
      },
      restore :function _trc_Context3D_restore() {
        "use strict";
        var _this=this;
        
        _this.extend(_this.stack.pop());
      },
      fiber$restore :function _trc_Context3D_f_restore(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.extend(_this.stack.pop());
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"addSprite2D":{"nowait":false},"addSprite3D":{"nowait":false},"new":{"nowait":false},"to2D":{"nowait":false},"setTransform":{"nowait":false},"transform":{"nowait":false},"save":{"nowait":false},"restore":{"nowait":false}},"fields":{"camera":{},"sprites2D":{},"curTransform":{},"stack":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.GIFWriter',
  shortName: 'GIFWriter',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.ParallelMod,Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.FileMod,Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.ThreadGroupMod],
  methods: function (__superClass) {
    return {
      main :function _trc_GIFWriter_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_GIFWriter_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_GIFWriter_initialize(params) {
        "use strict";
        var _this=this;
        var cnt;
        var wevt;
        
        __superClass.apply( _this, [params]);
        Tonyu.globals.$currentProject.requestPlugin("gif");
        _this.target=_this.target||Tonyu.globals.$Screen;
        _this.fps=_this.fps||15;
        _this.interval=_this.interval||_this.floor(Tonyu.globals.$Boot.getFrameRate()/_this.fps);
        _this.duration=(1000/Tonyu.globals.$Boot.getFrameRate())*_this.interval;
        if (! _this.manual) {
          if (_this.delay) {
            cnt = 0;
            
            
            wevt=Tonyu.globals.$Boot.on("afterDraw",(function anonymous_637() {
              
              cnt++;
              if (cnt>=_this.delay) {
                wevt.remove();
                _this.start();
                
              }
            }));
            
          } else {
            _this.start();
          }
          
        }
      },
      start :function _trc_GIFWriter_start() {
        "use strict";
        var _this=this;
        var cnt;
        
        if (_this.e) {
          return _this;
        }
        _this.frames=[];
        _this.e=new GIF({workerScript: GIF_WORKER_URL,workers: 2,quality: 10});
        _this.encoded=0;
        if (! _this.manual) {
          cnt = 0;
          
          _this.evt=Tonyu.globals.$Boot.on("afterDraw",(function anonymous_1221(e) {
            var drawn;
            
            drawn = e.drawn;
            
            cnt++;
            if (cnt>=_this.interval) {
              cnt=0;
              _this.addFrame();
              
            }
            if (typeof  _this.length==="number") {
              _this.length--;
              if (_this.length<=0) {
                switch (_this.after) {
                case "save":
                  return _this.save()["catch"]((function anonymous_1583(e) {
                    
                    console.error(e);
                  }));
                case "download":
                  return _this.download();
                }
                
              }
              
            }
          }));
          
        }
      },
      fiber$start :function _trc_GIFWriter_f_start(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cnt;
        
        if (_this.e) {
          _thread.retVal=_this;return;
          
        }
        _this.frames=[];
        _this.e=new GIF({workerScript: GIF_WORKER_URL,workers: 2,quality: 10});
        _this.encoded=0;
        
        _thread.enter(function _trc_GIFWriter_ent_start(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this.manual)) { __pc=1     ; break; }
              cnt = 0;
              
              _this.evt=Tonyu.globals.$Boot.on("afterDraw",(function anonymous_1221(e) {
                var drawn;
                
                drawn = e.drawn;
                
                cnt++;
                if (cnt>=_this.interval) {
                  cnt=0;
                  _this.addFrame();
                  
                }
                if (typeof  _this.length==="number") {
                  _this.length--;
                  if (_this.length<=0) {
                    switch (_this.after) {
                    case "save":
                      return _this.save()["catch"]((function anonymous_1583(e) {
                        
                        console.error(e);
                      }));
                    case "download":
                      return _this.download();
                    }
                    
                  }
                  
                }
              }));
            case 1     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      addFrame :function _trc_GIFWriter_addFrame() {
        "use strict";
        var _this=this;
        
        if (! _this.e) {
          _this.start();
        }
        _this.e.addFrame(_this.target.image,{delay: _this.duration,copy: true});
      },
      fiber$addFrame :function _trc_GIFWriter_f_addFrame(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_GIFWriter_ent_addFrame(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this.e)) { __pc=2     ; break; }
              _this.fiber$start(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _this.e.addFrame(_this.target.image,{delay: _this.duration,copy: true});
              _thread.exit(_this);return;
            }
          }
        });
      },
      finish :function _trc_GIFWriter_finish() {
        "use strict";
        var _this=this;
        var r;
        
        r = _this.runPromise((function anonymous_2016(onFinish,fail) {
          
          if (_this.evt) {
            _this.evt.remove();
            _this.evt=null;
            
          }
          _this.e.on('finished',onFinish);
          _this.e.render();
        }));
        
        return r;
      },
      fiber$finish :function _trc_GIFWriter_f_finish(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        _thread.enter(function _trc_GIFWriter_ent_finish(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$runPromise(_thread, (function anonymous_2016(onFinish,fail) {
                
                if (_this.evt) {
                  _this.evt.remove();
                  _this.evt=null;
                  
                }
                _this.e.on('finished',onFinish);
                _this.e.render();
              }));
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      download :function _trc_GIFWriter_download(f) {
        "use strict";
        var _this=this;
        var r;
        
        f=f||_this.filename||"download.gif";
        console.log("DL",f);
        r = _this.runPromise((function anonymous_2300(succ,err) {
          
          _this.finish().then((function anonymous_2337(blob) {
            
            FS.Content.download(blob,f);
            _this.e=null;
          })).then((function anonymous_2427() {
            
            console.log("DL OK");
          }),err);
        }));
        
        return r;
      },
      fiber$download :function _trc_GIFWriter_f_download(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        f=f||_this.filename||"download.gif";
        console.log("DL",f);
        
        _thread.enter(function _trc_GIFWriter_ent_download(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$runPromise(_thread, (function anonymous_2300(succ,err) {
                
                _this.finish().then((function anonymous_2337(blob) {
                  
                  FS.Content.download(blob,f);
                  _this.e=null;
                })).then((function anonymous_2427() {
                  
                  console.log("DL OK");
                }),err);
              }));
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      save :function _trc_GIFWriter_save(f) {
        "use strict";
        var _this=this;
        var r;
        
        console.log("Save",f);
        r = _this.runPromise((function anonymous_2547(succ,err) {
          
          _this.finish().then((function anonymous_2584(blob) {
            
            f=_this.file(f||_this.filename);
            return f.setBlob(blob);
          })).then((function anonymous_2681() {
            
            _this.e=null;
            succ();
          })).then((function anonymous_2743() {
            
            console.log("Save OK");
          }),err);
        }));
        
        return r;
      },
      fiber$save :function _trc_GIFWriter_f_save(_thread,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        console.log("Save",f);
        
        _thread.enter(function _trc_GIFWriter_ent_save(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$runPromise(_thread, (function anonymous_2547(succ,err) {
                
                _this.finish().then((function anonymous_2584(blob) {
                  
                  f=_this.file(f||_this.filename);
                  return f.setBlob(blob);
                })).then((function anonymous_2681() {
                  
                  _this.e=null;
                  succ();
                })).then((function anonymous_2743() {
                  
                  console.log("Save OK");
                }),err);
              }));
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"start":{"nowait":false},"addFrame":{"nowait":false},"finish":{"nowait":false},"download":{"nowait":false},"save":{"nowait":false}},"fields":{"target":{},"fps":{},"interval":{},"duration":{},"manual":{},"delay":{},"e":{},"frames":{},"encoded":{},"evt":{},"length":{},"after":{},"filename":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MapChip',
  shortName: 'MapChip',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MapChip_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_MapChip_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_MapChip_initialize(params) {
        "use strict";
        var _this=this;
        var l;
        var _it_5725;
        
        if (params.layer) {
          params.layers=[params.layer];
        }
        if (typeof  params.layers==="string") {
          params.layers=[params.layers];
        }
        __superClass.apply( _this, [params]);
        if (! _this.layers) {
          _this.layers=_this.map.allLayerNames;
        }
        _it_5725=Tonyu.iterator(_this.layers,1);
        while(_it_5725.next()) {
          l=_it_5725[0];
          
          if (typeof  l!=="string") {
            console.log(_this.layers);
            throw new Error("Invalid layer spec"+l);
            
            
          }
          
        }
      },
      moved :function _trc_MapChip_moved(x,y) {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.MapChip({map: _this.map,x: x,y: y,layers: _this.layers});
      },
      fiber$moved :function _trc_MapChip_f_moved(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.MapChip({map: _this.map,x: x,y: y,layers: _this.layers});return;
        
        
        _thread.retVal=_this;return;
      },
      movedBy :function _trc_MapChip_movedBy(dx,dy) {
        "use strict";
        var _this=this;
        
        return _this.moved(_this.x+dx,_this.y+dy);
      },
      fiber$movedBy :function _trc_MapChip_f_movedBy(_thread,dx,dy) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_MapChip_ent_movedBy(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$moved(_thread, _this.x+dx, _this.y+dy);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      withLayers :function _trc_MapChip_withLayers() {
        "use strict";
        var _this=this;
        var a;
        var nl;
        
        a = Array.prototype.slice.call(arguments);
        
        
        if (a.length===0) {
          nl=_this.map.allLayerNames;
          
        } else {
          if (a.length==1&&typeof  a[0]!=="string") {
            nl=a[0];
            
          } else {
            nl=a;
            
          }
        }
        return new Tonyu.classes.kernel.MapChip({map: _this.map,x: _this.x,y: _this.y,layers: nl});
      },
      fiber$withLayers :function _trc_MapChip_f_withLayers(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var nl;
        
        a = Array.prototype.slice.call(_arguments);
        
        
        if (a.length===0) {
          nl=_this.map.allLayerNames;
          
        } else {
          if (a.length==1&&typeof  a[0]!=="string") {
            nl=a[0];
            
          } else {
            nl=a;
            
          }
        }
        _thread.retVal=new Tonyu.classes.kernel.MapChip({map: _this.map,x: _this.x,y: _this.y,layers: nl});return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__pAll :function _trc_MapChip___getter__pAll() {
        "use strict";
        var _this=this;
        var res;
        var l;
        var _it_5730;
        
        res = {};
        
        _it_5730=Tonyu.iterator(_this.layers,1);
        while(_it_5730.next()) {
          l=_it_5730[0];
          
          res[l]=_this.map.getWithLayerName(l,_this.x,_this.y);
          
        }
        return res;
      },
      __setter__pAll :function _trc_MapChip___setter__pAll(vals) {
        "use strict";
        var _this=this;
        var l;
        var val;
        var _it_5734;
        
        _it_5734=Tonyu.iterator(vals,2);
        while(_it_5734.next()) {
          l=_it_5734[0];
          val=_it_5734[1];
          
          _this.map.setWithLayerName(l,_this.x,_this.y,val);
          
        }
      },
      __getter__p :function _trc_MapChip___getter__p() {
        "use strict";
        var _this=this;
        
        return _this.map.getWithLayerName(_this.layers[0],_this.x,_this.y);
      },
      __setter__p :function _trc_MapChip___setter__p(val) {
        "use strict";
        var _this=this;
        
        if (typeof  val==="object") {
          return _this.pAll=val;
        }
        return _this.map.setWithLayerName(_this.layers[0],_this.x,_this.y,val);
      },
      has :function _trc_MapChip_has(p) {
        "use strict";
        var _this=this;
        var chipLayer;
        var _it_5738;
        
        if (p==null) {
          return _this.hasExcept(- 1);
        }
        if (typeof  p==="number") {
          p=[p];
        }
        _it_5738=Tonyu.iterator(_this.layers,1);
        while(_it_5738.next()) {
          chipLayer=_it_5738[0];
          
          if (p.indexOf(_this.map.getWithLayerName(chipLayer,_this.x,_this.y))>=0) {
            return _this.withLayers(chipLayer);
            
          }
          
        }
        return null;
      },
      fiber$has :function _trc_MapChip_f_has(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var chipLayer;
        var _it_5738;
        
        
        _thread.enter(function _trc_MapChip_ent_has(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(p==null)) { __pc=2     ; break; }
              _this.fiber$hasExcept(_thread, - 1);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              if (typeof  p==="number") {
                p=[p];
              }
              _it_5738=Tonyu.iterator(_this.layers,1);
            case 3:
              if (!(_it_5738.next())) { __pc=6     ; break; }
              chipLayer=_it_5738[0];
              
              if (!(p.indexOf(_this.map.getWithLayerName(chipLayer,_this.x,_this.y))>=0)) { __pc=5     ; break; }
              _this.fiber$withLayers(_thread, chipLayer);
              __pc=4;return;
            case 4:
              _thread.exit(_thread.retVal);return;
              
            case 5     :
              
              __pc=3;break;
            case 6     :
              
              _thread.exit(null);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      hasExcept :function _trc_MapChip_hasExcept(p) {
        "use strict";
        var _this=this;
        var chipLayer;
        var _it_5741;
        
        if (typeof  p==="number") {
          p=[p];
        }
        _it_5741=Tonyu.iterator(_this.layers,1);
        while(_it_5741.next()) {
          chipLayer=_it_5741[0];
          
          if (p.indexOf(_this.map.getWithLayerName(chipLayer,_this.x,_this.y))<0) {
            return _this.withLayers(chipLayer);
            
          }
          
        }
        return null;
      },
      fiber$hasExcept :function _trc_MapChip_f_hasExcept(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var chipLayer;
        var _it_5741;
        
        if (typeof  p==="number") {
          p=[p];
        }
        
        _thread.enter(function _trc_MapChip_ent_hasExcept(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_5741=Tonyu.iterator(_this.layers,1);
            case 1:
              if (!(_it_5741.next())) { __pc=4     ; break; }
              chipLayer=_it_5741[0];
              
              if (!(p.indexOf(_this.map.getWithLayerName(chipLayer,_this.x,_this.y))<0)) { __pc=3     ; break; }
              _this.fiber$withLayers(_thread, chipLayer);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
            case 3     :
              
              __pc=1;break;
            case 4     :
              
              _thread.exit(null);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      toActor :function _trc_MapChip_toActor(options,params) {
        "use strict";
        var _this=this;
        var klass;
        var w;
        var res;
        
        if (typeof  options==="function") {
          options={class: options};
          
        }
        klass = options.class;
        
        params=params||options.params||{};
        w = _this.toWorld();
        
        params.x=w.x;
        params.y=w.y;
        params.p=_this.p;
        res = new klass(params);
        
        _this.p=- 1;
        return res;
      },
      fiber$toActor :function _trc_MapChip_f_toActor(_thread,options,params) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var klass;
        var w;
        var res;
        
        if (typeof  options==="function") {
          options={class: options};
          
        }
        klass = options.class;
        
        params=params||options.params||{};
        
        _thread.enter(function _trc_MapChip_ent_toActor(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$toWorld(_thread);
              __pc=1;return;
            case 1:
              w=_thread.retVal;
              
              params.x=w.x;
              params.y=w.y;
              params.p=_this.p;
              res = new klass(params);
              
              _this.p=- 1;
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      toWorld :function _trc_MapChip_toWorld(align) {
        "use strict";
        var _this=this;
        
        return _this.map.chipToWorld(_this.x,_this.y,align);
      },
      fiber$toWorld :function _trc_MapChip_f_toWorld(_thread,align) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.map.chipToWorld(_this.x,_this.y,align);return;
        
        
        _thread.retVal=_this;return;
      },
      getBuffer :function _trc_MapChip_getBuffer() {
        "use strict";
        var _this=this;
        
        return _this.map.getBuf(_this.x,_this.y);
      },
      fiber$getBuffer :function _trc_MapChip_f_getBuffer(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.map.getBuf(_this.x,_this.y);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"moved":{"nowait":false},"movedBy":{"nowait":false},"withLayers":{"nowait":false},"__getter__pAll":{"nowait":true},"__setter__pAll":{"nowait":true},"__getter__p":{"nowait":true},"__setter__p":{"nowait":true},"has":{"nowait":false},"hasExcept":{"nowait":false},"toActor":{"nowait":false},"toWorld":{"nowait":false},"getBuffer":{"nowait":false}},"fields":{"map":{},"x":{},"y":{},"layers":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MapCodec',
  shortName: 'MapCodec',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MapCodec_main() {
        "use strict";
        var _this=this;
        var _it_5747;
        
        "field strict";
        
        _this.resc = Tonyu.globals.$currentProject.getResource().images;
        
        _this.patVals = [];
        
        _this.c2p = [];
        
        _this.cNumberSeq = 0;
        
        _this.entire = {version: 2};
        
        
        _it_5747=Tonyu.iterator(_this.resc,1);
        while(_it_5747.next()) {
          _this.r=_it_5747[0];
          
          _this.patVals.unshift({name: _this.r.name,value: Tonyu.getGlobal(_this.r.name)});
          
        }
      },
      fiber$main :function _trc_MapCodec_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var _it_5747;
        
        "field strict";
        
        _this.resc = Tonyu.globals.$currentProject.getResource().images;
        
        _this.patVals = [];
        
        _this.c2p = [];
        
        _this.cNumberSeq = 0;
        
        _this.entire = {version: 2};
        
        
        _it_5747=Tonyu.iterator(_this.resc,1);
        while(_it_5747.next()) {
          _this.r=_it_5747[0];
          
          _this.patVals.unshift({name: _this.r.name,value: Tonyu.getGlobal(_this.r.name)});
          
        }
        
        _thread.retVal=_this;return;
      },
      ignoreCheck :function _trc_MapCodec_ignoreCheck() {
        "use strict";
        var _this=this;
        
        _this.noCheck=true;
        return _this;
      },
      genHeader :function _trc_MapCodec_genHeader() {
        "use strict";
        var _this=this;
        var header;
        var l;
        var _it_5749;
        
        header = {size: {row: _this.map.row,col: _this.map.col,w: _this.map.chipWidth,h: _this.map.chipHeight},expand: _this.map._expand||{},layerNames: [],e2c: {}};
        
        _this.entire.header=header;
        _it_5749=Tonyu.iterator(_this.map.chipLayers,1);
        while(_it_5749.next()) {
          l=_it_5749[0];
          
          header.layerNames.push(l.name);
          
        }
      },
      loadHeader :function _trc_MapCodec_loadHeader() {
        "use strict";
        var _this=this;
        var header;
        var e2c;
        var e;
        var c;
        var _it_5753;
        var layerNames;
        
        header = _this.entire.header;
        
        e2c = header.e2c;
        
        _this.map.row=header.size.row;
        _this.map.col=header.size.col;
        _this.map.chipWidth=header.size.w||_this.map.chipWidth||32;
        _this.map.chipHeight=header.size.h||_this.map.chipHeight||32;
        _this.map._expand=header.expand;
        _it_5753=Tonyu.iterator(e2c,2);
        while(_it_5753.next()) {
          e=_it_5753[0];
          c=_it_5753[1];
          
          _this.checkExprValidity(e);
          _this.c2p[c]=_this.exprToPat(e);
          
        }
        layerNames = _this.entire.header.layerNames;
        
        _this.map.chipLayers=layerNames.map((function anonymous_1615(layerName) {
          var m;
          
          m = new Tonyu.classes.kernel.Matrix;
          
          m.name=layerName;
          return m;
        }));
      },
      checkExprValidity :function _trc_MapCodec_checkExprValidity(e) {
        "use strict";
        var _this=this;
        var p;
        var re;
        
        p = _this.exprToPat(e);
        
        if (p<0) {
          return _this;
        }
        re = _this.patToExpr(p);
        
        _this.assert(re===e,R("invalidPatExpr",e));
      },
      assert :function _trc_MapCodec_assert(b,mesg) {
        "use strict";
        var _this=this;
        
        if (! b&&! _this.noCheck) {
          throw new Error(mesg);
          
          
        }
      },
      genChip :function _trc_MapCodec_genChip() {
        "use strict";
        var _this=this;
        var header;
        
        header = _this.entire.header;
        
        _this.entire.chip=header.layerNames.map((function anonymous_2096(layerName) {
          var mat;
          var i;
          var row;
          var j;
          var e;
          var c;
          
          mat = [];
          
          i = 0;
          for (; i<_this.map.row ; i++) {
            {
              row = [];
              
              mat.push(row);
              j = 0;
              for (; j<_this.map.col ; j++) {
                {
                  e = _this.exprAt(j,i,layerName);
                  
                  c = _this.exprTocNumber(e);
                  
                  row.push(c);
                }
              }
            }
          }
          return mat;
        }));
      },
      loadChip :function _trc_MapCodec_loadChip() {
        "use strict";
        var _this=this;
        var c;
        var layerNames;
        var k;
        var i;
        var j;
        var cNumber;
        var p;
        
        c = _this.entire.chip;
        
        layerNames = _this.entire.header.layerNames;
        
        k = 0;
        for (; k<c.length ; k++) {
          {
            i = 0;
            for (; i<c[k].length ; i++) {
              {
                j = 0;
                for (; j<c[k][i].length ; j++) {
                  {
                    cNumber = c[k][i][j];
                    
                    p = _this.c2p[cNumber];
                    
                    _this.map.chipLayers[k].set(j,i,p);
                  }
                }
              }
            }
          }
        }
      },
      genEntire :function _trc_MapCodec_genEntire() {
        "use strict";
        var _this=this;
        
        _this.entire={version: 2.1};
        _this.genHeader();
        _this.genChip();
      },
      save :function _trc_MapCodec_save(file) {
        "use strict";
        var _this=this;
        
        _this.genEntire();
        file.obj(_this.entire);
      },
      exprTocNumber :function _trc_MapCodec_exprTocNumber(expr) {
        "use strict";
        var _this=this;
        var e2c;
        
        e2c = _this.entire.header.e2c;
        
        if (e2c[expr]!=null) {
          return e2c[expr];
        }
        e2c[expr]=_this.cNumberSeq;
        _this.cNumberSeq++;
        return e2c[expr];
      },
      exprAt :function _trc_MapCodec_exprAt(x,y,layer) {
        "use strict";
        var _this=this;
        
        return _this.patToExpr(_this.map.getWithLayerName(layer,x,y));
      },
      patToExpr :function _trc_MapCodec_patToExpr(p) {
        "use strict";
        var _this=this;
        var r;
        var _it_5780;
        
        _it_5780=Tonyu.iterator(_this.patVals,1);
        while(_it_5780.next()) {
          r=_it_5780[0];
          
          if (p>=r.value) {
            return r.name+"+"+(p-r.value);
          }
          
        }
        return "e";
      },
      exprToPat :function _trc_MapCodec_exprToPat(name) {
        "use strict";
        var _this=this;
        var ns;
        var g;
        
        if (name==="e") {
          return - 1;
        }
        ns = name.split("+");
        
        g = Tonyu.getGlobal(ns[0]);
        
        if (g==null) {
          throw new Error(R("noSuchPat",ns[0]));
          
        }
        return g+(ns[1]-0);
      },
      load :function _trc_MapCodec_load(file) {
        "use strict";
        var _this=this;
        
        _this.entire=file.obj();
        if (_this.entire.version>=2) {
          _this.loadVer2();
        } else {
          _this.loadVer1(_this.entire);
        }
      },
      loadVer1 :function _trc_MapCodec_loadVer1(baseData) {
        "use strict";
        var _this=this;
        var mapTable;
        var mapOnTable;
        var mapMat;
        var mapOnMat;
        
        mapTable = baseData[0];
        
        mapOnTable = baseData[1];
        
        if (baseData[2]) {
          _this.map.chipWidth=(baseData[2]-0)||_this.map.chipWidth||32;
        }
        if (baseData[3]) {
          _this.map.chipHeight=(baseData[3]-0)||_this.map.chipHeight||32;
        }
        mapMat = new Tonyu.classes.kernel.Matrix;
        
        mapMat.fromArray(mapTable);
        mapMat.name="base";
        mapOnMat = new Tonyu.classes.kernel.Matrix;
        
        mapOnMat.fromArray(mapOnTable);
        mapOnMat.name="on";
        _this.map.chipLayers=[mapMat,mapOnMat];
        _this.map.pack();
      },
      saveVer1 :function _trc_MapCodec_saveVer1(saveDataFile) {
        "use strict";
        var _this=this;
        var chipLayers;
        var data;
        
        chipLayers = _this.map.chipLayers;
        
        data = [chipLayers[0].toArray(),chipLayers[1].toArray(),_this.map.chipWidth,_this.map.chipHeight];
        
        saveDataFile.obj(data);
      },
      loadVer2 :function _trc_MapCodec_loadVer2() {
        "use strict";
        var _this=this;
        
        _this.loadHeader();
        _this.loadChip();
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"ignoreCheck":{"nowait":true},"genHeader":{"nowait":true},"loadHeader":{"nowait":true},"checkExprValidity":{"nowait":true},"assert":{"nowait":true},"genChip":{"nowait":true},"loadChip":{"nowait":true},"genEntire":{"nowait":true},"save":{"nowait":true},"exprTocNumber":{"nowait":true},"exprAt":{"nowait":true},"patToExpr":{"nowait":true},"exprToPat":{"nowait":true},"load":{"nowait":true},"loadVer1":{"nowait":true},"saveVer1":{"nowait":true},"loadVer2":{"nowait":true}},"fields":{"map":{},"resc":{},"patVals":{},"c2p":{},"cNumberSeq":{},"entire":{},"noCheck":{},"r":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MultiLayerTouches',
  shortName: 'MultiLayerTouches',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_MultiLayerTouches_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        _this.layers = new WeakMap;
        
      },
      fiber$main :function _trc_MultiLayerTouches_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _this.layers = new WeakMap;
        
        
        _thread.retVal=_this;return;
      },
      add :function _trc_MultiLayerTouches_add(a) {
        "use strict";
        var _this=this;
        var layer;
        var ts;
        
        layer = _this.screen.findLayer(a.getSpriteGroup());
        
        ts = _this.getOrNewTouchables(layer);
        
        if (ts.indexOf(a)<0) {
          ts.push(a);
        }
      },
      fiber$add :function _trc_MultiLayerTouches_f_add(_thread,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var layer;
        var ts;
        
        layer = _this.screen.findLayer(a.getSpriteGroup());
        
        
        _thread.enter(function _trc_MultiLayerTouches_ent_add(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getOrNewTouchables(_thread, layer);
              __pc=1;return;
            case 1:
              ts=_thread.retVal;
              
              if (ts.indexOf(a)<0) {
                ts.push(a);
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      remove :function _trc_MultiLayerTouches_remove(a) {
        "use strict";
        var _this=this;
        var layer;
        var ts;
        var idx;
        
        layer = _this.screen.findLayer(a.getSpriteGroup());
        
        ts = _this.getOrNewTouchables(layer);
        
        idx = ts.indexOf(a);
        
        if (idx>=0) {
          ts.splice(idx,1);
        }
      },
      fiber$remove :function _trc_MultiLayerTouches_f_remove(_thread,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var layer;
        var ts;
        var idx;
        
        layer = _this.screen.findLayer(a.getSpriteGroup());
        
        
        _thread.enter(function _trc_MultiLayerTouches_ent_remove(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getOrNewTouchables(_thread, layer);
              __pc=1;return;
            case 1:
              ts=_thread.retVal;
              
              idx = ts.indexOf(a);
              
              if (idx>=0) {
                ts.splice(idx,1);
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      getOrNewTouchables :function _trc_MultiLayerTouches_getOrNewTouchables(layer) {
        "use strict";
        var _this=this;
        var res;
        
        res = _this.getTouchables(layer);
        
        if (res) {
          return res;
        }
        res=[];
        _this.layers.set(layer,res);
        return res;
      },
      fiber$getOrNewTouchables :function _trc_MultiLayerTouches_f_getOrNewTouchables(_thread,layer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        
        _thread.enter(function _trc_MultiLayerTouches_ent_getOrNewTouchables(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getTouchables(_thread, layer);
              __pc=1;return;
            case 1:
              res=_thread.retVal;
              
              if (!(res)) { __pc=2     ; break; }
              _thread.exit(res);return;
            case 2     :
              
              res=[];
              _this.layers.set(layer,res);
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getTouchables :function _trc_MultiLayerTouches_getTouchables(layer) {
        "use strict";
        var _this=this;
        
        return _this.layers.get(layer);
      },
      fiber$getTouchables :function _trc_MultiLayerTouches_f_getTouchables(_thread,layer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.layers.get(layer);return;
        
        
        _thread.retVal=_this;return;
      },
      findActor :function _trc_MultiLayerTouches_findActor(shape) {
        "use strict";
        var _this=this;
        var cands;
        var i;
        var layer;
        var ts;
        var localShape;
        var t;
        var _it_5797;
        var c;
        var ch;
        var shape;
        var j;
        var cmp;
        function compZ(a,b) {
          var c;
          
          c = a.zOrderLayer-b.zOrderLayer;
          
          if (c) {
            return c;
          }
          return a.zOrder-b.zOrder;
        }
        cands = [];
        i = 0;
        
        i = 0;
        for (; i<_this.screen.layers.length ; i++) {
          {
            layer = _this.screen.layers[i];
            
            ts = _this.getTouchables(layer);
            
            if (! ts) {
              continue;
              
            }
            localShape = shape.layerChanged(layer);
            
            _it_5797=Tonyu.iterator(ts,1);
            while(_it_5797.next()) {
              t=_it_5797[0];
              
              c = t.getTouchShape();
              
              if (c.intersects(localShape)) {
                ch = c.layerChanged(shape.layer);
                
                cands.push({actor: t,shape: ch,zOrder: t.zOrder,zOrderLayer: i,dist: _this.dist(shape.x-ch.x,shape.y-ch.y)});
                
              }
              
            }
          }
        }
        i = 0;
        for (; i<cands.length ; i++) {
          {
            shape = cands[i].shape;
            
            j = i+1;
            for (; j<cands.length ; j++) {
              {
                if (shape.intersects(cands[j].shape)) {
                  cmp = compZ(cands[j],cands[i]);
                  
                  if (cmp>0) {
                    cands[j].dead=true;
                    
                  }
                  if (cmp<0) {
                    cands[i].dead=true;
                    
                  }
                  
                }
              }
            }
          }
        }
        
        cands=cands.filter((function anonymous_2189(e) {
          
          return ! e.dead;
        }));
        cands.sort((function anonymous_2227(a,b) {
          
          return a.dist-b.dist;
        }));
        return cands[0]&&cands[0].actor;
      },
      fiber$findActor :function _trc_MultiLayerTouches_f_findActor(_thread,shape) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cands;
        var i;
        var layer;
        var ts;
        var localShape;
        var t;
        var _it_5797;
        var c;
        var ch;
        var shape;
        var j;
        var cmp;
        function compZ(a,b) {
          var c;
          
          c = a.zOrderLayer-b.zOrderLayer;
          
          if (c) {
            return c;
          }
          return a.zOrder-b.zOrder;
        }
        cands = [];
        i = 0;
        
        
        _thread.enter(function _trc_MultiLayerTouches_ent_findActor(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              i = 0;
              
            case 1:
              if (!(i<_this.screen.layers.length)) { __pc=5     ; break; }
              layer = _this.screen.layers[i];
              
              _this.fiber$getTouchables(_thread, layer);
              __pc=2;return;
            case 2:
              ts=_thread.retVal;
              
              if (!(! ts)) { __pc=3     ; break; }
              __pc=4     ; break;
              
            case 3     :
              
              localShape = shape.layerChanged(layer);
              
              _it_5797=Tonyu.iterator(ts,1);
              while(_it_5797.next()) {
                t=_it_5797[0];
                
                c = t.getTouchShape();
                
                if (c.intersects(localShape)) {
                  ch = c.layerChanged(shape.layer);
                  
                  cands.push({actor: t,shape: ch,zOrder: t.zOrder,zOrderLayer: i,dist: _this.dist(shape.x-ch.x,shape.y-ch.y)});
                  
                }
                
              }
            case 4     :
              i++;
              __pc=1;break;
            case 5     :
              
              i = 0;
              for (; i<cands.length ; i++) {
                {
                  shape = cands[i].shape;
                  
                  j = i+1;
                  for (; j<cands.length ; j++) {
                    {
                      if (shape.intersects(cands[j].shape)) {
                        cmp = compZ(cands[j],cands[i]);
                        
                        if (cmp>0) {
                          cands[j].dead=true;
                          
                        }
                        if (cmp<0) {
                          cands[i].dead=true;
                          
                        }
                        
                      }
                    }
                  }
                }
              }
              
              cands=cands.filter((function anonymous_2189(e) {
                
                return ! e.dead;
              }));
              cands.sort((function anonymous_2227(a,b) {
                
                return a.dist-b.dist;
              }));
              _thread.exit(cands[0]&&cands[0].actor);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      saveAndClear :function _trc_MultiLayerTouches_saveAndClear() {
        "use strict";
        var _this=this;
        var saved;
        
        saved = _this.layers;
        
        _this.layers=new WeakMap;
        return saved;
      },
      fiber$saveAndClear :function _trc_MultiLayerTouches_f_saveAndClear(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var saved;
        
        saved = _this.layers;
        
        _this.layers=new WeakMap;
        _thread.retVal=saved;return;
        
        
        _thread.retVal=_this;return;
      },
      restore :function _trc_MultiLayerTouches_restore(saved) {
        "use strict";
        var _this=this;
        
        _this.layers=saved;
      },
      fiber$restore :function _trc_MultiLayerTouches_f_restore(_thread,saved) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.layers=saved;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"add":{"nowait":false},"remove":{"nowait":false},"getOrNewTouchables":{"nowait":false},"getTouchables":{"nowait":false},"findActor":{"nowait":false},"saveAndClear":{"nowait":false},"restore":{"nowait":false}},"fields":{"screen":{},"layers":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.OneframeSprite',
  shortName: 'OneframeSprite',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_OneframeSprite_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_OneframeSprite_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_OneframeSprite_initialize(params) {
        "use strict";
        var _this=this;
        
        _this.extend(params);
        if (_this.layer&&typeof  _this.layer.add=="function") {
          _this.layer.add(_this);
          
        } else {
          Tonyu.globals.$Sprites.add(_this);
          
        }
      },
      die :function _trc_OneframeSprite_die() {
        "use strict";
        var _this=this;
        
      },
      fiber$die :function _trc_OneframeSprite_f_die(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      isDead :function _trc_OneframeSprite_isDead() {
        "use strict";
        var _this=this;
        
      },
      fiber$isDead :function _trc_OneframeSprite_f_isDead(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"die":{"nowait":false},"isDead":{"nowait":false}},"fields":{"layer":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PanelTouchStart',
  shortName: 'PanelTouchStart',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.EventHandler,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_PanelTouchStart_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_PanelTouchStart_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      newListener :function _trc_PanelTouchStart_newListener(f) {
        "use strict";
        var _this=this;
        var h;
        
        h = Tonyu.globals.$InputDevice.on("touchstart",(function anonymous_118(e) {
          
          e.finger.layer=_this.target;
          return f(e);
        }));
        
        return {dispose: (function anonymous_382(e) {
          
          h.remove();
        }),action: (function anonymous_442() {
          
        })};
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"newListener":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.ScreenLayer',
  shortName: 'ScreenLayer',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_ScreenLayer_main() {
        "use strict";
        var _this=this;
        
        
      },
      fiber$main :function _trc_ScreenLayer_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ScreenLayer_initialize(p) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [p]);
      },
      addSubsprite :function _trc_ScreenLayer_addSubsprite() {
        "use strict";
        var _this=this;
        
        return _this.group.addSubsprite.apply(_this.group,arguments);
      },
      fiber$addSubsprite :function _trc_ScreenLayer_f_addSubsprite(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.group.addSubsprite.apply(_this.group,_arguments);return;
        
        
        _thread.retVal=_this;return;
      },
      all :function _trc_ScreenLayer_all() {
        "use strict";
        var _this=this;
        
        return _this.group.all.apply(_this.group,arguments);
      },
      fiber$all :function _trc_ScreenLayer_f_all(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.group.all.apply(_this.group,_arguments);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"addSubsprite":{"nowait":false},"all":{"nowait":false}},"fields":{"group":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.SpriteGroup',
  shortName: 'SpriteGroup',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_SpriteGroup_main() {
        "use strict";
        var _this=this;
        
        
        
      },
      fiber$main :function _trc_SpriteGroup_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        
        
        _thread.retVal=_this;return;
      },
      get :function _trc_SpriteGroup_get(i) {
        "use strict";
        var _this=this;
        
        return _this.sprites[i];
      },
      fiber$get :function _trc_SpriteGroup_f_get(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.sprites[i];return;
        
        
        _thread.retVal=_this;return;
      },
      addSubsprite :function _trc_SpriteGroup_addSubsprite() {
        "use strict";
        var _this=this;
        
        return Tonyu.bindFunc(_this,_this.add).apply(_this,arguments);
      },
      fiber$addSubsprite :function _trc_SpriteGroup_f_addSubsprite(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.bindFunc(_this,_this.add).apply(_this,_arguments);return;
        
        
        _thread.retVal=_this;return;
      },
      add :function _trc_SpriteGroup_add() {
        "use strict";
        var _this=this;
        
        throw new Error("SpriteGroup::add abstract");
        
      },
      fiber$add :function _trc_SpriteGroup_f_add(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("SpriteGroup::add abstract");
        
        
        _thread.retVal=_this;return;
      },
      saveAndClear :function _trc_SpriteGroup_saveAndClear(excludes) {
        "use strict";
        var _this=this;
        var saved;
        
        saved = _this.sprites;
        
        _this.sprites=_this.sprites.filter((function anonymous_375(s) {
          
          return excludes.indexOf(s)>=0;
        }));
        if (! saved) {
          throw new Error("Invalid saved data "+saved);
          
        }
        return saved;
      },
      fiber$saveAndClear :function _trc_SpriteGroup_f_saveAndClear(_thread,excludes) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var saved;
        
        saved = _this.sprites;
        
        _this.sprites=_this.sprites.filter((function anonymous_375(s) {
          
          return excludes.indexOf(s)>=0;
        }));
        if (! saved) {
          throw new Error("Invalid saved data "+saved);
          
        }
        _thread.retVal=saved;return;
        
        
        _thread.retVal=_this;return;
      },
      restore :function _trc_SpriteGroup_restore(saved) {
        "use strict";
        var _this=this;
        
        if (! saved) {
          throw new Error("Invalid data "+saved);
          
        }
        _this.sprites=saved;
      },
      fiber$restore :function _trc_SpriteGroup_f_restore(_thread,saved) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! saved) {
          throw new Error("Invalid data "+saved);
          
        }
        _this.sprites=saved;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"get":{"nowait":false},"addSubsprite":{"nowait":false},"add":{"nowait":false},"saveAndClear":{"nowait":false},"restore":{"nowait":false}},"fields":{"sprites":{},"transform":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.SpriteMod2D',
  shortName: 'SpriteMod2D',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.SpriteMod,Tonyu.classes.kernel.TextRectMod],
  methods: function (__superClass) {
    return {
      main :function _trc_SpriteMod2D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_SpriteMod2D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initSpriteMod :function _trc_SpriteMod2D_initSpriteMod() {
        "use strict";
        var _this=this;
        
        __superClass.prototype.initSpriteMod.apply( _this, []);
        _this._align=_this._align||new Tonyu.classes.kernel.Align2D();
      },
      fiber$initSpriteMod :function _trc_SpriteMod2D_f_initSpriteMod(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_SpriteMod2D_ent_initSpriteMod(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              __superClass.prototype.fiber$initSpriteMod.apply( _this, [_thread]);
              __pc=1;return;
            case 1:
              
              _this._align=_this._align||new Tonyu.classes.kernel.Align2D();
              _thread.exit(_this);return;
            }
          }
        });
      },
      __setter__align :function _trc_SpriteMod2D___setter__align(v) {
        "use strict";
        var _this=this;
        
        _this._alignVal=v;
        _this._align=new Tonyu.classes.kernel.Align2D(v);
      },
      initTransform :function _trc_SpriteMod2D_initTransform() {
        "use strict";
        var _this=this;
        
        _this.transform=new Tonyu.classes.kernel.Transform2D(_this);
      },
      fiber$initTransform :function _trc_SpriteMod2D_f_initTransform(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.transform=new Tonyu.classes.kernel.Transform2D(_this);
        
        _thread.retVal=_this;return;
      },
      performTransform :function _trc_SpriteMod2D_performTransform(ctx) {
        "use strict";
        var _this=this;
        
        if (_this.x!==_this.x||_this.y!==_this.y||_this.x==null||_this.y==null) {
          
          
        }
        ctx.translate(_this.x,_this.y);
        if (_this.rotation!=0) {
          ctx.rotate(_this.rotation/180*Math.PI);
          
        } else {
          ctx.rotate(_this.rotate/180*Math.PI);
          
        }
        if (typeof  _this.scaleY==="undefined") {
          ctx.scale(_this.scaleX,_this.scaleX);
          
        } else {
          ctx.scale(_this.scaleX,_this.scaleY);
          
        }
        ctx.globalAlpha=(_this.alpha<0?0:_this.alpha>255?255:_this.alpha)/255;
      },
      draw :function _trc_SpriteMod2D_draw(ctx) {
        "use strict";
        var _this=this;
        var t;
        
        if (_this.x==null||_this.y==null||_this._isInvisible) {
          return _this;
        }
        t = _this.detectSpriteType();
        
        _this["drawAs"+t](ctx);
        if (_this.subsprites&&_this.subsprites.draw) {
          ctx.save();
          _this.performTransform(ctx);
          _this.subsprites.draw(ctx);
          ctx.restore();
          
        }
      },
      drawAsText :function _trc_SpriteMod2D_drawAsText(ctx) {
        "use strict";
        var _this=this;
        var splitsText;
        var drawY;
        var textCount;
        var rect;
        
        ctx.save();
        splitsText = (_this.text+"").split("\n");
        
        drawY = _this.y;
        
        if (! _this.size) {
          _this.size=15;
        }
        if (! _this.fillStyle) {
          _this.fillStyle="white";
        }
        if (_this.font) {
          ctx.font=_this.size+"px "+_this.font;
        }
        ctx.fillStyle=_this.fillStyle+"";
        ctx.globalAlpha=_this.alpha/255;
        _this.height=0;
        _this.width=0;
        textCount = 0;
        for (; textCount<splitsText.length ; textCount++) {
          {
            rect = _this.drawTextRect(ctx,splitsText[textCount],_this.x,drawY,_this.size,_this._align,"fill");
            
            if (_this.width<rect.w) {
              _this.width=rect.w;
            }
            _this.height+=rect.h;
            drawY+=_this.size;
          }
        }
        ctx.restore();
      },
      drawAsShape :function _trc_SpriteMod2D_drawAsShape(ctx) {
        "use strict";
        var _this=this;
        var r;
        
        ctx.save();
        _this.performTransform(ctx);
        ctx.fillStyle=_this.fillStyle+"";
        if (_this._align.isOriginPivot) {
          if (_this.radius&&_this.radius>0) {
            ctx.beginPath();
            ctx.arc(0,0,_this.radius,0,2*Math.PI);
            ctx.fill();
            
          } else {
            ctx.fillRect(- _this.width/2,- _this.height/2,_this.width,_this.height);
            
          }
          
        } else {
          if (_this.radius&&_this.radius>0) {
            r = _this._align.getDrawRect({width: _this.radius*2,height: _this.radius*2});
            
            ctx.beginPath();
            ctx.arc(r.x,r.y,_this.radius,0,2*Math.PI);
            ctx.fill();
            
          } else {
            r = _this._align.getDrawRect(_this);
            
            ctx.fillRect(r.x-_this.width/2,r.y-_this.height/2,_this.width,_this.height);
            
          }
          
        }
        ctx.restore();
      },
      fiber$drawAsShape :function _trc_SpriteMod2D_f_drawAsShape(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        ctx.save();
        _this.performTransform(ctx);
        ctx.fillStyle=_this.fillStyle+"";
        if (_this._align.isOriginPivot) {
          if (_this.radius&&_this.radius>0) {
            ctx.beginPath();
            ctx.arc(0,0,_this.radius,0,2*Math.PI);
            ctx.fill();
            
          } else {
            ctx.fillRect(- _this.width/2,- _this.height/2,_this.width,_this.height);
            
          }
          
        } else {
          if (_this.radius&&_this.radius>0) {
            r = _this._align.getDrawRect({width: _this.radius*2,height: _this.radius*2});
            
            ctx.beginPath();
            ctx.arc(r.x,r.y,_this.radius,0,2*Math.PI);
            ctx.fill();
            
          } else {
            r = _this._align.getDrawRect(_this);
            
            ctx.fillRect(r.x-_this.width/2,r.y-_this.height/2,_this.width,_this.height);
            
          }
          
        }
        ctx.restore();
        
        _thread.retVal=_this;return;
      },
      drawAsCustom :function _trc_SpriteMod2D_drawAsCustom(ctx) {
        "use strict";
        var _this=this;
        
        ctx.save();
        _this.performTransform(ctx);
        _this.p.draw(ctx);
        ctx.restore();
        if (_this.p.width*_this.p.height>0) {
          _this.width=_this.p.width;
          _this.height=_this.p.height;
          
        }
      },
      fiber$drawAsCustom :function _trc_SpriteMod2D_f_drawAsCustom(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        ctx.save();
        _this.performTransform(ctx);
        _this.p.draw(ctx);
        ctx.restore();
        if (_this.p.width*_this.p.height>0) {
          _this.width=_this.p.width;
          _this.height=_this.p.height;
          
        }
        
        _thread.retVal=_this;return;
      },
      drawAsImage :function _trc_SpriteMod2D_drawAsImage(ctx) {
        "use strict";
        var _this=this;
        var r;
        
        _this.prepareImage();
        if (_this.pImg) {
          ctx.save();
          _this.performTransform(ctx);
          if (_this._align.isOriginPivot) {
            ctx.drawImage(_this.pImg.image,_this.pImg.x,_this.pImg.y,_this.pImg.width,_this.pImg.height,- _this.width/2,- _this.height/2,_this.width,_this.height);
            
          } else {
            r = _this._align.getDrawRect(_this);
            
            ctx.drawImage(_this.pImg.image,_this.pImg.x,_this.pImg.y,_this.pImg.width,_this.pImg.height,r.x-r.width/2,r.y-r.height/2,r.width,r.height);
            
          }
          ctx.restore();
          
        }
      },
      fiber$drawAsImage :function _trc_SpriteMod2D_f_drawAsImage(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        _this.prepareImage();
        if (_this.pImg) {
          ctx.save();
          _this.performTransform(ctx);
          if (_this._align.isOriginPivot) {
            ctx.drawImage(_this.pImg.image,_this.pImg.x,_this.pImg.y,_this.pImg.width,_this.pImg.height,- _this.width/2,- _this.height/2,_this.width,_this.height);
            
          } else {
            r = _this._align.getDrawRect(_this);
            
            ctx.drawImage(_this.pImg.image,_this.pImg.x,_this.pImg.y,_this.pImg.width,_this.pImg.height,r.x-r.width/2,r.y-r.height/2,r.width,r.height);
            
          }
          ctx.restore();
          
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initSpriteMod":{"nowait":false},"__setter__align":{"nowait":true},"initTransform":{"nowait":false},"performTransform":{"nowait":true},"draw":{"nowait":true},"drawAsText":{"nowait":true},"drawAsShape":{"nowait":false},"drawAsCustom":{"nowait":false},"drawAsImage":{"nowait":false}},"fields":{"x":{},"y":{},"transform":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Sprites',
  shortName: 'Sprites',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.SpriteGroup,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Sprites_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_Sprites_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Sprites_initialize() {
        "use strict";
        var _this=this;
        
        _this.sprites=[];
        _this.imageList=[];
        _this.hitWatchers=[];
        _this.sx=0;
        _this.sy=0;
        _this.objId=0;
      },
      add :function _trc_Sprites_add(s) {
        "use strict";
        var _this=this;
        
        if (Tonyu.globals.$Boot.newLimit) {
          Tonyu.globals.$Boot.newLimitCount--;
          if (Tonyu.globals.$Boot.newLimitCount<=0) {
            throw new Error("一度にたくさんのオブジェクトを作りすぎています\n"+"       $Boot.newLimitの値を変更すると、1フレーム間に生成できる オブジェクト+スレッドの合計数 を変更できます\n"+"       $Boot.newLimit="+Tonyu.globals.$Boot.newLimit+"; // 現在の オブジェクト数+スレッド数 の限度\n"+"       update(); // 次フレームから適用されます\n"+"       [参考] https://edit.tonyu.jp/doc/limitations.html\n");
            
          }
          
        }
        if (s.__addedToSprites) {
          return _this;
        }
        if (s instanceof Tonyu.classes.kernel.PlainChar) {
          _this.t1Sprites=_this.t1Sprites||[];
          
        }
        if (_this.drawing) {
          s.draw(_this.drawing);
          return _this;
          
        }
        _this.sprites.push(s);
        if (s.__genId==null) {
          s.__genId=_this.objId;
          _this.objId++;
          
        }
        s.__addedToSprites=_this;
        return s;
      },
      fiber$add :function _trc_Sprites_f_add(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (Tonyu.globals.$Boot.newLimit) {
          Tonyu.globals.$Boot.newLimitCount--;
          if (Tonyu.globals.$Boot.newLimitCount<=0) {
            throw new Error("一度にたくさんのオブジェクトを作りすぎています\n"+"       $Boot.newLimitの値を変更すると、1フレーム間に生成できる オブジェクト+スレッドの合計数 を変更できます\n"+"       $Boot.newLimit="+Tonyu.globals.$Boot.newLimit+"; // 現在の オブジェクト数+スレッド数 の限度\n"+"       update(); // 次フレームから適用されます\n"+"       [参考] https://edit.tonyu.jp/doc/limitations.html\n");
            
          }
          
        }
        if (s.__addedToSprites) {
          _thread.retVal=_this;return;
          
        }
        if (s instanceof Tonyu.classes.kernel.PlainChar) {
          _this.t1Sprites=_this.t1Sprites||[];
          
        }
        if (_this.drawing) {
          s.draw(_this.drawing);
          _thread.retVal=_this;return;
          
          
        }
        _this.sprites.push(s);
        if (s.__genId==null) {
          s.__genId=_this.objId;
          _this.objId++;
          
        }
        s.__addedToSprites=_this;
        _thread.retVal=s;return;
        
        
        _thread.retVal=_this;return;
      },
      remove :function _trc_Sprites_remove(s) {
        "use strict";
        var _this=this;
        var idx;
        
        idx = _this.sprites.indexOf(s);
        
        if (idx<0) {
          return _this;
        }
        _this.sprites.splice(idx,1);
        delete s.__addedToSprites;
      },
      fiber$remove :function _trc_Sprites_f_remove(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var idx;
        
        idx = _this.sprites.indexOf(s);
        
        if (idx<0) {
          _thread.retVal=_this;return;
          
        }
        _this.sprites.splice(idx,1);
        delete s.__addedToSprites;
        
        _thread.retVal=_this;return;
      },
      removeOneframes :function _trc_Sprites_removeOneframes(drawn) {
        "use strict";
        var _this=this;
        var s;
        var i;
        
        
        i = _this.sprites.length-1;
        for (; i>=0 ; i--) {
          {
            s=_this.sprites[i];
            if (Tonyu.is(s,Tonyu.classes.kernel.OneframeSprite)&&(! drawn||s.drawn)) {
              Tonyu.globals.$ObjectPool.poolList(s.getClassInfo().fullName).push(s);
              _this.sprites.splice(i,1);
              
            }
          }
        }
      },
      fiber$removeOneframes :function _trc_Sprites_f_removeOneframes(_thread,drawn) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var s;
        var i;
        
        
        i = _this.sprites.length-1;
        for (; i>=0 ; i--) {
          {
            s=_this.sprites[i];
            if (Tonyu.is(s,Tonyu.classes.kernel.OneframeSprite)&&(! drawn||s.drawn)) {
              Tonyu.globals.$ObjectPool.poolList(s.getClassInfo().fullName).push(s);
              _this.sprites.splice(i,1);
              
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      clear :function _trc_Sprites_clear() {
        "use strict";
        var _this=this;
        
        _this.sprites.splice(0,_this.sprites.length);
      },
      fiber$clear :function _trc_Sprites_f_clear(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.sprites.splice(0,_this.sprites.length);
        
        _thread.retVal=_this;return;
      },
      compOrder :function _trc_Sprites_compOrder(obj1,obj2) {
        "use strict";
        var _this=this;
        var val1;
        var val2;
        
        val1 = obj1.zOrder||0;
        
        val2 = obj2.zOrder||0;
        
        if (val1>val2) {
          return - 1;
          
        } else {
          if (val1<val2) {
            return 1;
            
          } else {
            if (val1==val2) {
              if (obj1.__genId>obj2.__genId) {
                return 1;
                
              } else {
                return - 1;
                
              }
              return 0;
              
            }
          }
        }
      },
      fiber$compOrder :function _trc_Sprites_f_compOrder(_thread,obj1,obj2) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var val1;
        var val2;
        
        val1 = obj1.zOrder||0;
        
        val2 = obj2.zOrder||0;
        
        if (val1>val2) {
          _thread.retVal=- 1;return;
          
          
        } else {
          if (val1<val2) {
            _thread.retVal=1;return;
            
            
          } else {
            if (val1==val2) {
              if (obj1.__genId>obj2.__genId) {
                _thread.retVal=1;return;
                
                
              } else {
                _thread.retVal=- 1;return;
                
                
              }
              _thread.retVal=0;return;
              
              
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_Sprites_draw(ctx,camera) {
        "use strict";
        var _this=this;
        var orderArray;
        
        ctx.save();
        orderArray = [];
        
        if (_this.t1Sprites) {
          _this.sprites.forEach((function anonymous_2257(s) {
            
            if (s instanceof Tonyu.classes.kernel.PlainChar) {
              s.draw();
              
            }
          }));
          _this.sprites.forEach((function anonymous_2386(s) {
            
            if (s instanceof Tonyu.classes.kernel.PlainChar) {
              
              
            } else {
              orderArray.push(s);
            }
          }));
          
        } else {
          orderArray=_this.sprites.slice();
          
        }
        orderArray.sort(Tonyu.bindFunc(_this,_this.compOrder));
        ctx.translate(- _this.sx,- _this.sy);
        _this.drawing=ctx;
        orderArray.forEach((function anonymous_2650(s) {
          
          s.draw(ctx,camera);
        }));
        _this.drawing=null;
        ctx.restore();
      },
      fiber$draw :function _trc_Sprites_f_draw(_thread,ctx,camera) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var orderArray;
        
        ctx.save();
        orderArray = [];
        
        if (_this.t1Sprites) {
          _this.sprites.forEach((function anonymous_2257(s) {
            
            if (s instanceof Tonyu.classes.kernel.PlainChar) {
              s.draw();
              
            }
          }));
          _this.sprites.forEach((function anonymous_2386(s) {
            
            if (s instanceof Tonyu.classes.kernel.PlainChar) {
              
              
            } else {
              orderArray.push(s);
            }
          }));
          
        } else {
          orderArray=_this.sprites.slice();
          
        }
        orderArray.sort(Tonyu.bindFunc(_this,_this.compOrder));
        ctx.translate(- _this.sx,- _this.sy);
        _this.drawing=ctx;
        orderArray.forEach((function anonymous_2650(s) {
          
          s.draw(ctx,camera);
        }));
        _this.drawing=null;
        ctx.restore();
        
        _thread.retVal=_this;return;
      },
      checkHit :function _trc_Sprites_checkHit() {
        "use strict";
        var _this=this;
        
        _this.hitWatchers.forEach((function anonymous_2785(w) {
          
          _this.sprites.forEach((function anonymous_2825(a) {
            var a_owner;
            
            a_owner = a;
            
            if (! (a_owner instanceof w.A)) {
              return _this;
            }
            _this.sprites.forEach((function anonymous_3008(b) {
              var b_owner;
              
              b_owner = b;
              
              if (a===b) {
                return _this;
              }
              if (! (b_owner instanceof w.B)) {
                return _this;
              }
              if (a.crashTo1(b)) {
                w.h(a_owner,b_owner);
                
              }
            }));
          }));
        }));
      },
      fiber$checkHit :function _trc_Sprites_f_checkHit(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.hitWatchers.forEach((function anonymous_2785(w) {
          
          _this.sprites.forEach((function anonymous_2825(a) {
            var a_owner;
            
            a_owner = a;
            
            if (! (a_owner instanceof w.A)) {
              return _this;
            }
            _this.sprites.forEach((function anonymous_3008(b) {
              var b_owner;
              
              b_owner = b;
              
              if (a===b) {
                return _this;
              }
              if (! (b_owner instanceof w.B)) {
                return _this;
              }
              if (a.crashTo1(b)) {
                w.h(a_owner,b_owner);
                
              }
            }));
          }));
        }));
        
        _thread.retVal=_this;return;
      },
      watchHit :function _trc_Sprites_watchHit(typeA,typeB,onHit) {
        "use strict";
        var _this=this;
        var p;
        
        p = {A: typeA,B: typeB,h: onHit};
        
        _this.hitWatchers.push(p);
      },
      fiber$watchHit :function _trc_Sprites_f_watchHit(_thread,typeA,typeB,onHit) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        
        p = {A: typeA,B: typeB,h: onHit};
        
        _this.hitWatchers.push(p);
        
        _thread.retVal=_this;return;
      },
      drawGrid :function _trc_Sprites_drawGrid(c) {
        "use strict";
        var _this=this;
        var ctx;
        var i;
        
        ctx = c.getContext("2d");
        
        ctx.textBaseline="top";
        ctx.save();
        ctx.strokeStyle="rgb(40,100,200)";
        i = 0;
        for (; i<c.width ; i+=10) {
          {
            ctx.beginPath();
            ctx.lineWidth=(i%100==0?4:1);
            ctx.moveTo(i,0);
            ctx.lineTo(i,c.height);
            ctx.closePath();
            ctx.stroke();
          }
        }
        i = 0;
        for (; i<c.height ; i+=10) {
          {
            ctx.beginPath();
            ctx.lineWidth=(i%100==0?4:1);
            ctx.moveTo(0,i);
            ctx.lineTo(c.width,i);
            ctx.closePath();
            ctx.stroke();
          }
        }
        ctx.fillStyle="white";
        ctx.font="15px monospaced";
        i = 100;
        for (; i<c.width ; i+=100) {
          {
            ctx.fillText(i,i,0);
          }
        }
        i = 100;
        for (; i<c.height ; i+=100) {
          {
            ctx.fillText(i,0,i);
          }
        }
        ctx.restore();
      },
      fiber$drawGrid :function _trc_Sprites_f_drawGrid(_thread,c) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        var i;
        
        ctx = c.getContext("2d");
        
        ctx.textBaseline="top";
        ctx.save();
        ctx.strokeStyle="rgb(40,100,200)";
        i = 0;
        for (; i<c.width ; i+=10) {
          {
            ctx.beginPath();
            ctx.lineWidth=(i%100==0?4:1);
            ctx.moveTo(i,0);
            ctx.lineTo(i,c.height);
            ctx.closePath();
            ctx.stroke();
          }
        }
        i = 0;
        for (; i<c.height ; i+=10) {
          {
            ctx.beginPath();
            ctx.lineWidth=(i%100==0?4:1);
            ctx.moveTo(0,i);
            ctx.lineTo(c.width,i);
            ctx.closePath();
            ctx.stroke();
          }
        }
        ctx.fillStyle="white";
        ctx.font="15px monospaced";
        i = 100;
        for (; i<c.width ; i+=100) {
          {
            ctx.fillText(i,i,0);
          }
        }
        i = 100;
        for (; i<c.height ; i+=100) {
          {
            ctx.fillText(i,0,i);
          }
        }
        ctx.restore();
        
        _thread.retVal=_this;return;
      },
      scrollTo :function _trc_Sprites_scrollTo(scrollX,scrollY) {
        "use strict";
        var _this=this;
        
        _this.sx=scrollX;
        _this.sy=scrollY;
      },
      fiber$scrollTo :function _trc_Sprites_f_scrollTo(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.sx=scrollX;
        _this.sy=scrollY;
        
        _thread.retVal=_this;return;
      },
      all :function _trc_Sprites_all(c) {
        "use strict";
        var _this=this;
        var res;
        
        res = new Tonyu.classes.kernel.TQuery;
        
        if (arguments.length>0&&typeof  c!="function") {
          return res;
          
        }
        _this.sprites.forEach((function anonymous_4621(s) {
          
          if (s===_this) {
            return _this;
          }
          if (! c||s instanceof c) {
            res.push(s);
            
          }
        }));
        return res;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"add":{"nowait":false},"remove":{"nowait":false},"removeOneframes":{"nowait":false},"clear":{"nowait":false},"compOrder":{"nowait":false},"draw":{"nowait":false},"checkHit":{"nowait":false},"watchHit":{"nowait":false},"drawGrid":{"nowait":false},"scrollTo":{"nowait":false},"all":{"nowait":true}},"fields":{"imageList":{},"hitWatchers":{},"objId":{},"t1Sprites":{},"drawing":{},"sx":{},"sy":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Sprites3D',
  shortName: 'Sprites3D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.SpriteGroup,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Sprites3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_Sprites3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Sprites3D_initialize(p) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [p]);
        _this.sprites=[];
        _this.transform=_this.transform||new Tonyu.classes.kernel.Transform;
      },
      add :function _trc_Sprites3D_add(a) {
        "use strict";
        var _this=this;
        var curLayer;
        
        curLayer = a.getSpriteGroup();
        
        if (curLayer) {
          curLayer.remove(a);
          
        }
        if (! a.transform.parent) {
          a.transform.parent=_this.transform;
          
        } else {
          a.transform.changeParent(_this.transform);
          
        }
        _this.sprites.push(a);
        a.__addedToSprites=_this;
      },
      fiber$add :function _trc_Sprites3D_f_add(_thread,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var curLayer;
        
        curLayer = a.getSpriteGroup();
        
        if (curLayer) {
          curLayer.remove(a);
          
        }
        if (! a.transform.parent) {
          a.transform.parent=_this.transform;
          
        } else {
          a.transform.changeParent(_this.transform);
          
        }
        _this.sprites.push(a);
        a.__addedToSprites=_this;
        
        _thread.retVal=_this;return;
      },
      draw3D :function _trc_Sprites3D_draw3D(ctx) {
        "use strict";
        var _this=this;
        var s;
        var _it_5850;
        
        _it_5850=Tonyu.iterator(_this.sprites,1);
        while(_it_5850.next()) {
          s=_it_5850[0];
          
          s.draw3D(ctx);
          
        }
      },
      fiber$draw3D :function _trc_Sprites3D_f_draw3D(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var s;
        var _it_5850;
        
        _it_5850=Tonyu.iterator(_this.sprites,1);
        while(_it_5850.next()) {
          s=_it_5850[0];
          
          s.draw3D(ctx);
          
        }
        
        _thread.retVal=_this;return;
      },
      remove :function _trc_Sprites3D_remove(s) {
        "use strict";
        var _this=this;
        var idx;
        
        idx = _this.sprites.indexOf(s);
        
        if (idx<0) {
          return _this;
        }
        _this.sprites.splice(idx,1);
        delete s.__addedToSprites;
      },
      all :function _trc_Sprites3D_all(c) {
        "use strict";
        var _this=this;
        var res;
        
        res = new Tonyu.classes.kernel.TQuery;
        
        if (arguments.length>0&&typeof  c!="function") {
          return res;
          
        }
        _this.sprites.forEach((function anonymous_1131(s) {
          
          if (s===_this) {
            return _this;
          }
          if (! c||s instanceof c) {
            res.push(s);
            
          }
        }));
        return res;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"add":{"nowait":false},"draw3D":{"nowait":false},"remove":{"nowait":true},"all":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.M_T2Room',
  shortName: 'M_T2Room',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_M_T2Room_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_M_T2Room_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      enter :function _trc_M_T2Room_enter() {
        "use strict";
        var _this=this;
        
        return new Promise((function anonymous_182(s,e) {
          
          _this.m=new Tonyu.classes.kernel.T2WebSocket();
          _this.m.on("open",(function anonymous_243() {
            
          }));
          _this.m.on("error",e);
          _this.m.on("message",(function anonymous_306(me) {
            var data;
            var i;
            var newMember;
            var leftMember;
            
            data = me.data;
            
            if (data) {
              switch (data.mes) {
              case "_start":
                _this.myId=data.playerNo;
                _this.members=[];
                i = 0;
                for (; i<data.playerCnt ; i++) {
                  {
                    _this.members.push({id: i});
                  }
                }
                _this.keepAlive();
                s(_this);
                break;
                
              case "_connection":
                newMember = {id: data.playerNo};
                
                if (! _this.members.some((function anonymous_857(m) {
                  
                  return m.id===newMember.id;
                }))) {
                  _this.members.push(newMember);
                  _this.fireEvent("member_join",newMember);
                  
                }
                break;
                
              case "_close":
                i = _this.members.length-1;
                for (; i>=0 ; i--) {
                  {
                    if (_this.members[i].id===data.playerNo) {
                      leftMember = _this.members.splice(i,1);
                      
                      _this.fireEvent("member_leave",leftMember[0]);
                      
                    }
                  }
                }
                break;
                
              default:
                if (data[_this.SYM_CLIENTID]!=null) {
                  me=_this.cloneEvent(me);
                  me.clientId=data[_this.SYM_CLIENTID];
                  delete data[_this.SYM_CLIENTID];
                  
                }
                _this.fireEvent("message",me);
              }
              
            }
          }));
          _this.m.connect(_this.url);
        }));
      },
      fiber$enter :function _trc_M_T2Room_f_enter(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_M_T2Room_ent_enter(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _thread.exit(new Promise((function anonymous_182(s,e) {
                
                _this.m=new Tonyu.classes.kernel.T2WebSocket();
                _this.m.on("open",(function anonymous_243() {
                  
                }));
                _this.m.on("error",e);
                _this.m.on("message",(function anonymous_306(me) {
                  var data;
                  var i;
                  var newMember;
                  var leftMember;
                  
                  data = me.data;
                  
                  if (data) {
                    switch (data.mes) {
                    case "_start":
                      _this.myId=data.playerNo;
                      _this.members=[];
                      i = 0;
                      for (; i<data.playerCnt ; i++) {
                        {
                          _this.members.push({id: i});
                        }
                      }
                      _this.keepAlive();
                      s(_this);
                      break;
                      
                    case "_connection":
                      newMember = {id: data.playerNo};
                      
                      if (! _this.members.some((function anonymous_857(m) {
                        
                        return m.id===newMember.id;
                      }))) {
                        _this.members.push(newMember);
                        _this.fireEvent("member_join",newMember);
                        
                      }
                      break;
                      
                    case "_close":
                      i = _this.members.length-1;
                      for (; i>=0 ; i--) {
                        {
                          if (_this.members[i].id===data.playerNo) {
                            leftMember = _this.members.splice(i,1);
                            
                            _this.fireEvent("member_leave",leftMember[0]);
                            
                          }
                        }
                      }
                      break;
                      
                    default:
                      if (data[_this.SYM_CLIENTID]!=null) {
                        me=_this.cloneEvent(me);
                        me.clientId=data[_this.SYM_CLIENTID];
                        delete data[_this.SYM_CLIENTID];
                        
                      }
                      _this.fireEvent("message",me);
                    }
                    
                  }
                }));
                _this.m.connect(_this.url);
              })));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      close :function _trc_M_T2Room_close() {
        "use strict";
        var _this=this;
        
        _this.m.close();
      },
      fiber$close :function _trc_M_T2Room_f_close(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.m.close();
        
        _thread.retVal=_this;return;
      },
      getMembers :function _trc_M_T2Room_getMembers() {
        "use strict";
        var _this=this;
        
        return Promise.resolve(_this.members);
      },
      fiber$getMembers :function _trc_M_T2Room_f_getMembers(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Promise.resolve(_this.members);return;
        
        
        _thread.retVal=_this;return;
      },
      cloneEvent :function _trc_M_T2Room_cloneEvent(ev) {
        "use strict";
        var _this=this;
        
        return Object.assign({},ev);
      },
      fiber$cloneEvent :function _trc_M_T2Room_f_cloneEvent(_thread,ev) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Object.assign({},ev);return;
        
        
        _thread.retVal=_this;return;
      },
      send :function _trc_M_T2Room_send(mesg) {
        "use strict";
        var _this=this;
        
        mesg=_this.cloneEvent(mesg);
        mesg[_this.SYM_CLIENTID]=_this.myId;
        _this.m.send(mesg);
        _this.keepAlive();
      },
      fiber$send :function _trc_M_T2Room_f_send(_thread,mesg) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_M_T2Room_ent_send(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$cloneEvent(_thread, mesg);
              __pc=1;return;
            case 1:
              mesg=_thread.retVal;
              
              mesg[_this.SYM_CLIENTID]=_this.myId;
              _this.m.send(mesg);
              _this.fiber$keepAlive(_thread);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      keepAlive :function _trc_M_T2Room_keepAlive() {
        "use strict";
        var _this=this;
        
        if (_this.timer) {
          clearTimeout(_this.timer);
        }
        _this.timer=setTimeout((function anonymous_2105() {
          
          _this.send({type: "keepalive"});
        }),25*1000);
      },
      fiber$keepAlive :function _trc_M_T2Room_f_keepAlive(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.timer) {
          clearTimeout(_this.timer);
        }
        
        _thread.enter(function _trc_M_T2Room_ent_keepAlive(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.timer=setTimeout((function anonymous_2105() {
                
                _this.send({type: "keepalive"});
              }),25*1000);
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__SYM_CLIENTID :function _trc_M_T2Room___getter__SYM_CLIENTID() {
        "use strict";
        var _this=this;
        
        return "SYM_CLIENTID";
      },
      __getter__url :function _trc_M_T2Room___getter__url() {
        "use strict";
        var _this=this;
        var wsProtocol;
        var wsHost;
        var wsPathName;
        var wsPort;
        var wsURL;
        
        wsProtocol = "wss";
        
        wsHost = "t2ws.mkbcr.net";
        
        wsPathName = _this.info.key;
        
        wsPort = 443;
        
        wsURL = wsProtocol+"://"+wsHost+":"+wsPort+"/"+wsPathName+"__"+_this.name;
        
        return wsURL;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"enter":{"nowait":false},"close":{"nowait":false},"getMembers":{"nowait":false},"cloneEvent":{"nowait":false},"send":{"nowait":false},"keepAlive":{"nowait":false},"__getter__SYM_CLIENTID":{"nowait":true},"__getter__url":{"nowait":true}},"fields":{"m":{},"name":{},"info":{},"myId":{},"members":{},"timer":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.M_T2Web',
  shortName: 'M_T2Web',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_M_T2Web_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
      },
      fiber$main :function _trc_M_T2Web_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        _thread.retVal=_this;return;
      },
      connect :function _trc_M_T2Web_connect() {
        "use strict";
        var _this=this;
        
        return Promise.resolve(_this);
      },
      fiber$connect :function _trc_M_T2Web_f_connect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Promise.resolve(_this);return;
        
        
        _thread.retVal=_this;return;
      },
      enterRoom :function _trc_M_T2Web_enterRoom(name) {
        "use strict";
        var _this=this;
        var room;
        
        room = new Tonyu.classes.kernel.M_T2Room({info: _this.info,name: name});
        
        return room.enter();
      },
      fiber$enterRoom :function _trc_M_T2Web_f_enterRoom(_thread,name) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var room;
        
        room = new Tonyu.classes.kernel.M_T2Room({info: _this.info,name: name});
        
        _thread.retVal=room.enter();return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"connect":{"nowait":false},"enterRoom":{"nowait":false}},"fields":{"m":{},"info":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ScaledroneImpl',
  shortName: 'ScaledroneImpl',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ScaledroneImpl_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_ScaledroneImpl_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      loadScript :function _trc_ScaledroneImpl_loadScript() {
        "use strict";
        var _this=this;
        
        if (typeof  Scaledrone==="undefined") {
          return $.getScript("https://cdn.scaledrone.com/scaledrone.min.js");
          
        } else {
          return Promise.resolve();
          
        }
      },
      fiber$loadScript :function _trc_ScaledroneImpl_f_loadScript(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  Scaledrone==="undefined") {
          _thread.retVal=$.getScript("https://cdn.scaledrone.com/scaledrone.min.js");return;
          
          
        } else {
          _thread.retVal=Promise.resolve();return;
          
          
        }
        
        _thread.retVal=_this;return;
      },
      connect :function _trc_ScaledroneImpl_connect() {
        "use strict";
        var _this=this;
        
        return _this.loadScript().then((function anonymous_344() {
          
          console.log("KEY",_this.info.key);
          _this.drone=new Scaledrone(_this.info.key);
          return _this;
        }));
      },
      fiber$connect :function _trc_ScaledroneImpl_f_connect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.loadScript().then((function anonymous_344() {
          
          console.log("KEY",_this.info.key);
          _this.drone=new Scaledrone(_this.info.key);
          return _this;
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      newRoom :function _trc_ScaledroneImpl_newRoom(name) {
        "use strict";
        var _this=this;
        
        return _this.enterRoom(name);
      },
      fiber$newRoom :function _trc_ScaledroneImpl_f_newRoom(_thread,name) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_ScaledroneImpl_ent_newRoom(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enterRoom(_thread, name);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      enterRoom :function _trc_ScaledroneImpl_enterRoom(name) {
        "use strict";
        var _this=this;
        
        return new Promise((function anonymous_553(s,e) {
          var observable;
          var res;
          
          observable = true;
          
          console.log("clientId",_this.drone.clientId);
          res = new Tonyu.classes.kernel.ScaledroneRoom({drone: _this.drone,observable: observable,name: name,myId: _this.drone.clientId});
          
          res.on('open',(function anonymous_743(error) {
            
            console.log("coned",error);
            if (error) {
              return e(error);
              
            }
            s(res);
          }));
        }));
      },
      fiber$enterRoom :function _trc_ScaledroneImpl_f_enterRoom(_thread,name) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Promise((function anonymous_553(s,e) {
          var observable;
          var res;
          
          observable = true;
          
          console.log("clientId",_this.drone.clientId);
          res = new Tonyu.classes.kernel.ScaledroneRoom({drone: _this.drone,observable: observable,name: name,myId: _this.drone.clientId});
          
          res.on('open',(function anonymous_743(error) {
            
            console.log("coned",error);
            if (error) {
              return e(error);
              
            }
            s(res);
          }));
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ScaledroneImpl_initialize(params) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [params]);
        if (! _this.info) {
          throw new Error("Info is not set");
          
        }
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"loadScript":{"nowait":false},"connect":{"nowait":false},"newRoom":{"nowait":false},"enterRoom":{"nowait":false},"new":{"nowait":false}},"fields":{"info":{},"drone":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ScaledroneRoom',
  shortName: 'ScaledroneRoom',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_ScaledroneRoom_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_ScaledroneRoom_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      __getter__rawName :function _trc_ScaledroneRoom___getter__rawName() {
        "use strict";
        var _this=this;
        
        return (_this.observable?"observable-":"")+_this.name;
      },
      initialize :function _trc_ScaledroneRoom_initialize(params) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [params]);
        _this.room=_this.drone.subscribe(_this.rawName);
        _this.room.on("open",(function anonymous_267(error) {
          
          _this.fireEvent("open",error);
        }));
        _this.room.on("message",(function anonymous_341(mesg) {
          
          _this.fireEvent("message",mesg);
        }));
        _this.room.on("members",(function anonymous_417(members) {
          
          _this.members=members;
          _this.fireEvent("members_list",members);
        }));
        _this.room.on('member_join',(function anonymous_537(member) {
          
          _this.members.push(member);
          _this.fireEvent("member_join",member);
        }));
        _this.room.on('member_leave',(function anonymous_668(member) {
          var i;
          
          i = _this.members.length-1;
          for (; i>=0 ; i--) {
            {
              if (member.id===_this.members[i].id) {
                _this.members.splice(i,1);
                
              }
            }
          }
          _this.fireEvent("member_leave",member);
        }));
      },
      close :function _trc_ScaledroneRoom_close() {
        "use strict";
        var _this=this;
        
        _this.drone.close();
      },
      fiber$close :function _trc_ScaledroneRoom_f_close(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.drone.close();
        
        _thread.retVal=_this;return;
      },
      send :function _trc_ScaledroneRoom_send(message) {
        "use strict";
        var _this=this;
        
        return _this.drone.publish({room: _this.rawName,message: message});
      },
      fiber$send :function _trc_ScaledroneRoom_f_send(_thread,message) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.drone.publish({room: _this.rawName,message: message});return;
        
        
        _thread.retVal=_this;return;
      },
      getMembers :function _trc_ScaledroneRoom_getMembers() {
        "use strict";
        var _this=this;
        
        if (_this.members) {
          return Promise.resolve(_this.members);
          
        }
        return new Promise((function anonymous_1151(s) {
          
          _this.on("members_list",(function anonymous_1185(members) {
            
            s(members);
          }));
        }));
      },
      fiber$getMembers :function _trc_ScaledroneRoom_f_getMembers(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.members) {
          _thread.retVal=Promise.resolve(_this.members);return;
          
          
        }
        _thread.retVal=new Promise((function anonymous_1151(s) {
          
          _this.on("members_list",(function anonymous_1185(members) {
            
            s(members);
          }));
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"__getter__rawName":{"nowait":true},"new":{"nowait":false},"close":{"nowait":false},"send":{"nowait":false},"getMembers":{"nowait":false}},"fields":{"drone":{},"room":{},"name":{},"myId":{},"members":{},"observable":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T2WebSocket',
  shortName: 'T2WebSocket',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_T2WebSocket_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        _this.sock = null;
        
      },
      fiber$main :function _trc_T2WebSocket_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        _this.sock = null;
        
        
        _thread.retVal=_this;return;
      },
      connect :function _trc_T2WebSocket_connect(url) {
        "use strict";
        var _this=this;
        var e;
        
        if (_this.sock) {
          return _this;
        }
        try {
          _this.sock=new WebSocket(url);
          _this.sock.addEventListener("open",(function anonymous_501(e) {
            
            console.log("Connected to ",url);
            _this.fireEvent("open",e);
          }));
          _this.sock.addEventListener("message",(function anonymous_644(e) {
            
            _this.recv(e);
          }));
          _this.sock.addEventListener("close",(function anonymous_765(e) {
            
            _this.fireEvent("close",e);
            _this.sock=null;
          }));
          _this.sock.addEventListener("error",(function anonymous_886(e) {
            
            _this.fireEvent("error",e);
          }));
          
        } catch (e) {
          _this.fireEvent("error",e);
          console.log("websocket connect error",e);
          
        }
      },
      fiber$connect :function _trc_T2WebSocket_f_connect(_thread,url) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var e;
        
        if (_this.sock) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_T2WebSocket_ent_connect(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _thread.enterTry(1     );
              _this.sock=new WebSocket(url);
              _this.sock.addEventListener("open",(function anonymous_501(e) {
                
                console.log("Connected to ",url);
                _this.fireEvent("open",e);
              }));
              _this.sock.addEventListener("message",(function anonymous_644(e) {
                
                _this.recv(e);
              }));
              _this.sock.addEventListener("close",(function anonymous_765(e) {
                
                _this.fireEvent("close",e);
                _this.sock=null;
              }));
              _this.sock.addEventListener("error",(function anonymous_886(e) {
                
                _this.fireEvent("error",e);
              }));_thread.exitTry();
              __pc=2     ;break;
            case 1     :
              e=_thread.startCatch();
              {
                _this.fireEvent("error",e);
                console.log("websocket connect error",e);
              }
            case 2     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      close :function _trc_T2WebSocket_close() {
        "use strict";
        var _this=this;
        
        if (_this.sock) {
          _this.sock.close();
          _this.sock=null;
          
        }
      },
      fiber$close :function _trc_T2WebSocket_f_close(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.sock) {
          _this.sock.close();
          _this.sock=null;
          
        }
        
        _thread.retVal=_this;return;
      },
      send :function _trc_T2WebSocket_send(d) {
        "use strict";
        var _this=this;
        
        if (_this.sock&&_this.sock.readyState==1) {
          if (Tonyu.is(d,String)||Tonyu.is(d,ArrayBuffer)||Tonyu.is(d,Blob)||_this._isTypedArray(d)) {
            _this.sock.send(d);
            
          } else {
            if (Tonyu.is(d,Object)) {
              _this.sock.send(JSON.stringify(d));
              
            } else {
              _this.sock.send(d);
              
            }
          }
          
        } else {
          console.log("Websocket not ready",_this.sock);
          
        }
      },
      fiber$send :function _trc_T2WebSocket_f_send(_thread,d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.sock&&_this.sock.readyState==1) {
          if (Tonyu.is(d,String)||Tonyu.is(d,ArrayBuffer)||Tonyu.is(d,Blob)||_this._isTypedArray(d)) {
            _this.sock.send(d);
            
          } else {
            if (Tonyu.is(d,Object)) {
              _this.sock.send(JSON.stringify(d));
              
            } else {
              _this.sock.send(d);
              
            }
          }
          
        } else {
          console.log("Websocket not ready",_this.sock);
          
        }
        
        _thread.retVal=_this;return;
      },
      recv :function _trc_T2WebSocket_recv(e) {
        "use strict";
        var _this=this;
        var d;
        var obj;
        var ne;
        var e;
        
        try {
          d = e.data;
          
          obj = JSON.parse(d);
          
          ne = Object.assign({},e);
          
          ne.data=obj;
          _this.fireEvent("message",ne);
          
        } catch (e) {
          _this.fireEvent("message",e);
          
        }
      },
      fiber$recv :function _trc_T2WebSocket_f_recv(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var d;
        var obj;
        var ne;
        var e;
        
        try {
          d = e.data;
          
          obj = JSON.parse(d);
          
          ne = Object.assign({},e);
          
          ne.data=obj;
          _this.fireEvent("message",ne);
          
        } catch (e) {
          _this.fireEvent("message",e);
          
        }
        
        _thread.retVal=_this;return;
      },
      _isTypedArray :function _trc_T2WebSocket__isTypedArray(value) {
        "use strict";
        var _this=this;
        
        return ArrayBuffer.isView(value)&&! (value instanceof DataView);
      },
      fiber$_isTypedArray :function _trc_T2WebSocket_f__isTypedArray(_thread,value) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=ArrayBuffer.isView(value)&&! (value instanceof DataView);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"connect":{"nowait":false},"close":{"nowait":false},"send":{"nowait":false},"recv":{"nowait":false},"_isTypedArray":{"nowait":false}},"fields":{"sock":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.WebSocket',
  shortName: 'WebSocket',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_WebSocket_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_WebSocket_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      getConnectionInfo :function _trc_WebSocket_getConnectionInfo() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$API.info().then((function anonymous_110(r) {
          var re;
          
          re = r.webSocket;
          
          if (! re) {
            throw new Error("Websocket の設定をしてください．ウィンドウ→プロジェクトオプション→API");
            
            
          }
          return re;
        }));
      },
      fiber$getConnectionInfo :function _trc_WebSocket_f_getConnectionInfo(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$API.info().then((function anonymous_110(r) {
          var re;
          
          re = r.webSocket;
          
          if (! re) {
            throw new Error("Websocket の設定をしてください．ウィンドウ→プロジェクトオプション→API");
            
            
          }
          return re;
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      connect :function _trc_WebSocket_connect() {
        "use strict";
        var _this=this;
        var services;
        
        if (_this.impl) {
          return Promise.resolve(_this.impl);
        }
        services = {Scaledrone: Tonyu.classes.kernel.ScaledroneImpl,T2WebSocket: Tonyu.classes.kernel.M_T2Web};
        
        return _this.getConnectionInfo().then((function anonymous_438(info) {
          var S;
          
          S = services[info.service];
          
          if (! S) {
            throw new Error(info.service+"には対応していません");
            
          }
          _this.impl=new S({info: info});
          return _this.impl.connect();
        }));
      },
      fiber$connect :function _trc_WebSocket_f_connect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var services;
        
        if (_this.impl) {
          _thread.retVal=Promise.resolve(_this.impl);return;
          
        }
        services = {Scaledrone: Tonyu.classes.kernel.ScaledroneImpl,T2WebSocket: Tonyu.classes.kernel.M_T2Web};
        
        _thread.retVal=_this.getConnectionInfo().then((function anonymous_438(info) {
          var S;
          
          S = services[info.service];
          
          if (! S) {
            throw new Error(info.service+"には対応していません");
            
          }
          _this.impl=new S({info: info});
          return _this.impl.connect();
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      enterRoom :function _trc_WebSocket_enterRoom(name) {
        "use strict";
        var _this=this;
        
        return _this.connect().then((function anonymous_750() {
          
          return _this.impl.enterRoom(name);
        })).then((function anonymous_806(r) {
          
          r.webSocket=_this;
          return r;
        }));
      },
      fiber$enterRoom :function _trc_WebSocket_f_enterRoom(_thread,name) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.connect().then((function anonymous_750() {
          
          return _this.impl.enterRoom(name);
        })).then((function anonymous_806(r) {
          
          r.webSocket=_this;
          return r;
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getConnectionInfo":{"nowait":false},"connect":{"nowait":false},"enterRoom":{"nowait":false}},"fields":{"impl":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MML',
  shortName: 'MML',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_MML_main() {
        "use strict";
        var _this=this;
        
        _this.mmlBuf=[];
      },
      fiber$main :function _trc_MML_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.mmlBuf=[];
        
        _thread.retVal=_this;return;
      },
      play :function _trc_MML_play(mmls) {
        "use strict";
        var _this=this;
        
        _this.mmlBuf.push(mmls);
        if (! _this.isPlaying()) {
          _this.playNext();
          
        }
      },
      fiber$play :function _trc_MML_f_play(_thread,mmls) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.mmlBuf.push(mmls);
        
        _thread.enter(function _trc_MML_ent_play(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this.isPlaying())) { __pc=2     ; break; }
              _this.fiber$playNext(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      playNext :function _trc_MML_playNext() {
        "use strict";
        var _this=this;
        var mml;
        
        if (_this.cTimeBase==null) {
          _this.cTimeBase=0;
        }
        if (_this.m) {
          _this.cTimeBase+=_this.m.currentTime;
          
        }
        mml = _this.mmlBuf.shift();
        
        if (! mml) {
          _this.m=null;
          _this.cTimeBase=0;
          return _this;
          
        }
        _this.mwav=Tonyu.globals.$WaveTable.get(0,0).play();
        _this.m=T("mml",{mml: mml},_this.mwav);
        _this.m.on("ended",Tonyu.bindFunc(_this,_this.playNext));
        _this.m.start();
        Tonyu.globals.$MMLS[_this.id()]=_this;
      },
      fiber$playNext :function _trc_MML_f_playNext(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var mml;
        
        if (_this.cTimeBase==null) {
          _this.cTimeBase=0;
        }
        if (_this.m) {
          _this.cTimeBase+=_this.m.currentTime;
          
        }
        mml = _this.mmlBuf.shift();
        
        if (! mml) {
          _this.m=null;
          _this.cTimeBase=0;
          _thread.retVal=_this;return;
          
          
        }
        _this.mwav=Tonyu.globals.$WaveTable.get(0,0).play();
        _this.m=T("mml",{mml: mml},_this.mwav);
        _this.m.on("ended",Tonyu.bindFunc(_this,_this.playNext));
        _this.m.start();
        Tonyu.globals.$MMLS[_this.id()]=_this;
        
        _thread.retVal=_this;return;
      },
      id :function _trc_MML_id() {
        "use strict";
        var _this=this;
        
        if (! _this._id) {
          _this._id=_this.rnd()+"";
        }
        return _this._id;
      },
      fiber$id :function _trc_MML_f_id(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! _this._id) {
          _this._id=_this.rnd()+"";
        }
        _thread.retVal=_this._id;return;
        
        
        _thread.retVal=_this;return;
      },
      bufferCount :function _trc_MML_bufferCount() {
        "use strict";
        var _this=this;
        
        return _this.mmlBuf.length;
      },
      fiber$bufferCount :function _trc_MML_f_bufferCount(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.mmlBuf.length;return;
        
        
        _thread.retVal=_this;return;
      },
      isPlaying :function _trc_MML_isPlaying() {
        "use strict";
        var _this=this;
        
        return _this.m;
      },
      fiber$isPlaying :function _trc_MML_f_isPlaying(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.m;return;
        
        
        _thread.retVal=_this;return;
      },
      currentTime :function _trc_MML_currentTime() {
        "use strict";
        var _this=this;
        
        if (_this.m) {
          return _this.m.currentTime+_this.cTimeBase;
        }
        return - 1;
      },
      fiber$currentTime :function _trc_MML_f_currentTime(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.m) {
          _thread.retVal=_this.m.currentTime+_this.cTimeBase;return;
          
        }
        _thread.retVal=- 1;return;
        
        
        _thread.retVal=_this;return;
      },
      stop :function _trc_MML_stop() {
        "use strict";
        var _this=this;
        
        if (_this.m) {
          if (_this.mwav) {
            _this.mwav.pause();
            _this.mwav.stop();
            
          }
          _this.m.pause();
          _this.m.stop();
          _this.m=null;
          _this.mmlBuf=[];
          delete Tonyu.globals.$MMLS[_this.id()];
          
        }
      },
      fiber$stop :function _trc_MML_f_stop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.m) {
          if (_this.mwav) {
            _this.mwav.pause();
            _this.mwav.stop();
            
          }
          _this.m.pause();
          _this.m.stop();
          _this.m=null;
          _this.mmlBuf=[];
          delete Tonyu.globals.$MMLS[_this.id()];
          
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"play":{"nowait":false},"playNext":{"nowait":false},"id":{"nowait":false},"bufferCount":{"nowait":false},"isPlaying":{"nowait":false},"currentTime":{"nowait":false},"stop":{"nowait":false}},"fields":{"mmlBuf":{},"cTimeBase":{},"m":{},"mwav":{},"_id":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.WaveTable',
  shortName: 'WaveTable',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_WaveTable_main() {
        "use strict";
        var _this=this;
        
        _this.wav={};
        _this.env={};
        if (typeof  T!=="undefined") {
          _this.env=T("env",{table: [1,[0.6,50],[0,100]],releaseNode: 2});
          _this.setEnv(0,_this.env);
          _this.setWav(0,T("pulse"));
          
        }
      },
      fiber$main :function _trc_WaveTable_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.wav={};
        _this.env={};
        
        _thread.enter(function _trc_WaveTable_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  T!=="undefined")) { __pc=3     ; break; }
              _this.env=T("env",{table: [1,[0.6,50],[0,100]],releaseNode: 2});
              _this.fiber$setEnv(_thread, 0, _this.env);
              __pc=1;return;
            case 1:
              
              _this.fiber$setWav(_thread, 0, T("pulse"));
              __pc=2;return;
            case 2:
              
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setWav :function _trc_WaveTable_setWav(num,synth) {
        "use strict";
        var _this=this;
        
        _this.wav[num]=synth;
      },
      fiber$setWav :function _trc_WaveTable_f_setWav(_thread,num,synth) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.wav[num]=synth;
        
        _thread.retVal=_this;return;
      },
      setEnv :function _trc_WaveTable_setEnv(num,synth) {
        "use strict";
        var _this=this;
        
        _this.env[num]=synth;
      },
      fiber$setEnv :function _trc_WaveTable_f_setEnv(_thread,num,synth) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.env[num]=synth;
        
        _thread.retVal=_this;return;
      },
      get :function _trc_WaveTable_get(w,e) {
        "use strict";
        var _this=this;
        var synth;
        
        synth = T("OscGen",{osc: _this.wav[w],env: _this.env[e],mul: 0.25});
        
        return synth;
      },
      fiber$get :function _trc_WaveTable_f_get(_thread,w,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var synth;
        
        synth = T("OscGen",{osc: _this.wav[w],env: _this.env[e],mul: 0.25});
        
        _thread.retVal=synth;return;
        
        
        _thread.retVal=_this;return;
      },
      stop :function _trc_WaveTable_stop() {
        "use strict";
        var _this=this;
        
      },
      fiber$stop :function _trc_WaveTable_f_stop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"setWav":{"nowait":false},"setEnv":{"nowait":false},"get":{"nowait":false},"stop":{"nowait":false}},"fields":{"wav":{},"env":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1FillPolygon',
  shortName: 'T1FillPolygon',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.OneframeSprite,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1FillPolygon_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1FillPolygon_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_T1FillPolygon_draw(ctx) {
        "use strict";
        var _this=this;
        var i;
        var xx;
        var yy;
        
        ctx.save();
        ctx.lineWidth=0;
        ctx.fillStyle=_this.col+"";
        ctx.beginPath();
        i = _this.startPos;
        for (; i<_this.endPos ; i+=2) {
          {
            xx = Tonyu.globals.$_setPolygonDrawAry[i];
            
            yy = Tonyu.globals.$_setPolygonDrawAry[i+1];
            
            if (i==_this.startPos) {
              ctx.moveTo(_this.x+xx,_this.y+yy);
            } else {
              ctx.lineTo(_this.x+xx,_this.y+yy);
            }
          }
        }
        ctx.closePath();
        ctx.globalAlpha=_this.alpha/255;
        ctx.fill();
        ctx.restore();
        _this.drawn=true;
      },
      fiber$draw :function _trc_T1FillPolygon_f_draw(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var xx;
        var yy;
        
        ctx.save();
        ctx.lineWidth=0;
        ctx.fillStyle=_this.col+"";
        ctx.beginPath();
        i = _this.startPos;
        for (; i<_this.endPos ; i+=2) {
          {
            xx = Tonyu.globals.$_setPolygonDrawAry[i];
            
            yy = Tonyu.globals.$_setPolygonDrawAry[i+1];
            
            if (i==_this.startPos) {
              ctx.moveTo(_this.x+xx,_this.y+yy);
            } else {
              ctx.lineTo(_this.x+xx,_this.y+yy);
            }
          }
        }
        ctx.closePath();
        ctx.globalAlpha=_this.alpha/255;
        ctx.fill();
        ctx.restore();
        _this.drawn=true;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":false}},"fields":{"col":{},"startPos":{},"endPos":{},"x":{},"y":{},"alpha":{},"drawn":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Line',
  shortName: 'T1Line',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.OneframeSprite,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Line_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Line_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_T1Line_draw(ctx) {
        "use strict";
        var _this=this;
        var bx;
        var by;
        
        bx = 0.5;
        by = 0.5;
        
        ctx.save();
        ctx.lineWidth=1;
        ctx.strokeStyle=_this.col+"";
        ctx.beginPath();
        if (_this.x==_this.tx) {
          by=0;
        }
        if (_this.y==_this.ty) {
          bx=0;
        }
        ctx.moveTo(_this.x+bx,_this.y+by);
        ctx.lineTo(_this.tx+bx,_this.ty+by);
        ctx.stroke();
        ctx.restore();
        _this.drawn=true;
      },
      fiber$draw :function _trc_T1Line_f_draw(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var bx;
        var by;
        
        bx = 0.5;
        by = 0.5;
        
        ctx.save();
        ctx.lineWidth=1;
        ctx.strokeStyle=_this.col+"";
        ctx.beginPath();
        if (_this.x==_this.tx) {
          by=0;
        }
        if (_this.y==_this.ty) {
          bx=0;
        }
        ctx.moveTo(_this.x+bx,_this.y+by);
        ctx.lineTo(_this.tx+bx,_this.ty+by);
        ctx.stroke();
        ctx.restore();
        _this.drawn=true;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":false}},"fields":{"col":{},"x":{},"tx":{},"y":{},"ty":{},"drawn":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Rect',
  shortName: 'T1Rect',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.OneframeSprite,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Rect_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Rect_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_T1Rect_draw(ctx) {
        "use strict";
        var _this=this;
        
        ctx.save();
        if (_this.fill) {
          ctx.lineWidth=0;
          ctx.fillStyle=_this.col+"";
          ctx.fillRect(_this.x,_this.y,_this.w,_this.h);
          
        } else {
          ctx.lineWidth=1;
          ctx.strokeStyle=_this.col+"";
          ctx.strokeRect(_this.x+0.5,_this.y+0.5,_this.w,_this.h);
          
        }
        ctx.restore();
        _this.drawn=true;
      },
      fiber$draw :function _trc_T1Rect_f_draw(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        ctx.save();
        if (_this.fill) {
          ctx.lineWidth=0;
          ctx.fillStyle=_this.col+"";
          ctx.fillRect(_this.x,_this.y,_this.w,_this.h);
          
        } else {
          ctx.lineWidth=1;
          ctx.strokeStyle=_this.col+"";
          ctx.strokeRect(_this.x+0.5,_this.y+0.5,_this.w,_this.h);
          
        }
        ctx.restore();
        _this.drawn=true;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":false}},"fields":{"fill":{},"col":{},"x":{},"y":{},"w":{},"h":{},"drawn":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Sprite',
  shortName: 'T1Sprite',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.OneframeSprite,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Sprite_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Sprite_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_T1Sprite_draw(ctx) {
        "use strict";
        var _this=this;
        var sgn;
        
        _this.pImg=Tonyu.globals.$imageList[Math.floor(_this.p||0)];
        if (! _this.pImg) {
          return _this;
        }
        ctx.save();
        ctx.translate(_this.x,_this.y);
        ctx.rotate(_this.angle/180*Math.PI);
        sgn = (_this.f?- 1:1);
        
        if (typeof  _this.scaleY==="undefined") {
          ctx.scale(_this.scaleX*sgn,_this.scaleX);
          
        } else {
          ctx.scale(_this.scaleX*sgn,_this.scaleY);
          
        }
        ctx.globalAlpha=_this.alpha/255;
        ctx.drawImage(_this.pImg.image,_this.pImg.x,_this.pImg.y,_this.pImg.width,_this.pImg.height,- _this.pImg.width/2,- _this.pImg.height/2,_this.pImg.width,_this.pImg.height);
        ctx.restore();
        _this.drawn=true;
      },
      fiber$draw :function _trc_T1Sprite_f_draw(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var sgn;
        
        _this.pImg=Tonyu.globals.$imageList[Math.floor(_this.p||0)];
        if (! _this.pImg) {
          _thread.retVal=_this;return;
          
        }
        ctx.save();
        ctx.translate(_this.x,_this.y);
        ctx.rotate(_this.angle/180*Math.PI);
        sgn = (_this.f?- 1:1);
        
        if (typeof  _this.scaleY==="undefined") {
          ctx.scale(_this.scaleX*sgn,_this.scaleX);
          
        } else {
          ctx.scale(_this.scaleX*sgn,_this.scaleY);
          
        }
        ctx.globalAlpha=_this.alpha/255;
        ctx.drawImage(_this.pImg.image,_this.pImg.x,_this.pImg.y,_this.pImg.width,_this.pImg.height,- _this.pImg.width/2,- _this.pImg.height/2,_this.pImg.width,_this.pImg.height);
        ctx.restore();
        _this.drawn=true;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":false}},"fields":{"pImg":{},"p":{},"x":{},"y":{},"f":{},"drawn":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Text',
  shortName: 'T1Text',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.OneframeSprite,
  includes: [Tonyu.classes.kernel.TextRectMod],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Text_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Text_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_T1Text_draw(ctx) {
        "use strict";
        var _this=this;
        var splitsText;
        var drawY;
        var textCount;
        var rect;
        
        if (! _this.font) {
          _this.font="ＭＳ Ｐゴシック";
        }
        ctx.save();
        ctx.font=_this.size+"px '"+_this.font+"'";
        splitsText = (_this.text+"").split("\n");
        
        drawY = _this.y;
        
        if (! _this.size) {
          _this.size=15;
        }
        if (! _this.align) {
          _this.align=new Tonyu.classes.kernel.Align2D("left");
        }
        if (! _this.fillStyle) {
          _this.fillStyle="white";
        }
        if (_this.alpha==null) {
          _this.alpha=255;
        }
        ctx.fillStyle=_this.fillStyle+"";
        ctx.globalAlpha=_this.alpha/255;
        _this.height=0;
        _this.width=0;
        textCount = 0;
        for (; textCount<splitsText.length ; textCount++) {
          {
            rect = _this.drawTextRect(ctx,splitsText[textCount],_this.x,drawY,_this.size,_this.align,"fill");
            
            if (_this.width<rect.w) {
              _this.width=rect.w;
            }
            _this.height+=rect.h;
            drawY+=_this.size;
          }
        }
        _this.owner.width=_this.width;
        _this.owner.height=_this.height;
        ctx.restore();
        _this.drawn=true;
      },
      fiber$draw :function _trc_T1Text_f_draw(_thread,ctx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var splitsText;
        var drawY;
        var textCount;
        var rect;
        
        if (! _this.font) {
          _this.font="ＭＳ Ｐゴシック";
        }
        ctx.save();
        ctx.font=_this.size+"px '"+_this.font+"'";
        splitsText = (_this.text+"").split("\n");
        
        drawY = _this.y;
        
        if (! _this.size) {
          _this.size=15;
        }
        if (! _this.align) {
          _this.align=new Tonyu.classes.kernel.Align2D("left");
        }
        if (! _this.fillStyle) {
          _this.fillStyle="white";
        }
        if (_this.alpha==null) {
          _this.alpha=255;
        }
        ctx.fillStyle=_this.fillStyle+"";
        ctx.globalAlpha=_this.alpha/255;
        _this.height=0;
        _this.width=0;
        textCount = 0;
        for (; textCount<splitsText.length ; textCount++) {
          {
            rect = _this.drawTextRect(ctx,splitsText[textCount],_this.x,drawY,_this.size,_this.align,"fill");
            
            if (_this.width<rect.w) {
              _this.width=rect.w;
            }
            _this.height+=rect.h;
            drawY+=_this.size;
          }
        }
        _this.owner.width=_this.width;
        _this.owner.height=_this.height;
        ctx.restore();
        _this.drawn=true;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":false}},"fields":{"font":{},"size":{},"text":{},"y":{},"align":{},"fillStyle":{},"alpha":{},"height":{},"width":{},"x":{},"owner":{},"drawn":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Scheduler',
  shortName: 'Scheduler',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Scheduler_main() {
        "use strict";
        var _this=this;
        
        if (typeof  performance==="undefined") {
          _this.window.performance={};
          
        }
        if (! performance.now) {
          performance.now=(function now() {
            
            return Date.now();
          });
          
        }
        _this.cur=[];
        _this.next=[];
      },
      fiber$main :function _trc_Scheduler_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  performance==="undefined") {
          _this.window.performance={};
          
        }
        if (! performance.now) {
          performance.now=(function now() {
            
            return Date.now();
          });
          
        }
        _this.cur=[];
        _this.next=[];
        
        _thread.retVal=_this;return;
      },
      addObj :function _trc_Scheduler_addObj(obj,name,args) {
        "use strict";
        var _this=this;
        
        return _this.newThread(obj,name,args);
      },
      fiber$addObj :function _trc_Scheduler_f_addObj(_thread,obj,name,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Scheduler_ent_addObj(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$newThread(_thread, obj, name, args);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      newThread :function _trc_Scheduler_newThread(obj,name,args,options) {
        "use strict";
        var _this=this;
        var th;
        
        name=name||"main";
        args=args||[];
        th = Tonyu.thread();
        
        th.apply(obj,name,args);
        th.name=(obj.getClassInfo?obj.getClassInfo().shortName:"Unknown")+"::"+name;
        _this.addToCur(th);
        return th;
      },
      fiber$newThread :function _trc_Scheduler_f_newThread(_thread,obj,name,args,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var th;
        
        name=name||"main";
        args=args||[];
        th = Tonyu.thread();
        
        th.apply(obj,name,args);
        th.name=(obj.getClassInfo?obj.getClassInfo().shortName:"Unknown")+"::"+name;
        
        _thread.enter(function _trc_Scheduler_ent_newThread(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$addToCur(_thread, th);
              __pc=1;return;
            case 1:
              
              _thread.exit(th);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      addToCur :function _trc_Scheduler_addToCur(th) {
        "use strict";
        var _this=this;
        
        if (th.scheduled) {
          return _this;
        }
        _this.cur.push(th);
        th.scheduled=_this;
        if (Tonyu.globals.$Boot.newLimit) {
          Tonyu.globals.$Boot.newLimitCount--;
          if (Tonyu.globals.$Boot.newLimitCount<=0) {
            throw new Error("一度にたくさんのスレッドを作りすぎています\n"+"       $Boot.newLimitの値を変更すると、1フレーム間に生成できる オブジェクト+スレッドの合計数 を変更できます\n"+"       $Boot.newLimit="+Tonyu.globals.$Boot.newLimit+"; // 現在の オブジェクト数+スレッド数 の限度\n"+"       update(); // 次フレームから適用されます\n"+"       [参考] https://edit.tonyu.jp/doc/limitations.html\n");
            
          }
          
        }
      },
      fiber$addToCur :function _trc_Scheduler_f_addToCur(_thread,th) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (th.scheduled) {
          _thread.retVal=_this;return;
          
        }
        _this.cur.push(th);
        th.scheduled=_this;
        if (Tonyu.globals.$Boot.newLimit) {
          Tonyu.globals.$Boot.newLimitCount--;
          if (Tonyu.globals.$Boot.newLimitCount<=0) {
            throw new Error("一度にたくさんのスレッドを作りすぎています\n"+"       $Boot.newLimitの値を変更すると、1フレーム間に生成できる オブジェクト+スレッドの合計数 を変更できます\n"+"       $Boot.newLimit="+Tonyu.globals.$Boot.newLimit+"; // 現在の オブジェクト数+スレッド数 の限度\n"+"       update(); // 次フレームから適用されます\n"+"       [参考] https://edit.tonyu.jp/doc/limitations.html\n");
            
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      addToNext :function _trc_Scheduler_addToNext(th) {
        "use strict";
        var _this=this;
        
        if (th.scheduled) {
          return _this;
        }
        _this.next.push(th);
        th.scheduled=_this;
      },
      fiber$addToNext :function _trc_Scheduler_f_addToNext(_thread,th) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (th.scheduled) {
          _thread.retVal=_this;return;
          
        }
        _this.next.push(th);
        th.scheduled=_this;
        
        _thread.retVal=_this;return;
      },
      unschedule :function _trc_Scheduler_unschedule(th) {
        "use strict";
        var _this=this;
        var i;
        
        i = _this.cur.indexOf(th);
        
        if (i>=0) {
          _this.cur.splice(i,1);
          delete th.scheduled;
          
        } else {
          i=_this.next.indexOf(th);
          if (i>=0) {
            _this.next.splice(i,1);
            delete th.scheduled;
            
          }
          
        }
      },
      fiber$unschedule :function _trc_Scheduler_f_unschedule(_thread,th) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        
        i = _this.cur.indexOf(th);
        
        if (i>=0) {
          _this.cur.splice(i,1);
          delete th.scheduled;
          
        } else {
          i=_this.next.indexOf(th);
          if (i>=0) {
            _this.next.splice(i,1);
            delete th.scheduled;
            
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      checkTimeout :function _trc_Scheduler_checkTimeout() {
        "use strict";
        var _this=this;
        var now;
        
        now = performance.now();
        
        if (now-_this.lastSteps>1000) {
          throw new Error("待機不能モードでupdateが呼ばれています．ブラウザが固まるのを防ぐために停止します．");
          
          
        }
      },
      fiber$checkTimeout :function _trc_Scheduler_f_checkTimeout(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var now;
        
        now = performance.now();
        
        if (now-_this.lastSteps>1000) {
          throw new Error("待機不能モードでupdateが呼ばれています．ブラウザが固まるのを防ぐために停止します．");
          
          
        }
        
        _thread.retVal=_this;return;
      },
      checkDuplicate :function _trc_Scheduler_checkDuplicate() {
        "use strict";
        var _this=this;
        var dupc;
        var t;
        var _it_5913;
        var _it_5914;
        
        dupc = {};
        
        _it_5913=Tonyu.iterator(_this.cur,1);
        while(_it_5913.next()) {
          t=_it_5913[0];
          
          if (dupc[t.id]) {
            console.log("WARNING","Scheduler: duplicate thread detected in cur",t);
            
          }
          dupc[t.id]="cur";
          
        }
        _it_5914=Tonyu.iterator(_this.next,1);
        while(_it_5914.next()) {
          t=_it_5914[0];
          
          if (dupc[t.id]) {
            console.log("WARNING","Scheduler: duplicate thread detected in next and "+dupc[t.id],t);
            
          }
          dupc[t.id]="next";
          
        }
      },
      fiber$checkDuplicate :function _trc_Scheduler_f_checkDuplicate(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var dupc;
        var t;
        var _it_5913;
        var _it_5914;
        
        dupc = {};
        
        _it_5913=Tonyu.iterator(_this.cur,1);
        while(_it_5913.next()) {
          t=_it_5913[0];
          
          if (dupc[t.id]) {
            console.log("WARNING","Scheduler: duplicate thread detected in cur",t);
            
          }
          dupc[t.id]="cur";
          
        }
        _it_5914=Tonyu.iterator(_this.next,1);
        while(_it_5914.next()) {
          t=_it_5914[0];
          
          if (dupc[t.id]) {
            console.log("WARNING","Scheduler: duplicate thread detected in next and "+dupc[t.id],t);
            
          }
          dupc[t.id]="next";
          
        }
        
        _thread.retVal=_this;return;
      },
      doTimeStop :function _trc_Scheduler_doTimeStop() {
        "use strict";
        var _this=this;
        
        _this.next=_this.allThreads;
        _this.cur=[];
        return _this.next;
      },
      fiber$doTimeStop :function _trc_Scheduler_f_doTimeStop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.next=_this.allThreads;
        _this.cur=[];
        _thread.retVal=_this.next;return;
        
        
        _thread.retVal=_this;return;
      },
      resetLastSteps :function _trc_Scheduler_resetLastSteps() {
        "use strict";
        var _this=this;
        
        _this.lastSteps=performance.now();
      },
      fiber$resetLastSteps :function _trc_Scheduler_f_resetLastSteps(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.lastSteps=performance.now();
        
        _thread.retVal=_this;return;
      },
      stepsAll :function _trc_Scheduler_stepsAll() {
        "use strict";
        var _this=this;
        var dupc;
        var t;
        
        _this.resetLastSteps();
        dupc = {};
        
        while (_this.cur.length) {
          t = _this.cur.shift();
          
          if (dupc[t.id]) {
            console.log("WARNING","Scheduler: duplicate thread detected",t);
            continue;
            
            
          }
          dupc[t.id]=t;
          delete t.scheduled;
          if (t.waitCount) {
            t.waitCount--;
            _this.addToNext(t);
            
          } else {
            t.steps();
            if (t.preempted) {
              Tonyu.globals.$Boot.fireEvent("preempted",{thread: t,scheduler: _this});
              _this.addToNext(t);
              
            }
            
          }
          
        }
        _this.cur=_this.next;
        _this.next=[];
        return _this.cur.length;
      },
      fiber$stepsAll :function _trc_Scheduler_f_stepsAll(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var dupc;
        var t;
        
        
        _thread.enter(function _trc_Scheduler_ent_stepsAll(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resetLastSteps(_thread);
              __pc=1;return;
            case 1:
              
              dupc = {};
              
            case 2:
              if (!(_this.cur.length)) { __pc=9     ; break; }
              t = _this.cur.shift();
              
              if (!(dupc[t.id])) { __pc=3     ; break; }
              console.log("WARNING","Scheduler: duplicate thread detected",t);
              __pc=2; break;
              
            case 3     :
              
              dupc[t.id]=t;
              delete t.scheduled;
              if (!(t.waitCount)) { __pc=5     ; break; }
              t.waitCount--;
              _this.fiber$addToNext(_thread, t);
              __pc=4;return;
            case 4:
              
              __pc=8     ;break;
            case 5     :
              t.steps();
              if (!(t.preempted)) { __pc=7     ; break; }
              Tonyu.globals.$Boot.fireEvent("preempted",{thread: t,scheduler: _this});
              _this.fiber$addToNext(_thread, t);
              __pc=6;return;
            case 6:
              
            case 7     :
              
            case 8     :
              
              __pc=2;break;
            case 9     :
              
              _this.cur=_this.next;
              _this.next=[];
              _thread.exit(_this.cur.length);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__allThreads :function _trc_Scheduler___getter__allThreads() {
        "use strict";
        var _this=this;
        
        return _this.cur.concat(_this.next);
      },
      findByThreadGroup :function _trc_Scheduler_findByThreadGroup(o) {
        "use strict";
        var _this=this;
        
        return _this.allThreads.filter((function anonymous_3169(t) {
          
          return t._threadGroup===o;
        }));
      },
      fiber$findByThreadGroup :function _trc_Scheduler_f_findByThreadGroup(_thread,o) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.allThreads.filter((function anonymous_3169(t) {
          
          return t._threadGroup===o;
        }));return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__isEmpty :function _trc_Scheduler___getter__isEmpty() {
        "use strict";
        var _this=this;
        
        return _this.allThreads.length==0;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"addObj":{"nowait":false},"newThread":{"nowait":false},"addToCur":{"nowait":false},"addToNext":{"nowait":false},"unschedule":{"nowait":false},"checkTimeout":{"nowait":false},"checkDuplicate":{"nowait":false},"doTimeStop":{"nowait":false},"resetLastSteps":{"nowait":false},"stepsAll":{"nowait":false},"__getter__allThreads":{"nowait":true},"findByThreadGroup":{"nowait":false},"__getter__isEmpty":{"nowait":true}},"fields":{"window":{},"cur":{},"next":{},"lastSteps":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.DialogMod',
  shortName: 'DialogMod',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_DialogMod_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_DialogMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      prompt :function _trc_DialogMod_prompt(mesg,val,geom) {
        "use strict";
        var _this=this;
        var r;
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        
        r=_this.waitFor(Tonyu.globals.$InputBox.prompt(mesg,val,geom));
        return r;
      },
      fiber$prompt :function _trc_DialogMod_f_prompt(_thread,mesg,val,geom) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        
        
        _thread.enter(function _trc_DialogMod_ent_prompt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$waitFor(_thread, Tonyu.globals.$InputBox.prompt(mesg,val,geom));
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      waitInput :function _trc_DialogMod_waitInput(title,mesg,val,geom) {
        "use strict";
        var _this=this;
        
        return _this.prompt({title: title,body: mesg},val,geom);
      },
      fiber$waitInput :function _trc_DialogMod_f_waitInput(_thread,title,mesg,val,geom) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_DialogMod_ent_waitInput(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$prompt(_thread, {title: title,body: mesg}, val, geom);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      promptNumber :function _trc_DialogMod_promptNumber(mesg,val,geom) {
        "use strict";
        var _this=this;
        var r;
        
        
        r=_this.prompt(mesg,val,geom);
        return r-0;
      },
      fiber$promptNumber :function _trc_DialogMod_f_promptNumber(_thread,mesg,val,geom) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        
        _thread.enter(function _trc_DialogMod_ent_promptNumber(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$prompt(_thread, mesg, val, geom);
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r-0);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      confirm :function _trc_DialogMod_confirm(mesg) {
        "use strict";
        var _this=this;
        var r;
        
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        r=_this.waitFor(Tonyu.globals.$InputBox.confirm(mesg));
        return r;
      },
      fiber$confirm :function _trc_DialogMod_f_confirm(_thread,mesg) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        
        _thread.enter(function _trc_DialogMod_ent_confirm(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$waitFor(_thread, Tonyu.globals.$InputBox.confirm(mesg));
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      alert :function _trc_DialogMod_alert(mesg) {
        "use strict";
        var _this=this;
        var r;
        
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        r=_this.waitFor(Tonyu.globals.$InputBox.alert(mesg));
        return r;
      },
      fiber$alert :function _trc_DialogMod_f_alert(_thread,mesg) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        
        _thread.enter(function _trc_DialogMod_ent_alert(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$waitFor(_thread, Tonyu.globals.$InputBox.alert(mesg));
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"prompt":{"nowait":false},"waitInput":{"nowait":false},"promptNumber":{"nowait":false},"confirm":{"nowait":false},"alert":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.GamePad',
  shortName: 'GamePad',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_GamePad_main() {
        "use strict";
        var _this=this;
        
        _this.available=false;
        _this.useGamePad=false;
        _this.enable=true;
        _this.gamepads=[];
        _this.gamepadones=[];
        _this.prevFrameCount=- 1;
      },
      fiber$main :function _trc_GamePad_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.available=false;
        _this.useGamePad=false;
        _this.enable=true;
        _this.gamepads=[];
        _this.gamepadones=[];
        _this.prevFrameCount=- 1;
        
        _thread.retVal=_this;return;
      },
      setEnable :function _trc_GamePad_setEnable(e) {
        "use strict";
        var _this=this;
        
        _this.enable=e;
      },
      fiber$setEnable :function _trc_GamePad_f_setEnable(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.enable=e;
        
        _thread.retVal=_this;return;
      },
      enableGamePad :function _trc_GamePad_enableGamePad() {
        "use strict";
        var _this=this;
        
        if (! _this.useGamePad) {
          _this.update();
          _this.useGamePad=true;
          
        }
      },
      fiber$enableGamePad :function _trc_GamePad_f_enableGamePad(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_GamePad_ent_enableGamePad(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this.useGamePad)) { __pc=2     ; break; }
              _this.fiber$update(_thread);
              __pc=1;return;
            case 1:
              
              _this.useGamePad=true;
            case 2     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getGamepads :function _trc_GamePad_getGamepads() {
        "use strict";
        var _this=this;
        var pads;
        
        _this.enableGamePad();
        pads = navigator.getGamepads?navigator.getGamepads():(navigator.webkitGetGamepads?navigator.webkitGetGamepads:[]);
        
        return pads;
      },
      fiber$getGamepads :function _trc_GamePad_f_getGamepads(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var pads;
        
        
        _thread.enter(function _trc_GamePad_ent_getGamepads(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              pads = navigator.getGamepads?navigator.getGamepads():(navigator.webkitGetGamepads?navigator.webkitGetGamepads:[]);
              
              _thread.exit(pads);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      get :function _trc_GamePad_get(no) {
        "use strict";
        var _this=this;
        
        if (_this.gamepadones[no]==null) {
          _this.gamepadones[no]=new Tonyu.classes.kernel.GamePadOne(_this,no);
          
        }
        return _this.gamepadones[no];
      },
      fiber$get :function _trc_GamePad_f_get(_thread,no) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.gamepadones[no]==null) {
          _this.gamepadones[no]=new Tonyu.classes.kernel.GamePadOne(_this,no);
          
        }
        _thread.retVal=_this.gamepadones[no];return;
        
        
        _thread.retVal=_this;return;
      },
      padsCount :function _trc_GamePad_padsCount() {
        "use strict";
        var _this=this;
        var count;
        var i;
        
        _this.enableGamePad();
        count = 0;
        
        i = 0;
        for (; i<_this.gamepads.length ; i++) {
          {
            if (_this.gamepads[i]) {
              count++;
            }
          }
        }
        return count;
      },
      fiber$padsCount :function _trc_GamePad_f_padsCount(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var count;
        var i;
        
        
        _thread.enter(function _trc_GamePad_ent_padsCount(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              count = 0;
              
              i = 0;
              for (; i<_this.gamepads.length ; i++) {
                {
                  if (_this.gamepads[i]) {
                    count++;
                  }
                }
              }
              _thread.exit(count);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPad :function _trc_GamePad_getPad(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp) {
          return null;
        }
        return gp.pad;
      },
      fiber$getPad :function _trc_GamePad_f_getPad(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getPad(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              _thread.exit(gp.pad);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPadId :function _trc_GamePad_getPadId(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad) {
          return null;
        }
        return gp.pad.id;
      },
      fiber$getPadId :function _trc_GamePad_f_getPadId(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getPadId(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              _thread.exit(gp.pad.id);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      isConnected :function _trc_GamePad_isConnected(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad) {
          return false;
        }
        return gp.pad.connected;
      },
      fiber$isConnected :function _trc_GamePad_f_isConnected(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_isConnected(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad)) { __pc=2     ; break; }
              _thread.exit(false);return;
            case 2     :
              
              _thread.exit(gp.pad.connected);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getMapping :function _trc_GamePad_getMapping(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad) {
          return null;
        }
        return gp.pad.mapping;
      },
      fiber$getMapping :function _trc_GamePad_f_getMapping(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getMapping(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              _thread.exit(gp.pad.mapping);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getButton :function _trc_GamePad_getButton(index,no) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.status||! gp.status[no]) {
          return 0;
        }
        return gp.status[no];
      },
      fiber$getButton :function _trc_GamePad_f_getButton(_thread,index,no) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getButton(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.status||! gp.status[no])) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.status[no]);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getButtonValue :function _trc_GamePad_getButtonValue(index,no) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad||! gp.pad.buttons||! gp.pad.buttons[no]) {
          return 0;
        }
        return gp.pad.buttons[no].value;
      },
      fiber$getButtonValue :function _trc_GamePad_f_getButtonValue(_thread,index,no) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getButtonValue(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad||! gp.pad.buttons||! gp.pad.buttons[no])) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.pad.buttons[no].value);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getButtonCount :function _trc_GamePad_getButtonCount(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad||! gp.pad.buttons) {
          return 0;
        }
        return gp.pad.buttons.length;
      },
      fiber$getButtonCount :function _trc_GamePad_f_getButtonCount(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getButtonCount(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad||! gp.pad.buttons)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.pad.buttons.length);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getAxis :function _trc_GamePad_getAxis(index,no) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad||! gp.pad.axes) {
          return 0;
        }
        return gp.pad.axes[no];
      },
      fiber$getAxis :function _trc_GamePad_f_getAxis(_thread,index,no) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getAxis(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad||! gp.pad.axes)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.pad.axes[no]);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getAxisCount :function _trc_GamePad_getAxisCount(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp||! gp.pad||! gp.pad.axes) {
          return 0;
        }
        return gp.pad.axes.length;
      },
      fiber$getAxisCount :function _trc_GamePad_f_getAxisCount(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getAxisCount(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp||! gp.pad||! gp.pad.axes)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.pad.axes.length);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getUp :function _trc_GamePad_getUp(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp) {
          return 0;
        }
        return gp.statusA1U;
      },
      fiber$getUp :function _trc_GamePad_f_getUp(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getUp(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.statusA1U);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getDown :function _trc_GamePad_getDown(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp) {
          return 0;
        }
        return gp.statusA1D;
      },
      fiber$getDown :function _trc_GamePad_f_getDown(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getDown(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.statusA1D);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getLeft :function _trc_GamePad_getLeft(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp) {
          return 0;
        }
        return gp.statusA1L;
      },
      fiber$getLeft :function _trc_GamePad_f_getLeft(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getLeft(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.statusA1L);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getRight :function _trc_GamePad_getRight(index) {
        "use strict";
        var _this=this;
        var gp;
        
        _this.enableGamePad();
        gp = _this.gamepads[index];
        
        if (! gp) {
          return 0;
        }
        return gp.statusA1R;
      },
      fiber$getRight :function _trc_GamePad_f_getRight(_thread,index) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var gp;
        
        
        _thread.enter(function _trc_GamePad_ent_getRight(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$enableGamePad(_thread);
              __pc=1;return;
            case 1:
              
              gp = _this.gamepads[index];
              
              if (!(! gp)) { __pc=2     ; break; }
              _thread.exit(0);return;
            case 2     :
              
              _thread.exit(gp.statusA1R);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      update :function _trc_GamePad_update() {
        "use strict";
        var _this=this;
        var pads;
        var i;
        var pad;
        var idx;
        var gamepad;
        var buttons;
        var j;
        var button;
        var pressed;
        var AXIS_NEUTRAL;
        var axisLR;
        var axisUD;
        
        if (! (window.Gamepad||navigator.getGamepads||navigator.webkitGetGamepads)) {
          _this.available=false;
          return _this;
          
        }
        _this.available=true;
        if (! _this.useGamePad) {
          return _this;
        }
        if (! _this.enable) {
          return _this;
        }
        if (_this.prevFrameCount==Tonyu.globals.$frameCount) {
          return _this;
        }
        pads = navigator.getGamepads?navigator.getGamepads():(navigator.webkitGetGamepads?navigator.webkitGetGamepads:[]);
        
        i = 0;
        for (; i<pads.length ; i++) {
          {
            pad = pads[i];
            
            if (! pad) {
              continue;
              
              
            }
            idx = pad.index;
            
            if (! _this.gamepads[idx]) {
              _this.gamepads[idx]={updateFrame: Tonyu.globals.$frameCount,pad: pad,status: [],statusA1L: 0,statusA1R: 0,statusA1U: 0,statusA1D: 0};
              
            } else {
              _this.gamepads[idx].updateFrame=Tonyu.globals.$frameCount;
              _this.gamepads[idx].pad=pad;
              
            }
            gamepad = _this.gamepads[idx];
            
            buttons = pad.buttons;
            
            j = 0;
            for (; j<buttons.length ; j++) {
              {
                button = buttons[j];
                
                pressed = button.pressed;
                
                if (gamepad.status[j]==null) {
                  gamepad.status[j]=0;
                  
                } else {
                  if (pressed) {
                    gamepad.status[j]++;
                    
                  } else {
                    gamepad.status[j]=0;
                    
                  }
                  
                }
              }
            }
            AXIS_NEUTRAL = 0.4;
            
            if (pad.axes.length>=2) {
              axisLR = pad.axes[0];
              
              axisUD = pad.axes[1];
              
              if (axisLR!=null&&axisUD!=null) {
                gamepad.statusA1L=(axisLR<=- AXIS_NEUTRAL)?gamepad.statusA1L+1:0;
                gamepad.statusA1R=(axisLR>=AXIS_NEUTRAL)?gamepad.statusA1R+1:0;
                gamepad.statusA1U=(axisUD<=- AXIS_NEUTRAL)?gamepad.statusA1U+1:0;
                gamepad.statusA1D=(axisUD>=AXIS_NEUTRAL)?gamepad.statusA1D+1:0;
                
              }
              
            }
          }
        }
        i = 0;
        for (; i<_this.gamepads.length ; i++) {
          {
            pad = _this.gamepads[i];
            
            if (pad) {
              if (pad.updateFrame!=Tonyu.globals.$frameCount) {
                _this.gamepads[i]=null;
                
              }
              
            }
          }
        }
        _this.prevFrameCount=Tonyu.globals.$frameCount;
      },
      fiber$update :function _trc_GamePad_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var pads;
        var i;
        var pad;
        var idx;
        var gamepad;
        var buttons;
        var j;
        var button;
        var pressed;
        var AXIS_NEUTRAL;
        var axisLR;
        var axisUD;
        
        if (! (window.Gamepad||navigator.getGamepads||navigator.webkitGetGamepads)) {
          _this.available=false;
          _thread.retVal=_this;return;
          
          
        }
        _this.available=true;
        if (! _this.useGamePad) {
          _thread.retVal=_this;return;
          
        }
        if (! _this.enable) {
          _thread.retVal=_this;return;
          
        }
        if (_this.prevFrameCount==Tonyu.globals.$frameCount) {
          _thread.retVal=_this;return;
          
        }
        pads = navigator.getGamepads?navigator.getGamepads():(navigator.webkitGetGamepads?navigator.webkitGetGamepads:[]);
        
        i = 0;
        for (; i<pads.length ; i++) {
          {
            pad = pads[i];
            
            if (! pad) {
              continue;
              
              
            }
            idx = pad.index;
            
            if (! _this.gamepads[idx]) {
              _this.gamepads[idx]={updateFrame: Tonyu.globals.$frameCount,pad: pad,status: [],statusA1L: 0,statusA1R: 0,statusA1U: 0,statusA1D: 0};
              
            } else {
              _this.gamepads[idx].updateFrame=Tonyu.globals.$frameCount;
              _this.gamepads[idx].pad=pad;
              
            }
            gamepad = _this.gamepads[idx];
            
            buttons = pad.buttons;
            
            j = 0;
            for (; j<buttons.length ; j++) {
              {
                button = buttons[j];
                
                pressed = button.pressed;
                
                if (gamepad.status[j]==null) {
                  gamepad.status[j]=0;
                  
                } else {
                  if (pressed) {
                    gamepad.status[j]++;
                    
                  } else {
                    gamepad.status[j]=0;
                    
                  }
                  
                }
              }
            }
            AXIS_NEUTRAL = 0.4;
            
            if (pad.axes.length>=2) {
              axisLR = pad.axes[0];
              
              axisUD = pad.axes[1];
              
              if (axisLR!=null&&axisUD!=null) {
                gamepad.statusA1L=(axisLR<=- AXIS_NEUTRAL)?gamepad.statusA1L+1:0;
                gamepad.statusA1R=(axisLR>=AXIS_NEUTRAL)?gamepad.statusA1R+1:0;
                gamepad.statusA1U=(axisUD<=- AXIS_NEUTRAL)?gamepad.statusA1U+1:0;
                gamepad.statusA1D=(axisUD>=AXIS_NEUTRAL)?gamepad.statusA1D+1:0;
                
              }
              
            }
          }
        }
        i = 0;
        for (; i<_this.gamepads.length ; i++) {
          {
            pad = _this.gamepads[i];
            
            if (pad) {
              if (pad.updateFrame!=Tonyu.globals.$frameCount) {
                _this.gamepads[i]=null;
                
              }
              
            }
          }
        }
        _this.prevFrameCount=Tonyu.globals.$frameCount;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"setEnable":{"nowait":false},"enableGamePad":{"nowait":false},"getGamepads":{"nowait":false},"get":{"nowait":false},"padsCount":{"nowait":false},"getPad":{"nowait":false},"getPadId":{"nowait":false},"isConnected":{"nowait":false},"getMapping":{"nowait":false},"getButton":{"nowait":false},"getButtonValue":{"nowait":false},"getButtonCount":{"nowait":false},"getAxis":{"nowait":false},"getAxisCount":{"nowait":false},"getUp":{"nowait":false},"getDown":{"nowait":false},"getLeft":{"nowait":false},"getRight":{"nowait":false},"update":{"nowait":false}},"fields":{"available":{},"useGamePad":{},"enable":{},"gamepads":{},"gamepadones":{},"prevFrameCount":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.GamePadOne',
  shortName: 'GamePadOne',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_GamePadOne_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_GamePadOne_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_GamePadOne_initialize(gamePad,padNo) {
        "use strict";
        var _this=this;
        
        _this.gamePad=gamePad;
        _this.padNo=padNo;
      },
      getGamePad :function _trc_GamePadOne_getGamePad() {
        "use strict";
        var _this=this;
        
        return _this.gamePad;
      },
      fiber$getGamePad :function _trc_GamePadOne_f_getGamePad(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad;return;
        
        
        _thread.retVal=_this;return;
      },
      getPadNo :function _trc_GamePadOne_getPadNo() {
        "use strict";
        var _this=this;
        
        return _this.padNo;
      },
      fiber$getPadNo :function _trc_GamePadOne_f_getPadNo(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.padNo;return;
        
        
        _thread.retVal=_this;return;
      },
      getPad :function _trc_GamePadOne_getPad() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.gamePadCount(_this.padNo);
      },
      fiber$getPad :function _trc_GamePadOne_f_getPad(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.gamePadCount(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getPadId :function _trc_GamePadOne_getPadId() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getPadId(_this.padNo);
      },
      fiber$getPadId :function _trc_GamePadOne_f_getPadId(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getPadId(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      isConnected :function _trc_GamePadOne_isConnected() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.isConnected(_this.padNo);
      },
      fiber$isConnected :function _trc_GamePadOne_f_isConnected(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.isConnected(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getMapping :function _trc_GamePadOne_getMapping() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getMapping(_this.padNo);
      },
      fiber$getMapping :function _trc_GamePadOne_f_getMapping(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getMapping(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getButton :function _trc_GamePadOne_getButton(btnNo) {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getButton(_this.padNo,btnNo);
      },
      fiber$getButton :function _trc_GamePadOne_f_getButton(_thread,btnNo) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getButton(_this.padNo,btnNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getButtonValue :function _trc_GamePadOne_getButtonValue(btnNo) {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getButtonValue(_this.padNo,btnNo);
      },
      fiber$getButtonValue :function _trc_GamePadOne_f_getButtonValue(_thread,btnNo) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getButtonValue(_this.padNo,btnNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getButtonCount :function _trc_GamePadOne_getButtonCount() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getButtonCount(_this.padNo);
      },
      fiber$getButtonCount :function _trc_GamePadOne_f_getButtonCount(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getButtonCount(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getAxis :function _trc_GamePadOne_getAxis(btnNo) {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getAxis(_this.padNo,btnNo);
      },
      fiber$getAxis :function _trc_GamePadOne_f_getAxis(_thread,btnNo) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getAxis(_this.padNo,btnNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getAxisCount :function _trc_GamePadOne_getAxisCount() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getAxisCount(_this.padNo);
      },
      fiber$getAxisCount :function _trc_GamePadOne_f_getAxisCount(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getAxisCount(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getUp :function _trc_GamePadOne_getUp() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getUp(_this.padNo);
      },
      fiber$getUp :function _trc_GamePadOne_f_getUp(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getUp(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getDown :function _trc_GamePadOne_getDown() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getDown(_this.padNo);
      },
      fiber$getDown :function _trc_GamePadOne_f_getDown(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getDown(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getLeft :function _trc_GamePadOne_getLeft() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getLeft(_this.padNo);
      },
      fiber$getLeft :function _trc_GamePadOne_f_getLeft(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getLeft(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      getRight :function _trc_GamePadOne_getRight() {
        "use strict";
        var _this=this;
        
        return _this.gamePad.getRight(_this.padNo);
      },
      fiber$getRight :function _trc_GamePadOne_f_getRight(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.gamePad.getRight(_this.padNo);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"getGamePad":{"nowait":false},"getPadNo":{"nowait":false},"getPad":{"nowait":false},"getPadId":{"nowait":false},"isConnected":{"nowait":false},"getMapping":{"nowait":false},"getButton":{"nowait":false},"getButtonValue":{"nowait":false},"getButtonCount":{"nowait":false},"getAxis":{"nowait":false},"getAxisCount":{"nowait":false},"getUp":{"nowait":false},"getDown":{"nowait":false},"getLeft":{"nowait":false},"getRight":{"nowait":false}},"fields":{"gamePad":{},"padNo":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.KeyDownHandler',
  shortName: 'KeyDownHandler',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.EventHandler,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_KeyDownHandler_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_KeyDownHandler_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      createEvent :function _trc_KeyDownHandler_createEvent(raw) {
        "use strict";
        var _this=this;
        var e;
        
        e = {};
        
        e.keyCode=e.code=raw.keyCode;
        e.keyName=e.name=Tonyu.globals.$Keys.codesRev[e.keyCode];
        if (! e.name) {
          e.keyName=e.name=e.code+"";
        }
        e.sendUps=[];
        e.on=(function anonymous_227(name,f) {
          
          if (name==="keyUp"||name==="up") {
            e.sendUps.push(f);
            
          }
        });
        e.sendUp=(function anonymous_345() {
          var f;
          var _it_5957;
          
          _it_5957=Tonyu.iterator(e.sendUps,1);
          while(_it_5957.next()) {
            f=_it_5957[0];
            
            f();
          }
        });
        return e;
      },
      fiber$createEvent :function _trc_KeyDownHandler_f_createEvent(_thread,raw) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var e;
        
        e = {};
        
        e.keyCode=e.code=raw.keyCode;
        e.keyName=e.name=Tonyu.globals.$Keys.codesRev[e.keyCode];
        if (! e.name) {
          e.keyName=e.name=e.code+"";
        }
        e.sendUps=[];
        e.on=(function anonymous_227(name,f) {
          
          if (name==="keyUp"||name==="up") {
            e.sendUps.push(f);
            
          }
        });
        e.sendUp=(function anonymous_345() {
          var f;
          var _it_5957;
          
          _it_5957=Tonyu.iterator(e.sendUps,1);
          while(_it_5957.next()) {
            f=_it_5957[0];
            
            f();
          }
        });
        _thread.retVal=e;return;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_KeyDownHandler_initialize() {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, []);
        _this.handlers={};
        _this.pressState={};
        Tonyu.globals.$InputDevice.on("keyDownRaw",(function anonymous_532(raw) {
          var a;
          var e;
          var f;
          var _it_5961;
          var _it_5962;
          
          if (_this.pressState[raw.keyCode]) {
            return _this;
          }
          a = _this.pressState[raw.keyCode]=[];
          
          e = _this.createEvent(raw);
          
          a.push(e);
          if (_this.handlers[raw.keyCode]) {
            _it_5961=Tonyu.iterator(_this.handlers[raw.keyCode],1);
            while(_it_5961.next()) {
              f=_it_5961[0];
              
              f(e);
              
            }
            
          }
          if (_this.handlers.all) {
            _it_5962=Tonyu.iterator(_this.handlers.all,1);
            while(_it_5962.next()) {
              f=_it_5962[0];
              
              f(e);
              
            }
            
          }
        }));
        Tonyu.globals.$InputDevice.on("keyUpRaw",(function anonymous_968(e) {
          var a;
          var e;
          var _it_5969;
          
          a = _this.pressState[e.keyCode]=_this.pressState[e.keyCode]||[];
          
          delete _this.pressState[e.keyCode];
          _it_5969=Tonyu.iterator(a,1);
          while(_it_5969.next()) {
            e=_it_5969[0];
            
            e.sendUp();
            
          }
        }));
      },
      newListener :function _trc_KeyDownHandler_newListener(keyName,f) {
        "use strict";
        var _this=this;
        var keyCode;
        var a;
        
        keyCode = typeof  keyName==="number"?keyName:Tonyu.globals.$Keys.codes[keyName];
        
        
        if (! f) {
          f=keyName;
          a=_this.handlers.all=_this.handlers.all||[];
          
        } else {
          a=_this.handlers[keyCode]=_this.handlers[keyCode]||[];
          
        }
        a.push(f);
        return {dispose: (function anonymous_1449() {
          var i;
          
          i = a.indexOf(f);
          
          a.splice(i,1);
        })};
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"createEvent":{"nowait":false},"new":{"nowait":false},"newListener":{"nowait":true}},"fields":{"handlers":{},"pressState":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Keys',
  shortName: 'Keys',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Keys_main() {
        "use strict";
        var _this=this;
        var _it_5976;
        
        _this.stats={};
        _this.codes={left: 37,up: 38,right: 39,down: 40,space: 32,enter: 13,shift: 16,ctrl: 17,alt: 18,esc: 27,bs: 8,mouseleft: 1,mouseright: 2,mousewheel: 4};
        _this.preventDefaults={"37": true,"38": true,"39": true,"40": true,"32": true};
        _this.i = 65;
        for (; _this.i<65+26 ; _this.i++) {
          {
            _this.codes[String.fromCharCode(_this.i).toLowerCase()]=_this.i;
          }
        }
        _this.i = 48;
        for (; _this.i<58 ; _this.i++) {
          {
            _this.codes[String.fromCharCode(_this.i)]=_this.i;
          }
        }
        _this.codesRev={};
        _it_5976=Tonyu.iterator(_this.codes,2);
        while(_it_5976.next()) {
          _this.k=_it_5976[0];
          _this.v=_it_5976[1];
          
          _this.codesRev[_this.v]=_this.k;
        }
        if (! $.data(document,"key_event")) {
          _this.bmap = [1,4,2];
          
          $.data(document,"key_event",true);
          $(document).keydown((function anonymous_703(e) {
            
            Tonyu.globals.$Keys.keydown(e);
          }));
          $(document).keyup((function anonymous_752(e) {
            
            Tonyu.globals.$Keys.keyup(e);
          }));
          $(document).mousedown((function anonymous_803(e) {
            
            _this.lastMouseDown=Tonyu.globals.$frameCount;
            Tonyu.globals.$Keys.keydown({keyCode: _this.bmap[e.button]||1});
          }));
          _this.up = (function anonymous_1052(e) {
            var a;
            
            a = (function anonymous_1074() {
              
              Tonyu.globals.$Keys.keyup({keyCode: _this.bmap[e.button]||1});
            });
            
            if (_this.lastMouseDown==Tonyu.globals.$frameCount&&! _this.reservedAction) {
              _this.reservedAction={at: Tonyu.globals.$frameCount+2,action: a};
              
            } else {
              a();
              
            }
          });
          
          $(document).mouseup(_this.up);
          $(document).on("mouseleave",_this.up);
          
        }
      },
      fiber$main :function _trc_Keys_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var _it_5976;
        
        _this.stats={};
        _this.codes={left: 37,up: 38,right: 39,down: 40,space: 32,enter: 13,shift: 16,ctrl: 17,alt: 18,esc: 27,bs: 8,mouseleft: 1,mouseright: 2,mousewheel: 4};
        _this.preventDefaults={"37": true,"38": true,"39": true,"40": true,"32": true};
        _this.i = 65;
        for (; _this.i<65+26 ; _this.i++) {
          {
            _this.codes[String.fromCharCode(_this.i).toLowerCase()]=_this.i;
          }
        }
        _this.i = 48;
        for (; _this.i<58 ; _this.i++) {
          {
            _this.codes[String.fromCharCode(_this.i)]=_this.i;
          }
        }
        _this.codesRev={};
        _it_5976=Tonyu.iterator(_this.codes,2);
        while(_it_5976.next()) {
          _this.k=_it_5976[0];
          _this.v=_it_5976[1];
          
          _this.codesRev[_this.v]=_this.k;
        }
        if (! $.data(document,"key_event")) {
          _this.bmap = [1,4,2];
          
          $.data(document,"key_event",true);
          $(document).keydown((function anonymous_703(e) {
            
            Tonyu.globals.$Keys.keydown(e);
          }));
          $(document).keyup((function anonymous_752(e) {
            
            Tonyu.globals.$Keys.keyup(e);
          }));
          $(document).mousedown((function anonymous_803(e) {
            
            _this.lastMouseDown=Tonyu.globals.$frameCount;
            Tonyu.globals.$Keys.keydown({keyCode: _this.bmap[e.button]||1});
          }));
          _this.up = (function anonymous_1052(e) {
            var a;
            
            a = (function anonymous_1074() {
              
              Tonyu.globals.$Keys.keyup({keyCode: _this.bmap[e.button]||1});
            });
            
            if (_this.lastMouseDown==Tonyu.globals.$frameCount&&! _this.reservedAction) {
              _this.reservedAction={at: Tonyu.globals.$frameCount+2,action: a};
              
            } else {
              a();
              
            }
          });
          
          $(document).mouseup(_this.up);
          $(document).on("mouseleave",_this.up);
          
        }
        
        _thread.retVal=_this;return;
      },
      getkey :function _trc_Keys_getkey(code) {
        "use strict";
        var _this=this;
        
        if (typeof  code=="string") {
          code=_this.codes[code.toLowerCase()];
          
        }
        if (! code) {
          return 0;
        }
        if (_this.stats[code]==- 1) {
          return 0;
        }
        if (! _this.stats[code]) {
          _this.stats[code]=0;
        }
        return _this.stats[code];
      },
      fiber$getkey :function _trc_Keys_f_getkey(_thread,code) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  code=="string") {
          code=_this.codes[code.toLowerCase()];
          
        }
        if (! code) {
          _thread.retVal=0;return;
          
        }
        if (_this.stats[code]==- 1) {
          _thread.retVal=0;return;
          
        }
        if (! _this.stats[code]) {
          _this.stats[code]=0;
        }
        _thread.retVal=_this.stats[code];return;
        
        
        _thread.retVal=_this;return;
      },
      update :function _trc_Keys_update() {
        "use strict";
        var _this=this;
        var i;
        var _it_5983;
        
        _it_5983=Tonyu.iterator(_this.stats,1);
        while(_it_5983.next()) {
          i=_it_5983[0];
          
          if (_this.stats[i]>0) {
            _this.stats[i]++;
            
          }
          if (_this.stats[i]==- 1) {
            _this.stats[i]=1;
          }
          
        }
        if (_this.reservedAction&&_this.reservedAction.at==Tonyu.globals.$frameCount) {
          _this.reservedAction.action();
          _this.reservedAction=null;
          
        }
      },
      fiber$update :function _trc_Keys_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var _it_5983;
        
        _it_5983=Tonyu.iterator(_this.stats,1);
        while(_it_5983.next()) {
          i=_it_5983[0];
          
          if (_this.stats[i]>0) {
            _this.stats[i]++;
            
          }
          if (_this.stats[i]==- 1) {
            _this.stats[i]=1;
          }
          
        }
        if (_this.reservedAction&&_this.reservedAction.at==Tonyu.globals.$frameCount) {
          _this.reservedAction.action();
          _this.reservedAction=null;
          
        }
        
        _thread.retVal=_this;return;
      },
      keydown :function _trc_Keys_keydown(e) {
        "use strict";
        var _this=this;
        var s;
        
        if (_this.preventDefaults[e.keyCode+""]&&e.preventDefault) {
          e.preventDefault();
        }
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        s = _this.stats[e.keyCode];
        
        if (! s) {
          _this.stats[e.keyCode]=1;
          
        }
        Tonyu.globals.$InputDevice.fireEvent("keyDownRaw",e);
        Tonyu.globals.$InputDevice.handleListeners();
      },
      fiber$keydown :function _trc_Keys_f_keydown(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var s;
        
        if (_this.preventDefaults[e.keyCode+""]&&e.preventDefault) {
          e.preventDefault();
        }
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        s = _this.stats[e.keyCode];
        
        if (! s) {
          _this.stats[e.keyCode]=1;
          
        }
        Tonyu.globals.$InputDevice.fireEvent("keyDownRaw",e);
        Tonyu.globals.$InputDevice.handleListeners();
        
        _thread.retVal=_this;return;
      },
      keyup :function _trc_Keys_keyup(e) {
        "use strict";
        var _this=this;
        
        if (_this.preventDefaults[e.keyCode+""]&&e.preventDefault) {
          e.preventDefault();
        }
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        _this.stats[e.keyCode]=0;
        Tonyu.globals.$InputDevice.fireEvent("keyUpRaw",e);
        Tonyu.globals.$InputDevice.handleListeners();
      },
      fiber$keyup :function _trc_Keys_f_keyup(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.preventDefaults[e.keyCode+""]&&e.preventDefault) {
          e.preventDefault();
        }
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        _this.stats[e.keyCode]=0;
        Tonyu.globals.$InputDevice.fireEvent("keyUpRaw",e);
        Tonyu.globals.$InputDevice.handleListeners();
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getkey":{"nowait":false},"update":{"nowait":false},"keydown":{"nowait":false},"keyup":{"nowait":false}},"fields":{"i":{},"k":{},"v":{},"bmap":{},"up":{},"stats":{},"codes":{},"preventDefaults":{},"codesRev":{},"lastMouseDown":{},"reservedAction":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.TouchFinger',
  shortName: 'TouchFinger',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_TouchFinger_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
      },
      fiber$main :function _trc_TouchFinger_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_TouchFinger_initialize(layer,screen,index) {
        "use strict";
        var _this=this;
        
        _this.reset();
        _this._layer=layer;
        Tonyu.classes.kernel.TouchFinger.seq=Tonyu.classes.kernel.TouchFinger.seq||0;
        _this.oid=Tonyu.classes.kernel.TouchFinger.seq++;
        _this.screen=screen||Tonyu.globals.$Screen;
        _this.index=index;
      },
      reset :function _trc_TouchFinger_reset() {
        "use strict";
        var _this=this;
        
        _this.identifier=- 1;
        _this.px=_this.py=0;
        _this.x=_this.y=_this.vx=_this.vy=_this.touched=0;
        _this.ended=false;
      },
      fiber$reset :function _trc_TouchFinger_f_reset(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.identifier=- 1;
        _this.px=_this.py=0;
        _this.x=_this.y=_this.vx=_this.vy=_this.touched=0;
        _this.ended=false;
        
        _thread.retVal=_this;return;
      },
      __getter__layer :function _trc_TouchFinger___getter__layer() {
        "use strict";
        var _this=this;
        
        return _this._layer;
      },
      __setter__layer :function _trc_TouchFinger___setter__layer(toLayer) {
        "use strict";
        var _this=this;
        var p;
        
        if (_this._layer===toLayer) {
          return _this;
        }
        p = _this.screen.convert(_this,toLayer);
        
        if (! p) {
          console.log("Screen convert failed",_this.screen,_this,toLayer,p);
          throw new Error("Screen convert failed");
          
          
        }
        _this.x=p.x;
        _this.y=p.y;
        _this.px=_this.x;
        _this.py=_this.y;
        _this._layer=p.layer;
        _this.vx=_this.vy=0;
      },
      update :function _trc_TouchFinger_update() {
        "use strict";
        var _this=this;
        
        if (_this.touched>0) {
          _this.touched++;
          
        } else {
          if (_this.touched==- 1) {
            _this.touched=1;
          } else {
            
            
          }
        }
        if (_this.touched>0) {
          if (typeof  _this.px=="number") {
            _this.vx=_this.x-_this.px||0;
            _this.vy=_this.y-_this.py||0;
            
          }
          _this.px=_this.x;
          _this.py=_this.y;
          
        }
      },
      fiber$update :function _trc_TouchFinger_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.touched>0) {
          _this.touched++;
          
        } else {
          if (_this.touched==- 1) {
            _this.touched=1;
          } else {
            
            
          }
        }
        if (_this.touched>0) {
          if (typeof  _this.px=="number") {
            _this.vx=_this.x-_this.px||0;
            _this.vy=_this.y-_this.py||0;
            
          }
          _this.px=_this.x;
          _this.py=_this.y;
          
        }
        
        _thread.retVal=_this;return;
      },
      show :function _trc_TouchFinger_show() {
        "use strict";
        var _this=this;
        
        return "["+_this.oid+":"+_this.floor(_this.x*100)/100+","+_this.floor(_this.px*100)/100+"]";
      },
      fiber$show :function _trc_TouchFinger_f_show(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal="["+_this.oid+":"+_this.floor(_this.x*100)/100+","+_this.floor(_this.px*100)/100+"]";return;
        
        
        _thread.retVal=_this;return;
      },
      doStart :function _trc_TouchFinger_doStart(id,point) {
        "use strict";
        var _this=this;
        
        _this.identifier=id;
        _this.px=_this.x=point.x;
        _this.py=_this.y=point.y;
        _this._layer=point.layer;
        _this.vx=_this.vy=0;
        _this.touched=1;
        _this.ended=false;
        if (_this.bound) {
          _this.bound.doStart(id,point);
          
        }
      },
      fiber$doStart :function _trc_TouchFinger_f_doStart(_thread,id,point) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.identifier=id;
        _this.px=_this.x=point.x;
        _this.py=_this.y=point.y;
        _this._layer=point.layer;
        _this.vx=_this.vy=0;
        _this.touched=1;
        _this.ended=false;
        if (_this.bound) {
          _this.bound.doStart(id,point);
          
        }
        
        _thread.retVal=_this;return;
      },
      doMove :function _trc_TouchFinger_doMove(point) {
        "use strict";
        var _this=this;
        var p;
        var px;
        var py;
        var e;
        
        p = _this.screen.convert(point,_this.layer);
        
        px = _this.x;
        py = _this.y;
        
        _this.x=p.x;
        _this.y=p.y;
        if (_this.bound) {
          _this.bound.doMove(p);
          
        }
        e = {px: px,py: py,x: _this.x,y: _this.y,vx: _this.x-px,vy: _this.y-py,finger: _this};
        
        _this.fireEvent("move",e);
      },
      fiber$doMove :function _trc_TouchFinger_f_doMove(_thread,point) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        var px;
        var py;
        var e;
        
        p = _this.screen.convert(point,_this.layer);
        
        px = _this.x;
        py = _this.y;
        
        _this.x=p.x;
        _this.y=p.y;
        if (_this.bound) {
          _this.bound.doMove(p);
          
        }
        e = {px: px,py: py,x: _this.x,y: _this.y,vx: _this.x-px,vy: _this.y-py,finger: _this};
        
        _this.fireEvent("move",e);
        
        _thread.retVal=_this;return;
      },
      doEnd :function _trc_TouchFinger_doEnd() {
        "use strict";
        var _this=this;
        
        _this.vx=_this.vy=_this.touched=0;
        _this.ended=true;
        if (_this.bound) {
          _this.bound.doEnd();
          delete _this.bound;
          
        }
        _this.fireEvent("end",{finger: _this,x: _this.x,y: _this.y});
      },
      fiber$doEnd :function _trc_TouchFinger_f_doEnd(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.vx=_this.vy=_this.touched=0;
        _this.ended=true;
        if (_this.bound) {
          _this.bound.doEnd();
          delete _this.bound;
          
        }
        _this.fireEvent("end",{finger: _this,x: _this.x,y: _this.y});
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"reset":{"nowait":false},"__getter__layer":{"nowait":true},"__setter__layer":{"nowait":true},"update":{"nowait":false},"show":{"nowait":false},"doStart":{"nowait":false},"doMove":{"nowait":false},"doEnd":{"nowait":false}},"fields":{"identifier":{},"index":{},"oid":{},"bound":{},"px":{},"py":{},"x":{},"y":{},"vx":{},"vy":{},"touched":{},"ended":{},"screen":{},"_layer":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.TouchFingers',
  shortName: 'TouchFingers',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_TouchFingers_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_TouchFingers_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_TouchFingers_initialize(dev) {
        "use strict";
        var _this=this;
        var i;
        
        _this.inputDevice=dev;
        _this.fingerSet={};
        _this.fingerArray=[];
        _this.fingerArray.findById=(function anonymous_202(id) {
          
          return _this.fingerSet[id];
        });
        _this.fingerArray.findWithin=(function anonymous_277(o,d) {
          var j;
          var t;
          var _it_5996;
          
          _it_5996=Tonyu.iterator(_this.fingerSet,2);
          while(_it_5996.next()) {
            j=_it_5996[0];
            t=_it_5996[1];
            
            if (o.within(t,d)) {
              return t;
              
            }
            
          }
        });
        _this.fingerArray.findTouch=(function anonymous_454(f) {
          var j;
          var t;
          var _it_6001;
          
          _it_6001=Tonyu.iterator(_this.fingerSet,2);
          while(_it_6001.next()) {
            j=_it_6001[0];
            t=_it_6001[1];
            
            if (f(t)) {
              return t;
              
            }
            
          }
        });
        i = 0;
        for (; i<5 ; i++) {
          _this.fingerArray.push(new Tonyu.classes.kernel.TouchFinger(_this.inputDevice.defaultLayer,Tonyu.globals.$Screen,i));
        }
      },
      handleStart :function _trc_TouchFingers_handleStart(e) {
        "use strict";
        var _this=this;
        var p;
        var ts;
        var dst;
        var i;
        var src;
        var j;
        var mp;
        
        Tonyu.resetLoopCheck();
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        p = _this.inputDevice.rootCanvas.offset();
        
        e.preventDefault();
        ts = e.originalEvent.changedTouches;
        
        
        i = 0;
        for (; i<ts.length ; i++) {
          {
            src = ts[i];
            
            dst=new Tonyu.classes.kernel.TouchFinger(_this.inputDevice.defaultLayer,Tonyu.globals.$Screen);
            _this.fingerSet[src.identifier]=dst;
            j = 0;
            for (; j<_this.fingerArray.length ; j++) {
              {
                if (! _this.fingerArray[j].touched) {
                  dst.bound=_this.fingerArray[j];
                  break;
                  
                  
                }
              }
            }
            mp = {x: src.pageX-p.left,y: src.pageY-p.top,layer: Tonyu.globals.$Screen.layer};
            
            mp=Tonyu.globals.$Screen.convert(mp,_this.inputDevice.defaultLayer);
            dst.doStart(src.identifier,mp);
          }
        }
        Tonyu.globals.$mouseX=_this.fingerArray[0].x;
        Tonyu.globals.$mouseY=_this.fingerArray[0].y;
        _this.inputDevice.handleListeners("touchstart",{byMouse: e.byMouse,finger: dst,index: dst.bound&&dst.bound.index});
      },
      fiber$handleStart :function _trc_TouchFingers_f_handleStart(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        var ts;
        var dst;
        var i;
        var src;
        var j;
        var mp;
        
        Tonyu.resetLoopCheck();
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        p = _this.inputDevice.rootCanvas.offset();
        
        e.preventDefault();
        ts = e.originalEvent.changedTouches;
        
        
        i = 0;
        for (; i<ts.length ; i++) {
          {
            src = ts[i];
            
            dst=new Tonyu.classes.kernel.TouchFinger(_this.inputDevice.defaultLayer,Tonyu.globals.$Screen);
            _this.fingerSet[src.identifier]=dst;
            j = 0;
            for (; j<_this.fingerArray.length ; j++) {
              {
                if (! _this.fingerArray[j].touched) {
                  dst.bound=_this.fingerArray[j];
                  break;
                  
                  
                }
              }
            }
            mp = {x: src.pageX-p.left,y: src.pageY-p.top,layer: Tonyu.globals.$Screen.layer};
            
            mp=Tonyu.globals.$Screen.convert(mp,_this.inputDevice.defaultLayer);
            dst.doStart(src.identifier,mp);
          }
        }
        Tonyu.globals.$mouseX=_this.fingerArray[0].x;
        Tonyu.globals.$mouseY=_this.fingerArray[0].y;
        _this.inputDevice.handleListeners("touchstart",{byMouse: e.byMouse,finger: dst,index: dst.bound&&dst.bound.index});
        
        _thread.retVal=_this;return;
      },
      handleMove :function _trc_TouchFingers_handleMove(e) {
        "use strict";
        var _this=this;
        var p;
        var ts;
        var dst;
        var i;
        var src;
        
        Tonyu.resetLoopCheck();
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        p = _this.inputDevice.rootCanvas.offset();
        
        e.preventDefault();
        ts = e.originalEvent.changedTouches;
        
        
        i = 0;
        for (; i<ts.length ; i++) {
          {
            src = ts[i];
            
            dst = _this.fingerSet[src.identifier];
            
            if (dst) {
              _this.mp={x: src.pageX-p.left,y: src.pageY-p.top,layer: Tonyu.globals.$Screen.layer};
              dst.doMove(_this.mp);
              _this.inputDevice.handleListeners("touchmove",{byMouse: e.byMouse,finger: dst,index: dst.bound&&dst.bound.index});
              
            }
          }
        }
        Tonyu.globals.$mouseX=_this.fingerArray[0].x;
        Tonyu.globals.$mouseY=_this.fingerArray[0].y;
      },
      fiber$handleMove :function _trc_TouchFingers_f_handleMove(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        var ts;
        var dst;
        var i;
        var src;
        
        Tonyu.resetLoopCheck();
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        p = _this.inputDevice.rootCanvas.offset();
        
        e.preventDefault();
        ts = e.originalEvent.changedTouches;
        
        
        i = 0;
        for (; i<ts.length ; i++) {
          {
            src = ts[i];
            
            dst = _this.fingerSet[src.identifier];
            
            if (dst) {
              _this.mp={x: src.pageX-p.left,y: src.pageY-p.top,layer: Tonyu.globals.$Screen.layer};
              dst.doMove(_this.mp);
              _this.inputDevice.handleListeners("touchmove",{byMouse: e.byMouse,finger: dst,index: dst.bound&&dst.bound.index});
              
            }
          }
        }
        Tonyu.globals.$mouseX=_this.fingerArray[0].x;
        Tonyu.globals.$mouseY=_this.fingerArray[0].y;
        
        _thread.retVal=_this;return;
      },
      handleEnd :function _trc_TouchFingers_handleEnd(e) {
        "use strict";
        var _this=this;
        var ts;
        var i;
        var src;
        var dst;
        
        Tonyu.resetLoopCheck();
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        ts = e.originalEvent.changedTouches;
        
        i = 0;
        for (; i<ts.length ; i++) {
          {
            src = ts[i];
            
            dst = _this.fingerSet[src.identifier];
            
            if (dst) {
              delete _this.fingerSet[src.identifier];
              dst.doEnd();
              _this.inputDevice.handleListeners("touchend",{byMouse: e.byMouse,finger: dst,index: dst.bound&&dst.bound.index});
              
            }
          }
        }
      },
      fiber$handleEnd :function _trc_TouchFingers_f_handleEnd(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ts;
        var i;
        var src;
        var dst;
        
        Tonyu.resetLoopCheck();
        if (Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib.activate();
        }
        ts = e.originalEvent.changedTouches;
        
        i = 0;
        for (; i<ts.length ; i++) {
          {
            src = ts[i];
            
            dst = _this.fingerSet[src.identifier];
            
            if (dst) {
              delete _this.fingerSet[src.identifier];
              dst.doEnd();
              _this.inputDevice.handleListeners("touchend",{byMouse: e.byMouse,finger: dst,index: dst.bound&&dst.bound.index});
              
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      unsetEmu :function _trc_TouchFingers_unsetEmu(ID_MOUSE) {
        "use strict";
        var _this=this;
        var t;
        var _it_6021;
        var i;
        var _it_6022;
        
        _it_6021=Tonyu.iterator(_this.fingerArray,1);
        while(_it_6021.next()) {
          t=_it_6021[0];
          
          if (t.identifier==ID_MOUSE) {
            t.reset();
            
          }
          
        }
        _it_6022=Tonyu.iterator(_this.fingerSet,2);
        while(_it_6022.next()) {
          i=_it_6022[0];
          t=_it_6022[1];
          
          if (t.identifier==ID_MOUSE) {
            t.reset();
            
          }
          
        }
      },
      fiber$unsetEmu :function _trc_TouchFingers_f_unsetEmu(_thread,ID_MOUSE) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        var _it_6021;
        var i;
        var _it_6022;
        
        _it_6021=Tonyu.iterator(_this.fingerArray,1);
        while(_it_6021.next()) {
          t=_it_6021[0];
          
          if (t.identifier==ID_MOUSE) {
            t.reset();
            
          }
          
        }
        _it_6022=Tonyu.iterator(_this.fingerSet,2);
        while(_it_6022.next()) {
          i=_it_6022[0];
          t=_it_6022[1];
          
          if (t.identifier==ID_MOUSE) {
            t.reset();
            
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      updateFingers :function _trc_TouchFingers_updateFingers() {
        "use strict";
        var _this=this;
        var t;
        var _it_6027;
        var i;
        var _it_6028;
        
        _it_6027=Tonyu.iterator(_this.fingerArray,1);
        while(_it_6027.next()) {
          t=_it_6027[0];
          
          t.update();
          
        }
        _it_6028=Tonyu.iterator(_this.fingerSet,2);
        while(_it_6028.next()) {
          i=_it_6028[0];
          t=_it_6028[1];
          
          t.update();
          
        }
      },
      fiber$updateFingers :function _trc_TouchFingers_f_updateFingers(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        var _it_6027;
        var i;
        var _it_6028;
        
        _it_6027=Tonyu.iterator(_this.fingerArray,1);
        while(_it_6027.next()) {
          t=_it_6027[0];
          
          t.update();
          
        }
        _it_6028=Tonyu.iterator(_this.fingerSet,2);
        while(_it_6028.next()) {
          i=_it_6028[0];
          t=_it_6028[1];
          
          t.update();
          
        }
        
        _thread.retVal=_this;return;
      },
      reset :function _trc_TouchFingers_reset() {
        "use strict";
        var _this=this;
        var t;
        var _it_6033;
        
        _it_6033=Tonyu.iterator(_this.fingerArray,1);
        while(_it_6033.next()) {
          t=_it_6033[0];
          
          t.reset();
          
        }
      },
      fiber$reset :function _trc_TouchFingers_f_reset(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        var _it_6033;
        
        _it_6033=Tonyu.iterator(_this.fingerArray,1);
        while(_it_6033.next()) {
          t=_it_6033[0];
          
          t.reset();
          
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"handleStart":{"nowait":false},"handleMove":{"nowait":false},"handleEnd":{"nowait":false},"unsetEmu":{"nowait":false},"updateFingers":{"nowait":false},"reset":{"nowait":false}},"fields":{"inputDevice":{},"fingerSet":{},"fingerArray":{},"mp":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.LifeCycleMod',
  shortName: 'LifeCycleMod',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.EventHandlerCaller,Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.ThreadGroupMod],
  methods: function (__superClass) {
    return {
      main :function _trc_LifeCycleMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_LifeCycleMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      hide :function _trc_LifeCycleMod_hide() {
        "use strict";
        var _this=this;
        
        if (Tonyu.is(_this.layer,Tonyu.classes.kernel.SpriteGroup)) {
          _this.layer.remove(_this);
          
        } else {
          if (Tonyu.is(_this.__addedToSprites,Tonyu.classes.kernel.SpriteGroup)) {
            _this.__addedToSprites.remove(_this);
            
          } else {
            
            
          }
        }
      },
      show :function _trc_LifeCycleMod_show(x,y,p) {
        "use strict";
        var _this=this;
        
        _this.layer.add(_this);
        if (x!=null) {
          _this.x=x;
        }
        if (y!=null) {
          _this.y=y;
        }
        if (p!=null) {
          _this.p=p;
        }
      },
      die :function _trc_LifeCycleMod_die() {
        "use strict";
        var _this=this;
        
        _this.killThreadGroup();
        _this.hide();
        if (! _this._isDead) {
          _this.fireEvent("die");
          _this._isDead=true;
          if (_this._poolArray) {
            _this._poolArray.push(_this);
            _this.objectPoolAge=(_this.objectPoolAge||0)+1;
            
          }
          
        }
      },
      __setter__lifeKeeper :function _trc_LifeCycleMod___setter__lifeKeeper(v) {
        "use strict";
        var _this=this;
        
        _this._lifeKeeper=v;
        if (v&&typeof  v.on==="function") {
          v.on("die",Tonyu.bindFunc(_this,_this.die));
          
        }
      },
      __getter__lifeKeeper :function _trc_LifeCycleMod___getter__lifeKeeper() {
        "use strict";
        var _this=this;
        
        return _this._lifeKeeper;
      },
      isDead :function _trc_LifeCycleMod_isDead() {
        "use strict";
        var _this=this;
        
        return _this._isDead;
      },
      __setter__useObjectPool :function _trc_LifeCycleMod___setter__useObjectPool(value) {
        "use strict";
        var _this=this;
        
        if (value) {
          _this._poolArray=Tonyu.globals.$ObjectPool.poolList(_this.getClassInfo().fullName);
          
        }
      },
      appear :function _trc_LifeCycleMod_appear(o,param) {
        "use strict";
        var _this=this;
        var p;
        var k;
        var _it_6036;
        
        if (typeof  o=="function") {
          if (param) {
            param.layer=param.layer||_this.layer;
            
          }
          p = Tonyu.globals.$ObjectPool.withdraw(o.meta.fullName);
          
          if (p) {
            _it_6036=Tonyu.iterator(Object.keys(p),1);
            while(_it_6036.next()) {
              k=_it_6036[0];
              
              if (k!="objectPoolAge") {
                delete p[k];
              }
              
            }
            o.call(p,param);
            return p;
            
          } else {
            return new o(param);
            
          }
          
        } else {
          return o;
          
        }
      },
      fiber$appear :function _trc_LifeCycleMod_f_appear(_thread,o,param) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        var k;
        var _it_6036;
        
        if (typeof  o=="function") {
          if (param) {
            param.layer=param.layer||_this.layer;
            
          }
          p = Tonyu.globals.$ObjectPool.withdraw(o.meta.fullName);
          
          if (p) {
            _it_6036=Tonyu.iterator(Object.keys(p),1);
            while(_it_6036.next()) {
              k=_it_6036[0];
              
              if (k!="objectPoolAge") {
                delete p[k];
              }
              
            }
            o.call(p,param);
            _thread.retVal=p;return;
            
            
          } else {
            _thread.retVal=new o(param);return;
            
            
          }
          
        } else {
          _thread.retVal=o;return;
          
          
        }
        
        _thread.retVal=_this;return;
      },
      getSpriteGroup :function _trc_LifeCycleMod_getSpriteGroup() {
        "use strict";
        var _this=this;
        
        if (Tonyu.is(_this.__addedToSprites,Tonyu.classes.kernel.SpriteGroup)) {
          return _this.__addedToSprites;
          
        }
        if (Tonyu.is(_this.layer,Tonyu.classes.kernel.SpriteGroup)) {
          return _this.layer;
          
        }
        return null;
      },
      fiber$getSpriteGroup :function _trc_LifeCycleMod_f_getSpriteGroup(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (Tonyu.is(_this.__addedToSprites,Tonyu.classes.kernel.SpriteGroup)) {
          _thread.retVal=_this.__addedToSprites;return;
          
          
        }
        if (Tonyu.is(_this.layer,Tonyu.classes.kernel.SpriteGroup)) {
          _thread.retVal=_this.layer;return;
          
          
        }
        _thread.retVal=null;return;
        
        
        _thread.retVal=_this;return;
      },
      addToLayer :function _trc_LifeCycleMod_addToLayer() {
        "use strict";
        var _this=this;
        
        if (_this.layer&&typeof  _this.layer.addSubsprite==="function") {
          _this.layer.addSubsprite(_this);
          
        } else {
          if (Tonyu.is(_this.layer,Tonyu.classes.kernel.SpriteGroup)) {
            _this.layer.add(_this);
            
          } else {
            if (Tonyu.is(_this.layer,Tonyu.classes.kernel.ScreenLayer)) {
              _this.layer.group.add(_this);
              
            } else {
              Tonyu.globals.$Sprites.add(_this);
              
            }
          }
        }
        _this.onAppear();
      },
      fiber$addToLayer :function _trc_LifeCycleMod_f_addToLayer(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.layer&&typeof  _this.layer.addSubsprite==="function") {
          _this.layer.addSubsprite(_this);
          
        } else {
          if (Tonyu.is(_this.layer,Tonyu.classes.kernel.SpriteGroup)) {
            _this.layer.add(_this);
            
          } else {
            if (Tonyu.is(_this.layer,Tonyu.classes.kernel.ScreenLayer)) {
              _this.layer.group.add(_this);
              
            } else {
              Tonyu.globals.$Sprites.add(_this);
              
            }
          }
        }
        
        _thread.enter(function _trc_LifeCycleMod_ent_addToLayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$onAppear(_thread);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      changeLayer :function _trc_LifeCycleMod_changeLayer(l) {
        "use strict";
        var _this=this;
        var curLayer;
        
        if (! l||typeof  l.addSubsprite!=="function") {
          return _this;
        }
        curLayer = _this.getSpriteGroup();
        
        if (curLayer) {
          curLayer.remove(_this);
          
        }
        l.addSubsprite(_this);
        _this.layer=l;
      },
      fiber$changeLayer :function _trc_LifeCycleMod_f_changeLayer(_thread,l) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var curLayer;
        
        if (! l||typeof  l.addSubsprite!=="function") {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_LifeCycleMod_ent_changeLayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getSpriteGroup(_thread);
              __pc=1;return;
            case 1:
              curLayer=_thread.retVal;
              
              if (curLayer) {
                curLayer.remove(_this);
                
              }
              l.addSubsprite(_this);
              _this.layer=l;
              _thread.exit(_this);return;
            }
          }
        });
      },
      onAppear :function _trc_LifeCycleMod_onAppear() {
        "use strict";
        var _this=this;
        
      },
      fiber$onAppear :function _trc_LifeCycleMod_f_onAppear(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"hide":{"nowait":true},"show":{"nowait":true},"die":{"nowait":true},"__setter__lifeKeeper":{"nowait":true},"__getter__lifeKeeper":{"nowait":true},"isDead":{"nowait":true},"__setter__useObjectPool":{"nowait":true},"appear":{"nowait":false},"getSpriteGroup":{"nowait":false},"addToLayer":{"nowait":false},"changeLayer":{"nowait":false},"onAppear":{"nowait":false}},"fields":{"layer":{},"_isDead":{},"_poolArray":{},"objectPoolAge":{},"_lifeKeeper":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Matrix',
  shortName: 'Matrix',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.FileMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Matrix_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Matrix_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Matrix_initialize(d) {
        "use strict";
        var _this=this;
        
        _this.data={}||d;
      },
      fromArray :function _trc_Matrix_fromArray(array) {
        "use strict";
        var _this=this;
        var i;
        var row;
        var _it_6041;
        var j;
        var val;
        var _it_6042;
        
        _it_6041=Tonyu.iterator(array,2);
        while(_it_6041.next()) {
          i=_it_6041[0];
          row=_it_6041[1];
          
          _it_6042=Tonyu.iterator(row,2);
          while(_it_6042.next()) {
            j=_it_6042[0];
            val=_it_6042[1];
            
            _this.set(j,i,val);
            
          }
          
        }
      },
      fiber$fromArray :function _trc_Matrix_f_fromArray(_thread,array) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var row;
        var _it_6041;
        var j;
        var val;
        var _it_6042;
        
        
        _thread.enter(function _trc_Matrix_ent_fromArray(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_6041=Tonyu.iterator(array,2);
            case 1:
              if (!(_it_6041.next())) { __pc=5     ; break; }
              i=_it_6041[0];
              row=_it_6041[1];
              
              _it_6042=Tonyu.iterator(row,2);
            case 2:
              if (!(_it_6042.next())) { __pc=4     ; break; }
              j=_it_6042[0];
              val=_it_6042[1];
              
              _this.fiber$set(_thread, j, i, val);
              __pc=3;return;
            case 3:
              
              __pc=2;break;
            case 4     :
              
              __pc=1;break;
            case 5     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      toArray :function _trc_Matrix_toArray() {
        "use strict";
        var _this=this;
        var res;
        var i;
        var row;
        var j;
        
        res = [];
        
        i = 0;
        for (; i<=_this.ymax ; i++) {
          {
            row = [];
            
            res.push(row);
            j = 0;
            for (; j<=_this.xmax ; j++) {
              {
                row.push(_this.get(j,i));
              }
            }
          }
        }
        return res;
      },
      fiber$toArray :function _trc_Matrix_f_toArray(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var i;
        var row;
        var j;
        
        res = [];
        
        i = 0;
        for (; i<=_this.ymax ; i++) {
          {
            row = [];
            
            res.push(row);
            j = 0;
            for (; j<=_this.xmax ; j++) {
              {
                row.push(_this.get(j,i));
              }
            }
          }
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      load :function _trc_Matrix_load(csvFile) {
        "use strict";
        var _this=this;
        var f;
        var x;
        var y;
        var SEP;
        var lines;
        var l;
        var _it_6053;
        var _it_6054;
        
        f = _this.file(csvFile);
        
        x = 0;
        y = 0;
        
        SEP = ",";
        
        lines = f.lines();
        
        _it_6053=Tonyu.iterator(lines,1);
        while(_it_6053.next()) {
          l=_it_6053[0];
          
          _this.row=l.split(SEP);
          x=0;
          _it_6054=Tonyu.iterator(_this.row,1);
          while(_it_6054.next()) {
            _this.cell=_it_6054[0];
            
            _this.set(x,y,_this.cell);
            x++;
            
          }
          y++;
          
        }
      },
      fiber$load :function _trc_Matrix_f_load(_thread,csvFile) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var f;
        var x;
        var y;
        var SEP;
        var lines;
        var l;
        var _it_6053;
        var _it_6054;
        
        
        _thread.enter(function _trc_Matrix_ent_load(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$file(_thread, csvFile);
              __pc=1;return;
            case 1:
              f=_thread.retVal;
              
              x = 0;
              y = 0;
              
              SEP = ",";
              
              lines = f.lines();
              
              _it_6053=Tonyu.iterator(lines,1);
            case 2:
              if (!(_it_6053.next())) { __pc=6     ; break; }
              l=_it_6053[0];
              
              _this.row=l.split(SEP);
              x=0;
              _it_6054=Tonyu.iterator(_this.row,1);
            case 3:
              if (!(_it_6054.next())) { __pc=5     ; break; }
              _this.cell=_it_6054[0];
              
              _this.fiber$set(_thread, x, y, _this.cell);
              __pc=4;return;
            case 4:
              
              x++;
              __pc=3;break;
            case 5     :
              
              y++;
              __pc=2;break;
            case 6     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      cross :function _trc_Matrix_cross(col,row) {
        "use strict";
        var _this=this;
        var colr;
        var rowr;
        
        colr = _this.find(col);
        
        rowr = _this.find(row);
        
        return _this.get(colr.x,rowr.y);
      },
      fiber$cross :function _trc_Matrix_f_cross(_thread,col,row) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var colr;
        var rowr;
        
        
        _thread.enter(function _trc_Matrix_ent_cross(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$find(_thread, col);
              __pc=1;return;
            case 1:
              colr=_thread.retVal;
              
              _this.fiber$find(_thread, row);
              __pc=2;return;
            case 2:
              rowr=_thread.retVal;
              
              _this.fiber$get(_thread, colr.x, rowr.y);
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      search :function _trc_Matrix_search(cell,options) {
        "use strict";
        var _this=this;
        var k;
        var v;
        var _it_6065;
        
        _it_6065=Tonyu.iterator(_this.data,2);
        while(_it_6065.next()) {
          k=_it_6065[0];
          v=_it_6065[1];
          
          if (v===cell) {
            return _this.unkey(k);
            
          }
          
        }
      },
      fiber$search :function _trc_Matrix_f_search(_thread,cell,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var k;
        var v;
        var _it_6065;
        
        
        _thread.enter(function _trc_Matrix_ent_search(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_6065=Tonyu.iterator(_this.data,2);
            case 1:
              if (!(_it_6065.next())) { __pc=4     ; break; }
              k=_it_6065[0];
              v=_it_6065[1];
              
              if (!(v===cell)) { __pc=3     ; break; }
              _this.fiber$unkey(_thread, k);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
            case 3     :
              
              __pc=1;break;
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      find :function _trc_Matrix_find() {
        "use strict";
        var _this=this;
        var r;
        
        r = Tonyu.bindFunc(_this,_this.search).apply(_this,arguments);
        
        if (r==null) {
          throw new Error(arguments[0]+" not found.");
          
          
        }
        return r;
      },
      fiber$find :function _trc_Matrix_f_find(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        r = Tonyu.bindFunc(_this,_this.search).apply(_this,_arguments);
        
        if (r==null) {
          throw new Error(_arguments[0]+" not found.");
          
          
        }
        _thread.retVal=r;return;
        
        
        _thread.retVal=_this;return;
      },
      crop :function _trc_Matrix_crop() {
        "use strict";
        var _this=this;
        var a;
        var o;
        var r;
        var y;
        var x;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        o = a.parseOptions("left,top,right,bottom,width,height,keepXY");
        
        r = new Tonyu.classes.kernel.Matrix;
        
        if (o.width) {
          o.right=o.left+o.width-1;
        }
        if (o.height) {
          o.bottom=o.top+o.height-1;
        }
        if (o.right==null) {
          o.right=_this.xmax;
        }
        if (o.bottom==null) {
          o.bottom=_this.ymax;
        }
        y = o.top;
        for (; y<=o.bottom ; y++) {
          {
            x = o.left;
            for (; x<=o.right ; x++) {
              {
                if (o.keepXY) {
                  r.set(x,y,_this.get(x,y));
                  
                } else {
                  r.set(x-o.left,y-o.top,_this.get(x,y));
                  
                }
              }
            }
          }
        }
        return r;
      },
      fiber$crop :function _trc_Matrix_f_crop(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var o;
        var r;
        var y;
        var x;
        
        a = new Tonyu.classes.kernel.ArgParser(_arguments);
        
        o = a.parseOptions("left,top,right,bottom,width,height,keepXY");
        
        r = new Tonyu.classes.kernel.Matrix;
        
        if (o.width) {
          o.right=o.left+o.width-1;
        }
        if (o.height) {
          o.bottom=o.top+o.height-1;
        }
        if (o.right==null) {
          o.right=_this.xmax;
        }
        if (o.bottom==null) {
          o.bottom=_this.ymax;
        }
        y = o.top;
        for (; y<=o.bottom ; y++) {
          {
            x = o.left;
            for (; x<=o.right ; x++) {
              {
                if (o.keepXY) {
                  r.set(x,y,_this.get(x,y));
                  
                } else {
                  r.set(x-o.left,y-o.top,_this.get(x,y));
                  
                }
              }
            }
          }
        }
        _thread.retVal=r;return;
        
        
        _thread.retVal=_this;return;
      },
      rev :function _trc_Matrix_rev(line) {
        "use strict";
        var _this=this;
        var res;
        var e;
        var _it_6075;
        
        res = [];
        
        _it_6075=Tonyu.iterator(line,1);
        while(_it_6075.next()) {
          e=_it_6075[0];
          
          res.unshift(e);
          
        }
        return res;
      },
      fiber$rev :function _trc_Matrix_f_rev(_thread,line) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var e;
        var _it_6075;
        
        res = [];
        
        _it_6075=Tonyu.iterator(line,1);
        while(_it_6075.next()) {
          e=_it_6075[0];
          
          res.unshift(e);
          
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      keysIterator :function _trc_Matrix_keysIterator() {
        "use strict";
        var _this=this;
        
        return {tonyuIterator: Tonyu.bindFunc(_this,_this.tonyuIteratorKeys)};
      },
      fiber$keysIterator :function _trc_Matrix_f_keysIterator(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal={tonyuIterator: Tonyu.bindFunc(_this,_this.tonyuIteratorKeys)};return;
        
        
        _thread.retVal=_this;return;
      },
      rectIterator :function _trc_Matrix_rectIterator() {
        "use strict";
        var _this=this;
        
        return {tonyuIterator: Tonyu.bindFunc(_this,_this.tonyuIteratorRect)};
      },
      fiber$rectIterator :function _trc_Matrix_f_rectIterator(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal={tonyuIterator: Tonyu.bindFunc(_this,_this.tonyuIteratorRect)};return;
        
        
        _thread.retVal=_this;return;
      },
      tonyuIteratorKeys :function _trc_Matrix_tonyuIteratorKeys(arity) {
        "use strict";
        var _this=this;
        var res;
        var k;
        var v;
        var _it_6079;
        
        res = {i: 0,keys: []};
        
        _it_6079=Tonyu.iterator(_this.data,2);
        while(_it_6079.next()) {
          k=_it_6079[0];
          v=_it_6079[1];
          
          res.keys.push(k);
          
        }
        switch (arity) {
        case 3:
          res.next=(function anonymous_2367() {
            var key;
            var xy;
            
            if (res.i>=res.keys.length) {
              return false;
            }
            key = res.keys[res.i];
            
            res.i++;
            xy = _this.unkey(key);
            
            res[0]=xy.x;
            res[1]=xy.y;
            res[2]=_this.data[key];
            return true;
          });
          break;
          
        default:
          throw new Error("Matrix: in の前には3つの変数が必要です");
          
        }
        return res;
      },
      fiber$tonyuIteratorKeys :function _trc_Matrix_f_tonyuIteratorKeys(_thread,arity) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var k;
        var v;
        var _it_6079;
        
        res = {i: 0,keys: []};
        
        _it_6079=Tonyu.iterator(_this.data,2);
        while(_it_6079.next()) {
          k=_it_6079[0];
          v=_it_6079[1];
          
          res.keys.push(k);
          
        }
        
        _thread.enter(function _trc_Matrix_ent_tonyuIteratorKeys(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              switch (arity) {
              case 3:
                __pc=1     ;break;
              default:
                __pc=2     ;break;
                
              }
              break;
            case 1     :
              res.next=(function anonymous_2367() {
                var key;
                var xy;
                
                if (res.i>=res.keys.length) {
                  return false;
                }
                key = res.keys[res.i];
                
                res.i++;
                xy = _this.unkey(key);
                
                res[0]=xy.x;
                res[1]=xy.y;
                res[2]=_this.data[key];
                return true;
              });
              __pc=3     ; break;
              
            case 2     :
              throw new Error("Matrix: in の前には3つの変数が必要です");
              
              case 3     :
              
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      tonyuIterator :function _trc_Matrix_tonyuIterator(arity) {
        "use strict";
        var _this=this;
        
        if (_this.iterateMode==="keys") {
          return _this.tonyuIteratorKeys(arity);
        }
        return _this.tonyuIteratorRect(arity);
      },
      fiber$tonyuIterator :function _trc_Matrix_f_tonyuIterator(_thread,arity) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Matrix_ent_tonyuIterator(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.iterateMode==="keys")) { __pc=2     ; break; }
              _this.fiber$tonyuIteratorKeys(_thread, arity);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              _this.fiber$tonyuIteratorRect(_thread, arity);
              __pc=3;return;
            case 3:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      tonyuIteratorRect :function _trc_Matrix_tonyuIteratorRect(arity) {
        "use strict";
        var _this=this;
        var res;
        
        res = {x: _this.xmin,y: _this.ymin,cnt: 0};
        
        if (_this.xmin==null||_this.ymin==null||_this.xmax==null||_this.ymax==null) {
          res.next=(function anonymous_3026() {
            
            return false;
          });
          return res;
          
        }
        switch (arity) {
        case 3:
          res.next=(function anonymous_3128() {
            
            if (res.x>_this.xmax) {
              res.x=_this.xmin;
              res.y++;
              
            }
            if (res.y<=_this.ymax) {
              res[0]=res.x;
              res[1]=res.y;
              res[2]=_this.get(res.x,res.y);
              res.x++;
              return true;
              
            }
            return false;
          });
          break;
          
        default:
          throw new Error("Matrix: in の前には3つの変数が必要です");
          
        }
        return res;
      },
      fiber$tonyuIteratorRect :function _trc_Matrix_f_tonyuIteratorRect(_thread,arity) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        res = {x: _this.xmin,y: _this.ymin,cnt: 0};
        
        if (_this.xmin==null||_this.ymin==null||_this.xmax==null||_this.ymax==null) {
          res.next=(function anonymous_3026() {
            
            return false;
          });
          _thread.retVal=res;return;
          
          
        }
        
        _thread.enter(function _trc_Matrix_ent_tonyuIteratorRect(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              switch (arity) {
              case 3:
                __pc=1     ;break;
              default:
                __pc=2     ;break;
                
              }
              break;
            case 1     :
              res.next=(function anonymous_3128() {
                
                if (res.x>_this.xmax) {
                  res.x=_this.xmin;
                  res.y++;
                  
                }
                if (res.y<=_this.ymax) {
                  res[0]=res.x;
                  res[1]=res.y;
                  res[2]=_this.get(res.x,res.y);
                  res.x++;
                  return true;
                  
                }
                return false;
              });
              __pc=3     ; break;
              
            case 2     :
              throw new Error("Matrix: in の前には3つの変数が必要です");
              
              case 3     :
              
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      unkey :function _trc_Matrix_unkey(key) {
        "use strict";
        var _this=this;
        var r;
        
        r = key.split(",");
        
        return {x: r[0]-0,y: r[1]-0};
      },
      fiber$unkey :function _trc_Matrix_f_unkey(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        r = key.split(",");
        
        _thread.retVal={x: r[0]-0,y: r[1]-0};return;
        
        
        _thread.retVal=_this;return;
      },
      key :function _trc_Matrix_key(x,y,updateRange) {
        "use strict";
        var _this=this;
        
        x=_this.floor(x)||0;
        y=_this.floor(y)||0;
        if (updateRange) {
          if (_this.xmin==null||x<_this.xmin) {
            _this.xmin=x;
          }
          if (_this.xmax==null||x>_this.xmax) {
            _this.xmax=x;
          }
          if (_this.ymin==null||y<_this.ymin) {
            _this.ymin=y;
          }
          if (_this.ymax==null||y>_this.ymax) {
            _this.ymax=y;
          }
          
        }
        return x+","+y;
      },
      fiber$key :function _trc_Matrix_f_key(_thread,x,y,updateRange) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        x=_this.floor(x)||0;
        y=_this.floor(y)||0;
        if (updateRange) {
          if (_this.xmin==null||x<_this.xmin) {
            _this.xmin=x;
          }
          if (_this.xmax==null||x>_this.xmax) {
            _this.xmax=x;
          }
          if (_this.ymin==null||y<_this.ymin) {
            _this.ymin=y;
          }
          if (_this.ymax==null||y>_this.ymax) {
            _this.ymax=y;
          }
          
        }
        _thread.retVal=x+","+y;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__rows :function _trc_Matrix___getter__rows() {
        "use strict";
        var _this=this;
        
        return _this.xmax-_this.xmin+1;
      },
      __getter__cols :function _trc_Matrix___getter__cols() {
        "use strict";
        var _this=this;
        
        return _this.ymax-_this.ymin+1;
      },
      get :function _trc_Matrix_get(x,y) {
        "use strict";
        var _this=this;
        var res;
        var e;
        
        res = _this.data[_this.key(x,y)];
        
        if (res===undefined) {
          e = {set: (function anonymous_4254(v) {
            
            e.value=v;
            _this.set(x,y,v);
          }),x: x,y: y};
          
          _this.sendEvent("newCell",e);
          return e.value;
          
        }
        return res;
      },
      fiber$get :function _trc_Matrix_f_get(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var e;
        
        res = _this.data[_this.key(x,y)];
        
        
        _thread.enter(function _trc_Matrix_ent_get(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(res===undefined)) { __pc=1     ; break; }
              e = {set: (function anonymous_4254(v) {
                
                e.value=v;
                _this.set(x,y,v);
              }),x: x,y: y};
              
              _this.sendEvent("newCell",e);
              _thread.exit(e.value);return;
            case 1     :
              
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      exists :function _trc_Matrix_exists(x,y) {
        "use strict";
        var _this=this;
        
        return _this.data[_this.key(x,y)]!==undefined;
      },
      fiber$exists :function _trc_Matrix_f_exists(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.data[_this.key(x,y)]!==undefined;return;
        
        
        _thread.retVal=_this;return;
      },
      set :function _trc_Matrix_set(x,y,v) {
        "use strict";
        var _this=this;
        var k;
        
        
        if (v===undefined) {
          k=_this.key(x,y);
          if (_this.data[k]===undefined) {
            return v;
          }
          _this.fireEvent("change",{x: x,y: y,value: v});
          delete _this.data[k];
          
        } else {
          k=_this.key(x,y,true);
          if (_this.data[k]===v) {
            return v;
          }
          _this.fireEvent("change",{x: x,y: y,value: v});
          return _this.data[k]=v;
          
        }
      },
      fiber$set :function _trc_Matrix_f_set(_thread,x,y,v) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var k;
        
        
        
        _thread.enter(function _trc_Matrix_ent_set(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(v===undefined)) { __pc=3     ; break; }
              _this.fiber$key(_thread, x, y);
              __pc=1;return;
            case 1:
              k=_thread.retVal;
              
              if (!(_this.data[k]===undefined)) { __pc=2     ; break; }
              _thread.exit(v);return;
            case 2     :
              
              _this.fireEvent("change",{x: x,y: y,value: v});
              delete _this.data[k];
              __pc=6     ;break;
            case 3     :
              _this.fiber$key(_thread, x, y, true);
              __pc=4;return;
            case 4:
              k=_thread.retVal;
              
              if (!(_this.data[k]===v)) { __pc=5     ; break; }
              _thread.exit(v);return;
            case 5     :
              
              _this.fireEvent("change",{x: x,y: y,value: v});
              _thread.exit(_this.data[k]=v);return;
            case 6     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      neighbors :function _trc_Matrix_neighbors(x,y,options) {
        "use strict";
        var _this=this;
        var dirs;
        var res;
        var dir;
        var _it_6092;
        var i;
        var j;
        var r;
        
        options=options||{dirs: _this.neighborDirs};
        options.dirs=options.dirs||_this.neighborDirs||4;
        dirs = [[0,- 1],[1,- 1],[1,0],[1,1],[0,1],[- 1,1],[- 1,0],[- 1,- 1]];
        
        res = [];
        
        _it_6092=Tonyu.iterator(dirs,1);
        while(_it_6092.next()) {
          dir=_it_6092[0];
          
          i = dir[1];
          j = dir[0];
          
          if (i==0&&j==0) {
            continue;
            
          }
          if (options.dirs==4) {
            if (i*j!=0) {
              continue;
              
            }
            
          }
          
          if (_this.exists(x+j,y+i)) {
            r=_this.get(x+j,y+i);
            res.push({x: x+j,y: y+i,ox: j,oy: i,value: r});
            
          } else {
            if (options.includeEmpty) {
              res.push({x: x+j,y: y+i,ox: j,oy: i});
              
            }
          }
          
        }
        return res;
      },
      fiber$neighbors :function _trc_Matrix_f_neighbors(_thread,x,y,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var dirs;
        var res;
        var dir;
        var _it_6092;
        var i;
        var j;
        var r;
        
        options=options||{dirs: _this.neighborDirs};
        options.dirs=options.dirs||_this.neighborDirs||4;
        dirs = [[0,- 1],[1,- 1],[1,0],[1,1],[0,1],[- 1,1],[- 1,0],[- 1,- 1]];
        
        res = [];
        
        
        _thread.enter(function _trc_Matrix_ent_neighbors(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_6092=Tonyu.iterator(dirs,1);
            case 1:
              if (!(_it_6092.next())) { __pc=8     ; break; }
              dir=_it_6092[0];
              
              i = dir[1];
              j = dir[0];
              
              if (!(i==0&&j==0)) { __pc=2     ; break; }
              __pc=1; break;
              
            case 2     :
              
              if (!(options.dirs==4)) { __pc=4     ; break; }
              if (!(i*j!=0)) { __pc=3     ; break; }
              __pc=1; break;
              
            case 3     :
              
            case 4     :
              
              
              if (!(_this.exists(x+j,y+i))) { __pc=6     ; break; }
              _this.fiber$get(_thread, x+j, y+i);
              __pc=5;return;
            case 5:
              r=_thread.retVal;
              
              res.push({x: x+j,y: y+i,ox: j,oy: i,value: r});
              __pc=7     ;break;
            case 6     :
              if (options.includeEmpty) {
                res.push({x: x+j,y: y+i,ox: j,oy: i});
                
              }
            case 7     :
              
              __pc=1;break;
            case 8     :
              
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      fill :function _trc_Matrix_fill(left,top,cols,rows,data) {
        "use strict";
        var _this=this;
        var i;
        var j;
        var d;
        
        data=data||{};
        i = top;
        for (; i<top+rows ; i++) {
          {
            j = left;
            for (; j<left+cols ; j++) {
              {
                d = data;
                
                if (typeof  data==="object") {
                  d=Object.create(data);
                  
                } else {
                  if (typeof  data==="function") {
                    d=data(j,i);
                    
                  }
                }
                _this.set(j,i,d);
              }
            }
          }
        }
      },
      fiber$fill :function _trc_Matrix_f_fill(_thread,left,top,cols,rows,data) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var j;
        var d;
        
        data=data||{};
        
        _thread.enter(function _trc_Matrix_ent_fill(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              i = top;
              
            case 1:
              if (!(i<top+rows)) { __pc=7     ; break; }
              j = left;
              
            case 2:
              if (!(j<left+cols)) { __pc=5     ; break; }
              d = data;
              
              if (typeof  data==="object") {
                d=Object.create(data);
                
              } else {
                if (typeof  data==="function") {
                  d=data(j,i);
                  
                }
              }
              _this.fiber$set(_thread, j, i, d);
              __pc=3;return;
            case 3:
              
            case 4     :
              j++;
              __pc=2;break;
            case 5     :
              
            case 6     :
              i++;
              __pc=1;break;
            case 7     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      pack :function _trc_Matrix_pack() {
        "use strict";
        var _this=this;
        var t;
        var k;
        var v;
        var _it_6103;
        var xy;
        var x;
        var y;
        
        
        t=_this.xmin;
        _this.xmin=_this.xmax;
        _this.xmax=t;
        t=_this.ymin;
        _this.ymin=_this.ymax;
        _this.ymax=t;
        _it_6103=Tonyu.iterator(_this.data,2);
        while(_it_6103.next()) {
          k=_it_6103[0];
          v=_it_6103[1];
          
          xy = _this.unkey(k);
          
          x = xy.x;
          y = xy.y;
          
          if (x<_this.xmin) {
            _this.xmin=x;
            
          }
          if (y<_this.ymin) {
            _this.ymin=y;
            
          }
          if (x>_this.xmax) {
            _this.xmax=x;
            
          }
          if (y>_this.ymax) {
            _this.ymax=y;
            
          }
          
        }
      },
      fiber$pack :function _trc_Matrix_f_pack(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var t;
        var k;
        var v;
        var _it_6103;
        var xy;
        var x;
        var y;
        
        
        t=_this.xmin;
        _this.xmin=_this.xmax;
        _this.xmax=t;
        t=_this.ymin;
        _this.ymin=_this.ymax;
        _this.ymax=t;
        
        _thread.enter(function _trc_Matrix_ent_pack(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_6103=Tonyu.iterator(_this.data,2);
            case 1:
              if (!(_it_6103.next())) { __pc=3     ; break; }
              k=_it_6103[0];
              v=_it_6103[1];
              
              _this.fiber$unkey(_thread, k);
              __pc=2;return;
            case 2:
              xy=_thread.retVal;
              
              x = xy.x;
              y = xy.y;
              
              if (x<_this.xmin) {
                _this.xmin=x;
                
              }
              if (y<_this.ymin) {
                _this.ymin=y;
                
              }
              if (x>_this.xmax) {
                _this.xmax=x;
                
              }
              if (y>_this.ymax) {
                _this.ymax=y;
                
              }
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"fromArray":{"nowait":false},"toArray":{"nowait":false},"load":{"nowait":false},"cross":{"nowait":false},"search":{"nowait":false},"find":{"nowait":false},"crop":{"nowait":false},"rev":{"nowait":false},"keysIterator":{"nowait":false},"rectIterator":{"nowait":false},"tonyuIteratorKeys":{"nowait":false},"tonyuIterator":{"nowait":false},"tonyuIteratorRect":{"nowait":false},"unkey":{"nowait":false},"key":{"nowait":false},"__getter__rows":{"nowait":true},"__getter__cols":{"nowait":true},"get":{"nowait":false},"exists":{"nowait":false},"set":{"nowait":false},"neighbors":{"nowait":false},"fill":{"nowait":false},"pack":{"nowait":false}},"fields":{"data":{},"ymax":{},"xmax":{},"row":{},"cell":{},"iterateMode":{},"xmin":{},"ymin":{},"neighborDirs":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.QueryMod',
  shortName: 'QueryMod',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.SchedulerMod,Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.EventHandlerCaller,Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.LifeCycleMod,Tonyu.classes.kernel.SpriteMod],
  methods: function (__superClass) {
    return {
      main :function _trc_QueryMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_QueryMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      hitTo :function _trc_QueryMod_hitTo(t) {
        "use strict";
        var _this=this;
        
        return _this.crashTo(t);
      },
      all :function _trc_QueryMod_all(c) {
        "use strict";
        var _this=this;
        var res;
        
        res = new Tonyu.classes.kernel.TQuery(_this);
        
        if (arguments.length>0&&typeof  c!="function") {
          return res;
          
        }
        _this.getSpriteGroup().sprites.forEach((function anonymous_516(s) {
          
          if (s===_this) {
            return _this;
          }
          if (! c||s instanceof c) {
            res.push(s);
            
          }
        }));
        return res;
      },
      allCrash :function _trc_QueryMod_allCrash(t) {
        "use strict";
        var _this=this;
        var res;
        var sp;
        var t1;
        
        res = new Tonyu.classes.kernel.TQuery(_this);
        
        sp = _this;
        
        t1 = _this.getCrashShape();
        
        if (! t1) {
          return res;
        }
        _this.getSpriteGroup().sprites.forEach((function anonymous_826(s) {
          var t2;
          
          
          if (s!==_this&&s instanceof t&&(t2=s.getCrashShape())&&t1.intersects(t2)) {
            res.push(s);
            
          }
        }));
        return res;
      },
      getCrashShape :function _trc_QueryMod_getCrashShape() {
        "use strict";
        var _this=this;
        
        throw new Error("getCrashShape::abstract");
        
      },
      fiber$getCrashShape :function _trc_QueryMod_f_getCrashShape(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("getCrashShape::abstract");
        
        
        _thread.retVal=_this;return;
      },
      crashTo :function _trc_QueryMod_crashTo(t) {
        "use strict";
        var _this=this;
        
        if (! t) {
          return false;
        }
        if (typeof  t=="function") {
          return _this.allCrash(t)[0];
          
        }
        return _this.crashTo1(t);
      },
      crashTo1 :function _trc_QueryMod_crashTo1(t) {
        "use strict";
        var _this=this;
        var t1;
        var t2;
        
        if (! t||t._isDead) {
          return false;
        }
        t1 = _this.getCrashShape();
        
        t2 = t.getCrashShape();
        
        return t1&&t1.intersects(t2);
      },
      crashToChecker :function _trc_QueryMod_crashToChecker(d,f) {
        "use strict";
        var _this=this;
        var obj;
        var _it_6120;
        
        while (true) {
          if (typeof  d=="function") {
            _it_6120=Tonyu.iterator(_this.allCrash(d),1);
            while(_it_6120.next()) {
              obj=_it_6120[0];
              
              _this.callEventHandler(f,[obj]);
              
            }
            
          } else {
            if (_this.crashTo(d)) {
              _this.callEventHandler(f,[d]);
              
            }
          }
          _this.update();
          
        }
      },
      fiber$crashToChecker :function _trc_QueryMod_f_crashToChecker(_thread,d,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var obj;
        var _it_6120;
        
        
        _thread.enter(function _trc_QueryMod_ent_crashToChecker(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(typeof  d=="function")) { __pc=5     ; break; }
              _it_6120=Tonyu.iterator(_this.allCrash(d),1);
            case 2:
              if (!(_it_6120.next())) { __pc=4     ; break; }
              obj=_it_6120[0];
              
              _this.fiber$callEventHandler(_thread, f, [obj]);
              __pc=3;return;
            case 3:
              
              __pc=2;break;
            case 4     :
              
              __pc=8     ;break;
            case 5     :
              if (!(_this.crashTo(d))) { __pc=7     ; break; }
              _this.fiber$callEventHandler(_thread, f, [d]);
              __pc=6;return;
            case 6:
              
            case 7     :
              
            case 8     :
              
              _this.fiber$update(_thread);
              __pc=9;return;
            case 9:
              
              __pc=1;break;
            case 10    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      allWithin :function _trc_QueryMod_allWithin(t,distance) {
        "use strict";
        var _this=this;
        var res;
        var sp;
        
        res = new Tonyu.classes.kernel.TQuery(_this);
        
        sp = _this;
        
        if (typeof  t!=="function") {
          throw new Error("allWithinの第一引数はクラスにしてください");
          
        }
        _this.getSpriteGroup().sprites.forEach((function anonymous_1965(s) {
          
          if (s!==_this&&s instanceof t&&_this.dist(s)<distance) {
            res.push(s);
            
          }
        }));
        return res;
      },
      within :function _trc_QueryMod_within(t,distance) {
        "use strict";
        var _this=this;
        
        if (! t) {
          return false;
        }
        if (typeof  t=="function") {
          return _this.allWithin(t,distance)[0];
          
        }
        return _this.within1(t,distance);
      },
      within1 :function _trc_QueryMod_within1(t,distance) {
        "use strict";
        var _this=this;
        
        if (! t||t._isDead) {
          return false;
        }
        if (_this.dist(t)<distance) {
          return t;
          
        }
        return false;
      },
      withinChecker :function _trc_QueryMod_withinChecker(d,r,f) {
        "use strict";
        var _this=this;
        var obj;
        var _it_6126;
        
        while (true) {
          if (typeof  d=="function") {
            _it_6126=Tonyu.iterator(_this.allWithin(d,r),1);
            while(_it_6126.next()) {
              obj=_it_6126[0];
              
              f(obj);
              
            }
            
          } else {
            if (_this.within(d,r)) {
              f(d);
              
            }
          }
          _this.update();
          
        }
      },
      fiber$withinChecker :function _trc_QueryMod_f_withinChecker(_thread,d,r,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var obj;
        var _it_6126;
        
        
        _thread.enter(function _trc_QueryMod_ent_withinChecker(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (typeof  d=="function") {
                _it_6126=Tonyu.iterator(_this.allWithin(d,r),1);
                while(_it_6126.next()) {
                  obj=_it_6126[0];
                  
                  f(obj);
                  
                }
                
              } else {
                if (_this.within(d,r)) {
                  f(d);
                  
                }
              }
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      watchHit :function _trc_QueryMod_watchHit(typeA,typeB,onHit) {
        "use strict";
        var _this=this;
        
        _this.getSpriteGroup().watchHit(typeA,typeB,(function anonymous_2942(a,b) {
          
          onHit.apply(_this,[a,b]);
        }));
      },
      screenOutChecker :function _trc_QueryMod_screenOutChecker(d,f) {
        "use strict";
        var _this=this;
        
        while (true) {
          while (true) {
            if (_this.screenOut()>d) {
              f();
              break;
              
              
            }
            _this.update();
            
          }
          while (true) {
            if (_this.screenOut()<=d) {
              break;
              
              
            }
            _this.update();
            
          }
          _this.update();
          
        }
      },
      fiber$screenOutChecker :function _trc_QueryMod_f_screenOutChecker(_thread,d,f) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_QueryMod_ent_screenOutChecker(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
            case 2:
              if (!(_this.screenOut()>d)) { __pc=3     ; break; }
              f();
              __pc=5     ; break;
              
            case 3     :
              
              _this.fiber$update(_thread);
              __pc=4;return;
            case 4:
              
              __pc=2;break;
            case 5     :
              
            case 6:
              if (!(_this.screenOut()<=d)) { __pc=7     ; break; }
              __pc=9     ; break;
              
            case 7     :
              
              _this.fiber$update(_thread);
              __pc=8;return;
            case 8:
              
              __pc=6;break;
            case 9     :
              
              _this.fiber$update(_thread);
              __pc=10;return;
            case 10:
              
              __pc=1;break;
            case 11    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      screenOut :function _trc_QueryMod_screenOut() {
        "use strict";
        var _this=this;
        
        throw new Error("screenOut::abstract");
        
      },
      fiber$screenOut :function _trc_QueryMod_f_screenOut(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("screenOut::abstract");
        
        
        _thread.retVal=_this;return;
      },
      findEventHandlerClass :function _trc_QueryMod_findEventHandlerClass(type) {
        "use strict";
        var _this=this;
        var eventTypes;
        
        eventTypes = {"screenOut": Tonyu.classes.kernel.ScreenOutHandler,"crashTo": Tonyu.classes.kernel.CrashToHandler,"within": Tonyu.classes.kernel.WithinHandler};
        
        if (eventTypes[type]) {
          return eventTypes[type];
        }
        return __superClass.prototype.findEventHandlerClass.apply( _this, [type]);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"hitTo":{"nowait":true},"all":{"nowait":true},"allCrash":{"nowait":true},"getCrashShape":{"nowait":false},"crashTo":{"nowait":true},"crashTo1":{"nowait":true},"crashToChecker":{"nowait":false},"allWithin":{"nowait":true},"within":{"nowait":true},"within1":{"nowait":true},"withinChecker":{"nowait":false},"watchHit":{"nowait":true},"screenOutChecker":{"nowait":false},"screenOut":{"nowait":false},"findEventHandlerClass":{"nowait":true}},"fields":{"crashScale":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.QueryMod2D',
  shortName: 'QueryMod2D',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.QueryMod,Tonyu.classes.kernel.SpriteMod2D],
  methods: function (__superClass) {
    return {
      main :function _trc_QueryMod2D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_QueryMod2D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      getCrashShape :function _trc_QueryMod2D_getCrashShape() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.RectShape(_this.getCrashRect());
      },
      fiber$getCrashShape :function _trc_QueryMod2D_f_getCrashShape(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.RectShape(_this.getCrashRect());return;
        
        
        _thread.retVal=_this;return;
      },
      dist :function _trc_QueryMod2D_dist(dx,dy,dz) {
        "use strict";
        var _this=this;
        var t;
        
        if (typeof  dx=="object") {
          t = dx;
          
          dx=t.x-_this.x;
          dy=t.y-_this.y;
          dz=0;
          
        }
        return __superClass.prototype.dist.apply( _this, [dx,dy,dz]);
      },
      getCrashRect :function _trc_QueryMod2D_getCrashRect() {
        "use strict";
        var _this=this;
        var scx;
        var scy;
        var r;
        var v;
        var actWidth;
        var actHeight;
        
        if (_this._align&&! _this._align.isOriginPivot) {
          scx = _this.scaleX;
          
          scy = (_this.scaleY==null?_this.scaleX:_this.scaleY);
          
          r = _this._align.getDrawRect({width: (_this.width||_this.radius*2),height: (_this.height||_this.radius*2)});
          
          v = new Tonyu.classes.kernel.Vec3(r.x*scx,r.y*scy);
          
          v.rotateX(_this.rotation).addX(_this.x,_this.y);
          return {x: v.x,y: v.y,width: _this.abs(r.width*scx*_this.crashScale),height: _this.abs(r.height*scy*_this.crashScale)};
          
        }
        actWidth = (_this.width||_this.radius*2)*_this.scaleX*_this.crashScale;
        
        if (typeof  _this.scaleY==="undefined") {
          actHeight=(_this.height||_this.radius*2)*_this.scaleX*_this.crashScale;
          
        } else {
          actHeight=(_this.height||_this.radius*2)*_this.scaleY*_this.crashScale;
          
        }
        return typeof  _this.x=="number"&&typeof  _this.y=="number"&&typeof  actWidth=="number"&&typeof  actHeight=="number"&&{x: _this.x,y: _this.y,width: Math.abs(actWidth),height: Math.abs(actHeight)};
      },
      getTouchShape :function _trc_QueryMod2D_getTouchShape() {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.RectShape(_this.getTouchRect());
      },
      fiber$getTouchShape :function _trc_QueryMod2D_f_getTouchShape(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.RectShape(_this.getTouchRect());return;
        
        
        _thread.retVal=_this;return;
      },
      getTouchRect :function _trc_QueryMod2D_getTouchRect(scale) {
        "use strict";
        var _this=this;
        
        return _this.getCrashRect();
      },
      fiber$getTouchRect :function _trc_QueryMod2D_f_getTouchRect(_thread,scale) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.getCrashRect();return;
        
        
        _thread.retVal=_this;return;
      },
      screenOut :function _trc_QueryMod2D_screenOut(a) {
        "use strict";
        var _this=this;
        var cp;
        
        if (! a) {
          a=0;
        }
        cp = Tonyu.globals.$Screen.convert(_this,Tonyu.globals.$Screen);
        
        return _this.abs(_this.clamped(cp.x,- a,Tonyu.globals.$screenWidth+a))+_this.abs(_this.clamped(cp.y,- a,Tonyu.globals.$screenHeight+a));
      },
      fiber$screenOut :function _trc_QueryMod2D_f_screenOut(_thread,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cp;
        
        if (! a) {
          a=0;
        }
        cp = Tonyu.globals.$Screen.convert(_this,Tonyu.globals.$Screen);
        
        _thread.retVal=_this.abs(_this.clamped(cp.x,- a,Tonyu.globals.$screenWidth+a))+_this.abs(_this.clamped(cp.y,- a,Tonyu.globals.$screenHeight+a));return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getCrashShape":{"nowait":false},"dist":{"nowait":true},"getCrashRect":{"nowait":true},"getTouchShape":{"nowait":false},"getTouchRect":{"nowait":false},"screenOut":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.QueryMod3D',
  shortName: 'QueryMod3D',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.QueryMod,Tonyu.classes.kernel.SpriteMod3D],
  methods: function (__superClass) {
    return {
      main :function _trc_QueryMod3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_QueryMod3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      dist :function _trc_QueryMod3D_dist(dx,dy,dz) {
        "use strict";
        var _this=this;
        var t;
        
        if (typeof  dx=="object") {
          t = dx;
          
          dx=t.x-_this.x;
          dy=t.y-_this.y;
          dz=t.z-_this.z;
          
        }
        return __superClass.prototype.dist.apply( _this, [dx,dy,dz]);
      },
      getCrashShape :function _trc_QueryMod3D_getCrashShape() {
        "use strict";
        var _this=this;
        var actWidth;
        var actHeight;
        
        actWidth = (_this.width||_this.radius*2)*_this.scaleX*_this.crashScale;
        
        if (typeof  _this.scaleY==="undefined") {
          actHeight=(_this.height||_this.radius*2)*_this.scaleX*_this.crashScale;
          
        } else {
          actHeight=(_this.height||_this.radius*2)*_this.scaleY*_this.crashScale;
          
        }
        return typeof  _this.x=="number"&&typeof  _this.y=="number"&&typeof  actWidth=="number"&&typeof  actHeight=="number"&&new Tonyu.classes.kernel.CubeShape({x: _this.x,y: _this.y,z: _this.z,width: Math.abs(actWidth),height: Math.abs(actHeight),depth: (Math.abs(actWidth)+Math.abs(actHeight))/2});
      },
      fiber$getCrashShape :function _trc_QueryMod3D_f_getCrashShape(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var actWidth;
        var actHeight;
        
        actWidth = (_this.width||_this.radius*2)*_this.scaleX*_this.crashScale;
        
        if (typeof  _this.scaleY==="undefined") {
          actHeight=(_this.height||_this.radius*2)*_this.scaleX*_this.crashScale;
          
        } else {
          actHeight=(_this.height||_this.radius*2)*_this.scaleY*_this.crashScale;
          
        }
        _thread.retVal=typeof  _this.x=="number"&&typeof  _this.y=="number"&&typeof  actWidth=="number"&&typeof  actHeight=="number"&&new Tonyu.classes.kernel.CubeShape({x: _this.x,y: _this.y,z: _this.z,width: Math.abs(actWidth),height: Math.abs(actHeight),depth: (Math.abs(actWidth)+Math.abs(actHeight))/2});return;
        
        
        _thread.retVal=_this;return;
      },
      screenOut :function _trc_QueryMod3D_screenOut(a) {
        "use strict";
        var _this=this;
        var cp;
        
        if (! a) {
          a=0;
        }
        return false;
        cp = Tonyu.globals.$Screen.convert(_this,Tonyu.globals.$Screen);
        
        return _this.abs(_this.clamped(cp.x,- a,Tonyu.globals.$screenWidth+a))+_this.abs(_this.clamped(cp.y,- a,Tonyu.globals.$screenHeight+a));
      },
      fiber$screenOut :function _trc_QueryMod3D_f_screenOut(_thread,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cp;
        
        if (! a) {
          a=0;
        }
        _thread.retVal=false;return;
        
        cp = Tonyu.globals.$Screen.convert(_this,Tonyu.globals.$Screen);
        
        _thread.retVal=_this.abs(_this.clamped(cp.x,- a,Tonyu.globals.$screenWidth+a))+_this.abs(_this.clamped(cp.y,- a,Tonyu.globals.$screenHeight+a));return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"dist":{"nowait":true},"getCrashShape":{"nowait":false},"screenOut":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.Random',
  shortName: 'Random',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Random_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Random_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Random_initialize(seed) {
        "use strict";
        var _this=this;
        
        _this.setSeed(seed);
      },
      setSeed :function _trc_Random_setSeed(seed) {
        "use strict";
        var _this=this;
        
        _this.x=123456789;
        _this.y=362436069;
        _this.z=521288629;
        _this.MAX=2147483648;
        _this.MIN=- _this.MAX;
        _this.w=seed||new Date().getTime();
      },
      next :function _trc_Random_next() {
        "use strict";
        var _this=this;
        var t;
        
        t = _this.x^(_this.x<<11);
        
        _this.x=_this.y;
        _this.y=_this.z;
        _this.z=_this.w;
        return _this.w=(_this.w^(_this.w>>>19))^(t^(t>>>8));
      },
      nextInt :function _trc_Random_nextInt(min,max) {
        "use strict";
        var _this=this;
        var res;
        
        res = _this.floor(min+_this.next01()*(max-min));
        
        return res;
      },
      next01 :function _trc_Random_next01() {
        "use strict";
        var _this=this;
        
        return (_this.next()-_this.MIN)/(_this.MAX-_this.MIN);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"setSeed":{"nowait":true},"next":{"nowait":true},"nextInt":{"nowait":true},"next01":{"nowait":true}},"fields":{"x":{},"y":{},"z":{},"MAX":{},"MIN":{},"w":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.CrashToHandler',
  shortName: 'CrashToHandler',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.EventHandler,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_CrashToHandler_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_CrashToHandler_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      addListener :function _trc_CrashToHandler_addListener(d,f) {
        "use strict";
        var _this=this;
        var retThread;
        
        retThread = _this.target.parallel("crashToChecker",d,_this.toListener(f));
        
        return {remove: (function anonymous_145() {
          
          retThread.kill();
        })};
      },
      initialize :function _trc_CrashToHandler_initialize(param) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [param]);
        _this.id=(Tonyu.globals.$idseq=(Tonyu.globals.$idseq||0)+1);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"addListener":{"nowait":true},"new":{"nowait":false}},"fields":{"id":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ComputedVec3',
  shortName: 'ComputedVec3',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Vec3,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_ComputedVec3_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ComputedVec3_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ComputedVec3_initialize(func) {
        "use strict";
        var _this=this;
        
        _this.computer=func;
      },
      requestCompute :function _trc_ComputedVec3_requestCompute() {
        "use strict";
        var _this=this;
        
        _this.computed=null;
      },
      fiber$requestCompute :function _trc_ComputedVec3_f_requestCompute(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.computed=null;
        
        _thread.retVal=_this;return;
      },
      compute :function _trc_ComputedVec3_compute() {
        "use strict";
        var _this=this;
        var c;
        
        if (_this.computed) {
          return _this.computed;
        }
        c = _this.computer(_this);
        
        return _this.computed||c;
      },
      fiber$compute :function _trc_ComputedVec3_f_compute(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        
        if (_this.computed) {
          _thread.retVal=_this.computed;return;
          
        }
        c = _this.computer(_this);
        
        _thread.retVal=_this.computed||c;return;
        
        
        _thread.retVal=_this;return;
      },
      keep :function _trc_ComputedVec3_keep(c) {
        "use strict";
        var _this=this;
        
        _this.computed=c;
        return c;
      },
      fiber$keep :function _trc_ComputedVec3_f_keep(_thread,c) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.computed=c;
        _thread.retVal=c;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__x :function _trc_ComputedVec3___getter__x() {
        "use strict";
        var _this=this;
        
        return _this.compute().x;
      },
      __getter__y :function _trc_ComputedVec3___getter__y() {
        "use strict";
        var _this=this;
        
        return _this.compute().y;
      },
      __getter__z :function _trc_ComputedVec3___getter__z() {
        "use strict";
        var _this=this;
        
        return _this.compute().z;
      },
      __setter__x :function _trc_ComputedVec3___setter__x(v) {
        "use strict";
        var _this=this;
        
        throw new Error("ComputedVec3: read only");
        
      },
      __setter__y :function _trc_ComputedVec3___setter__y(v) {
        "use strict";
        var _this=this;
        
        throw new Error("ComputedVec3: read only");
        
      },
      __setter__z :function _trc_ComputedVec3___setter__z(v) {
        "use strict";
        var _this=this;
        
        throw new Error("ComputedVec3: read only");
        
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"requestCompute":{"nowait":false},"compute":{"nowait":false},"keep":{"nowait":false},"__getter__x":{"nowait":true},"__getter__y":{"nowait":true},"__getter__z":{"nowait":true},"__setter__x":{"nowait":true},"__setter__y":{"nowait":true},"__setter__z":{"nowait":true}},"fields":{"computer":{},"computed":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ActorSprite',
  shortName: 'ActorSprite',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.SpriteMod2D],
  methods: function (__superClass) {
    return {
      main :function _trc_ActorSprite_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ActorSprite_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ActorSprite_initialize(param) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [param]);
        _this.initSpriteMod();
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.Layer2D',
  shortName: 'Layer2D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.ScreenLayer,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Layer2D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_Layer2D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_Layer2D_draw(c) {
        "use strict";
        var _this=this;
        var rt;
        var sc;
        var wpOnSX;
        var wpOnSY;
        
        c.save();
        rt = _this.rotation;
        sc = _this.scale;
        
        wpOnSX = (_this.cos(rt)*_this.wpx+_this.cos(rt+90)*_this.wpy)*sc;
        
        wpOnSY = (_this.sin(rt)*_this.wpx+_this.sin(rt+90)*_this.wpy)*sc;
        
        c.translate(- wpOnSX+_this.spx,- wpOnSY+_this.spy);
        c.rotate(_this.rad(rt));
        c.scale(sc,sc);
        _this.group.draw(c,_this);
        c.restore();
      },
      fiber$draw :function _trc_Layer2D_f_draw(_thread,c) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var rt;
        var sc;
        var wpOnSX;
        var wpOnSY;
        
        c.save();
        rt = _this.rotation;
        sc = _this.scale;
        
        wpOnSX = (_this.cos(rt)*_this.wpx+_this.cos(rt+90)*_this.wpy)*sc;
        
        wpOnSY = (_this.sin(rt)*_this.wpx+_this.sin(rt+90)*_this.wpy)*sc;
        
        c.translate(- wpOnSX+_this.spx,- wpOnSY+_this.spy);
        c.rotate(_this.rad(rt));
        c.scale(sc,sc);
        _this.group.draw(c,_this);
        c.restore();
        
        _thread.retVal=_this;return;
      },
      world2screen :function _trc_Layer2D_world2screen(obj) {
        "use strict";
        var _this=this;
        var dx;
        var dy;
        var rt;
        var x;
        var y;
        
        dx = obj.x-_this.wpx;
        
        dy = obj.y-_this.wpy;
        
        rt = _this.rotation;
        
        x = _this.spx+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)*_this.scale;
        
        y = _this.spy+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)*_this.scale;
        
        return {x: x,y: y,rotation: obj.rotation,scale: obj.scale,layer: _this.screen};
      },
      fiber$world2screen :function _trc_Layer2D_f_world2screen(_thread,obj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var dx;
        var dy;
        var rt;
        var x;
        var y;
        
        dx = obj.x-_this.wpx;
        
        dy = obj.y-_this.wpy;
        
        rt = _this.rotation;
        
        x = _this.spx+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)*_this.scale;
        
        y = _this.spy+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)*_this.scale;
        
        _thread.retVal={x: x,y: y,rotation: obj.rotation,scale: obj.scale,layer: _this.screen};return;
        
        
        _thread.retVal=_this;return;
      },
      screen2world :function _trc_Layer2D_screen2world(obj) {
        "use strict";
        var _this=this;
        var rt;
        var dx;
        var dy;
        var x;
        var y;
        
        rt = - _this.rotation;
        
        dx = obj.x-_this.spx;
        
        dy = obj.y-_this.spy;
        
        x = _this.wpx+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)/_this.scale;
        
        y = _this.wpy+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)/_this.scale;
        
        return {x: x,y: y,rotation: rt,scale: 1/_this.scale,layer: _this.group};
      },
      fiber$screen2world :function _trc_Layer2D_f_screen2world(_thread,obj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var rt;
        var dx;
        var dy;
        var x;
        var y;
        
        rt = - _this.rotation;
        
        dx = obj.x-_this.spx;
        
        dy = obj.y-_this.spy;
        
        x = _this.wpx+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)/_this.scale;
        
        y = _this.wpy+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)/_this.scale;
        
        _thread.retVal={x: x,y: y,rotation: rt,scale: 1/_this.scale,layer: _this.group};return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":false},"world2screen":{"nowait":false},"screen2world":{"nowait":false}},"fields":{"spx":{},"spy":{},"wpx":{},"wpy":{},"rotation":{},"scale":{},"screen":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Layer3D',
  shortName: 'Layer3D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.ScreenLayer,
  includes: [Tonyu.classes.kernel.MathMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Layer3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_Layer3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Layer3D_initialize(p) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [p]);
        _this.spx=_this.spx||Tonyu.globals.$screenWidth/2;
        _this.spy=_this.spy||Tonyu.globals.$screenHeight/2;
      },
      draw :function _trc_Layer3D_draw(c2) {
        "use strict";
        var _this=this;
        var c3;
        var s2ds;
        var s2d;
        var _it_6162;
        
        _this.spx=Tonyu.globals.$screenWidth/2;
        _this.spy=Tonyu.globals.$screenHeight/2;
        c3 = new Tonyu.classes.kernel.Context3D({camera: _this.camera});
        
        _this.group.draw3D(c3);
        s2ds = c3.sprites2D.sort((function anonymous_348(a,b) {
          
          return b.zOrder-a.zOrder;
        }));
        
        c2.save();
        c2.translate(_this.spx,_this.spy);
        _it_6162=Tonyu.iterator(c3.sprites2D,1);
        while(_it_6162.next()) {
          s2d=_it_6162[0];
          
          s2d.draw(c2);
          
        }
        c2.restore();
      },
      fiber$draw :function _trc_Layer3D_f_draw(_thread,c2) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c3;
        var s2ds;
        var s2d;
        var _it_6162;
        
        _this.spx=Tonyu.globals.$screenWidth/2;
        _this.spy=Tonyu.globals.$screenHeight/2;
        c3 = new Tonyu.classes.kernel.Context3D({camera: _this.camera});
        
        _this.group.draw3D(c3);
        s2ds = c3.sprites2D.sort((function anonymous_348(a,b) {
          
          return b.zOrder-a.zOrder;
        }));
        
        c2.save();
        c2.translate(_this.spx,_this.spy);
        _it_6162=Tonyu.iterator(c3.sprites2D,1);
        while(_it_6162.next()) {
          s2d=_it_6162[0];
          
          s2d.draw(c2);
          
        }
        c2.restore();
        
        _thread.retVal=_this;return;
      },
      world2screen :function _trc_Layer3D_world2screen(obj) {
        "use strict";
        var _this=this;
        var r;
        
        _this.spx=Tonyu.globals.$screenWidth/2;
        _this.spy=Tonyu.globals.$screenHeight/2;
        r = _this.camera.to2D(_this.camera.transform.inverse.childToSibling(obj));
        
        r.x+=_this.spx;
        r.y+=_this.spy;
        return r;
      },
      fiber$world2screen :function _trc_Layer3D_f_world2screen(_thread,obj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        _this.spx=Tonyu.globals.$screenWidth/2;
        _this.spy=Tonyu.globals.$screenHeight/2;
        r = _this.camera.to2D(_this.camera.transform.inverse.childToSibling(obj));
        
        r.x+=_this.spx;
        r.y+=_this.spy;
        _thread.retVal=r;return;
        
        
        _thread.retVal=_this;return;
      },
      screen2world :function _trc_Layer3D_screen2world(obj) {
        "use strict";
        var _this=this;
        
        throw new Error("cannot call screen2world for Layer3D");
        
      },
      fiber$screen2world :function _trc_Layer3D_f_screen2world(_thread,obj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw new Error("cannot call screen2world for Layer3D");
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"draw":{"nowait":false},"world2screen":{"nowait":false},"screen2world":{"nowait":false}},"fields":{"spx":{},"spy":{},"camera":{},"screen":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PanelMod',
  shortName: 'PanelMod',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.TObject,
  includes: [Tonyu.classes.kernel.FileMod,Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.SpriteMod2D,Tonyu.classes.kernel.EventMod],
  methods: function (__superClass) {
    return {
      main :function _trc_PanelMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_PanelMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initPanelMod :function _trc_PanelMod_initPanelMod() {
        "use strict";
        var _this=this;
        
        throw "Check overrides in spritesmod /oneframeSpritemod";
        
        if (_this.canvas) {
          _this.width=_this.canvas.width;
          _this.height=_this.canvas.height;
          
        } else {
          _this.setPanel(_this.width||Tonyu.globals.$screenWidth||465,_this.height||Tonyu.globals.$screenHeight||465);
          
        }
        if (_this._fillStyle&&_this.canvas) {
          _this.canvas.getContext("2d").fillStyle=_this._fillStyle+"";
        }
        _this.x=_this.x||_this.width/2;
        _this.y=_this.y||_this.height/2;
        if (_this.align==null) {
          _this.align="center";
        }
        if (_this.alpha==null) {
          _this.alpha=255;
        }
        if (_this._drawn==null) {
          _this._drawn=false;
        }
      },
      fiber$initPanelMod :function _trc_PanelMod_f_initPanelMod(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        throw "Check overrides in spritesmod /oneframeSpritemod";
        
        
        _thread.enter(function _trc_PanelMod_ent_initPanelMod(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.canvas)) { __pc=1     ; break; }
              {
                _this.width=_this.canvas.width;
                _this.height=_this.canvas.height;
              }
              __pc=3     ;break;
            case 1     :
              _this.fiber$setPanel(_thread, _this.width||Tonyu.globals.$screenWidth||465, _this.height||Tonyu.globals.$screenHeight||465);
              __pc=2;return;
            case 2:
              
            case 3     :
              
              if (_this._fillStyle&&_this.canvas) {
                _this.canvas.getContext("2d").fillStyle=_this._fillStyle+"";
              }
              _this.x=_this.x||_this.width/2;
              _this.y=_this.y||_this.height/2;
              if (_this.align==null) {
                _this.align="center";
              }
              if (_this.alpha==null) {
                _this.alpha=255;
              }
              if (_this._drawn==null) {
                _this._drawn=false;
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      setPanel :function _trc_PanelMod_setPanel(width,height) {
        "use strict";
        var _this=this;
        var buf;
        
        _this.width=_this.trunc(width);
        _this.height=_this.trunc(height);
        buf = $("<canvas>").attr({width: width,height: height});
        
        _this.canvas=buf[0];
        _this.imageSmoothingEnabled=! Tonyu.globals.$imageSmoothingDisabled;
        _this._drawn=false;
        _this.fireEvent("resize",{width: width,height: height,force: true});
      },
      fiber$setPanel :function _trc_PanelMod_f_setPanel(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var buf;
        
        _this.width=_this.trunc(width);
        _this.height=_this.trunc(height);
        buf = $("<canvas>").attr({width: width,height: height});
        
        _this.canvas=buf[0];
        _this.imageSmoothingEnabled=! Tonyu.globals.$imageSmoothingDisabled;
        _this._drawn=false;
        _this.fireEvent("resize",{width: width,height: height,force: true});
        
        _thread.retVal=_this;return;
      },
      resize :function _trc_PanelMod_resize(width,height) {
        "use strict";
        var _this=this;
        
        if (_this.width==width&&_this.height==height) {
          return _this;
        }
        _this.setPanel(width,height);
      },
      fiber$resize :function _trc_PanelMod_f_resize(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.width==width&&_this.height==height) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_PanelMod_ent_resize(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setPanel(_thread, width, height);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getContext :function _trc_PanelMod_getContext() {
        "use strict";
        var _this=this;
        
        _this._drawn=true;
        return _this.canvas.getContext("2d");
      },
      fiber$getContext :function _trc_PanelMod_f_getContext(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._drawn=true;
        _thread.retVal=_this.canvas.getContext("2d");return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__context :function _trc_PanelMod___getter__context() {
        "use strict";
        var _this=this;
        
        _this._drawn=true;
        return _this.canvas.getContext("2d");
      },
      __getter__image :function _trc_PanelMod___getter__image() {
        "use strict";
        var _this=this;
        
        _this._drawn=true;
        return _this.canvas;
      },
      setFillStyle :function _trc_PanelMod_setFillStyle(color) {
        "use strict";
        var _this=this;
        
        _this.fillStyle=color;
      },
      fiber$setFillStyle :function _trc_PanelMod_f_setFillStyle(_thread,color) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.fillStyle=color;
        
        _thread.retVal=_this;return;
      },
      __getter__fillStyle :function _trc_PanelMod___getter__fillStyle() {
        "use strict";
        var _this=this;
        
        return _this._fillStyle;
      },
      __setter__fillStyle :function _trc_PanelMod___setter__fillStyle(val) {
        "use strict";
        var _this=this;
        
        _this._fillStyle=val;
        if (! _this.canvas) {
          return _this;
        }
        _this.context.fillStyle=val+"";
      },
      __setter__strokeStyle :function _trc_PanelMod___setter__strokeStyle(val) {
        "use strict";
        var _this=this;
        
        _this.context.strokeStyle=val+"";
      },
      __setter__lineWidth :function _trc_PanelMod___setter__lineWidth(val) {
        "use strict";
        var _this=this;
        
        _this.context.lineWidth=val;
      },
      fillCircle :function _trc_PanelMod_fillCircle(x,y,r) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.context;
        
        ctx.fillStyle=_this.fillStyle+"";
        ctx.beginPath();
        ctx.arc(x,y,r,0,2*Tonyu.globals.$Math.PI);
        ctx.closePath();
        ctx.fill();
      },
      fiber$fillCircle :function _trc_PanelMod_f_fillCircle(_thread,x,y,r) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        ctx = _this.context;
        
        ctx.fillStyle=_this.fillStyle+"";
        ctx.beginPath();
        ctx.arc(x,y,r,0,2*Tonyu.globals.$Math.PI);
        ctx.closePath();
        ctx.fill();
        
        _thread.retVal=_this;return;
      },
      fillRect :function _trc_PanelMod_fillRect(x,y,w,h) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.getContext();
        
        ctx.fillRect(x,y,w,h);
      },
      fiber$fillRect :function _trc_PanelMod_f_fillRect(_thread,x,y,w,h) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        
        _thread.enter(function _trc_PanelMod_ent_fillRect(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.fillRect(x,y,w,h);
              _thread.exit(_this);return;
            }
          }
        });
      },
      fillText :function _trc_PanelMod_fillText(text,x,y,size,align) {
        "use strict";
        var _this=this;
        var ctx;
        var splits;
        var f;
        var colCount;
        
        ctx = _this.getContext();
        
        ctx.save();
        text=text+"";
        splits = text.split("\n");
        
        ctx.textAlign=align||"center";
        size=size||15;
        ctx.fillStyle=_this.fillStyle+"";
        f = ctx.font.replace(/^[0-9\.]+/,"");
        
        ctx.font=size+f;
        colCount = 0;
        for (; colCount<splits.length ; colCount++) {
          {
            ctx.fillText(splits[colCount],x,y);
            y+=size;
          }
        }
        ctx.restore();
      },
      fiber$fillText :function _trc_PanelMod_f_fillText(_thread,text,x,y,size,align) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        var splits;
        var f;
        var colCount;
        
        
        _thread.enter(function _trc_PanelMod_ent_fillText(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.save();
              text=text+"";
              splits = text.split("\n");
              
              ctx.textAlign=align||"center";
              size=size||15;
              ctx.fillStyle=_this.fillStyle+"";
              f = ctx.font.replace(/^[0-9\.]+/,"");
              
              ctx.font=size+f;
              colCount = 0;
              for (; colCount<splits.length ; colCount++) {
                {
                  ctx.fillText(splits[colCount],x,y);
                  y+=size;
                }
              }
              ctx.restore();
              _thread.exit(_this);return;
            }
          }
        });
      },
      clearRect :function _trc_PanelMod_clearRect(clearX,clearY,clearW,clearH) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.getContext();
        
        ctx.save();
        ctx.clearRect(clearX||0,clearY||0,clearW||_this.width,clearH||_this.height);
        ctx.restore();
        if (arguments.length==0) {
          _this._drawn=false;
        }
      },
      fiber$clearRect :function _trc_PanelMod_f_clearRect(_thread,clearX,clearY,clearW,clearH) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        
        _thread.enter(function _trc_PanelMod_ent_clearRect(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.save();
              ctx.clearRect(clearX||0,clearY||0,clearW||_this.width,clearH||_this.height);
              ctx.restore();
              if (_arguments.length==0) {
                _this._drawn=false;
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPixel :function _trc_PanelMod_getPixel(getX,getY) {
        "use strict";
        var _this=this;
        var ctx;
        var imagedata;
        var colordata;
        
        
        if (typeof  getX=="number"&&! isNaN(getX)&&typeof  getY=="number"&&! isNaN(getY)) {
          ctx=_this.getContext();
          imagedata=ctx.getImageData(getX,getY,1,1);
          colordata=[imagedata.data[0],imagedata.data[1],imagedata.data[2],imagedata.data[3]];
          
        } else {
          colordata=[0,0,0,0];
          
        }
        return (colordata);
      },
      fiber$getPixel :function _trc_PanelMod_f_getPixel(_thread,getX,getY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        var imagedata;
        var colordata;
        
        
        
        _thread.enter(function _trc_PanelMod_ent_getPixel(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  getX=="number"&&! isNaN(getX)&&typeof  getY=="number"&&! isNaN(getY))) { __pc=2     ; break; }
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              imagedata=ctx.getImageData(getX,getY,1,1);
              colordata=[imagedata.data[0],imagedata.data[1],imagedata.data[2],imagedata.data[3]];
              __pc=3     ;break;
            case 2     :
              {
                colordata=[0,0,0,0];
              }
            case 3     :
              
              _thread.exit((colordata));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      scroll :function _trc_PanelMod_scroll(scrollX,scrollY) {
        "use strict";
        var _this=this;
        var ctx;
        var imagedata;
        
        ctx = _this.getContext();
        
        ctx.save();
        imagedata = ctx.getImageData(0,0,_this.width,_this.height);
        
        _this.clearRect(0,0,_this.width,_this.height);
        ctx.putImageData(imagedata,- scrollX,- scrollY);
        ctx.restore();
      },
      fiber$scroll :function _trc_PanelMod_f_scroll(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        var imagedata;
        
        
        _thread.enter(function _trc_PanelMod_ent_scroll(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.save();
              imagedata = ctx.getImageData(0,0,_this.width,_this.height);
              
              _this.fiber$clearRect(_thread, 0, 0, _this.width, _this.height);
              __pc=2;return;
            case 2:
              
              ctx.putImageData(imagedata,- scrollX,- scrollY);
              ctx.restore();
              _thread.exit(_this);return;
            }
          }
        });
      },
      draw :function _trc_PanelMod_draw(ctx) {
        "use strict";
        var _this=this;
        var pImg;
        
        if (_this._drawn) {
          pImg = _this.canvas;
          
          ctx.save();
          if (_this.align=="left") {
            ctx.translate(_this.x+_this.width/2,_this.y+_this.height/2);
            
          } else {
            if (_this.align=="center") {
              ctx.translate(_this.x,_this.y);
              
            } else {
              if (_this.align=="right") {
                ctx.translate(_this.x-_this.width/2,_this.y-_this.height/2);
                
              }
            }
          }
          if (_this.rotation!=0) {
            ctx.rotate(_this.rotation/180*Math.PI);
            
          } else {
            ctx.rotate(_this.rotate/180*Math.PI);
            
          }
          if (typeof  _this.scaleY==="undefined") {
            ctx.scale(_this.scaleX,_this.scaleX);
            
          } else {
            ctx.scale(_this.scaleX,_this.scaleY);
            
          }
          ctx.globalAlpha=_this.alpha/255;
          ctx.drawImage(pImg,0,0,_this.width,_this.height,- _this.width/2,- _this.height/2,_this.width,_this.height);
          ctx.restore();
          
        }
      },
      drawSprite :function _trc_PanelMod_drawSprite(x,y,p,options) {
        "use strict";
        var _this=this;
        var pImg;
        var scaleX;
        var scaleY;
        var rotation;
        var ctx;
        
        pImg = Tonyu.globals.$imageList[p];
        
        if (! pImg) {
          return _this;
        }
        if (options===true) {
          options={f: true};
        }
        options=options||{};
        scaleX = typeof  (options.scaleX)==="number"?options.scaleX:1;
        
        scaleY = typeof  (options.scaleY)==="number"?options.scaleY:scaleX;
        
        rotation = options.rotation||options.angle||0;
        
        ctx = _this.context;
        
        if (options.f) {
          scaleX*=- 1;
        }
        ctx.save();
        ctx.translate(x,y);
        ctx.rotate(rotation/180*Math.PI);
        ctx.scale(scaleX,scaleY);
        ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,- pImg.width/2,- pImg.height/2,pImg.width,pImg.height);
        ctx.restore();
      },
      copy :function _trc_PanelMod_copy() {
        "use strict";
        var _this=this;
        var sx;
        var sy;
        var sw;
        var sh;
        var dx;
        var dy;
        var dw;
        var dh;
        var a;
        var srcPanel;
        var params;
        
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        srcPanel = a.shift(Tonyu.classes.kernel.Panel)||_this;
        
        if (a.length<=4) {
          dx=a.shift();
          dy=a.shift();
          if (a.length==0) {
            _this.context.drawImage(srcPanel.image,dx,dy);
            
          } else {
            dw=a.shift();
            dh=a.shift();
            if (dw*dh!=0) {
              _this.context.drawImage(srcPanel.image,dx,dy,dw,dh);
              
            }
            
          }
          
        } else {
          sx=a.shift();
          sy=a.shift();
          sw=a.shift();
          sh=a.shift();
          dx=a.shift();
          if (typeof  dx==="object") {
            params = dx;
            
            
          }
          dy=a.shift();
          dw=a.shift()||sw;
          dh=a.shift()||sh;
          if (sw*sh*dw*dh!=0) {
            _this.context.drawImage(srcPanel.image,sx,sy,sw,sh,dx,dy,dw,dh);
            
          }
          
        }
      },
      drawLine :function _trc_PanelMod_drawLine(x,y,dx,dy) {
        "use strict";
        var _this=this;
        
        if (dx==null&&dy==null) {
          if (x==null&&y==null) {
            _this.px=null;
            _this.py=null;
            return _this;
            
          }
          if (_this.px==null&&_this.py==null) {
            _this.px=x;
            _this.py=y;
            return _this;
            
          }
          dx=x;
          dy=y;
          x=_this.px;
          y=_this.py;
          _this.px=dx;
          _this.py=dy;
          
        }
        _this.context.beginPath();
        _this.context.moveTo(x,y);
        _this.context.lineTo(dx,dy);
        _this.context.stroke();
      },
      fiber$drawLine :function _trc_PanelMod_f_drawLine(_thread,x,y,dx,dy) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (dx==null&&dy==null) {
          if (x==null&&y==null) {
            _this.px=null;
            _this.py=null;
            _thread.retVal=_this;return;
            
            
          }
          if (_this.px==null&&_this.py==null) {
            _this.px=x;
            _this.py=y;
            _thread.retVal=_this;return;
            
            
          }
          dx=x;
          dy=y;
          x=_this.px;
          y=_this.py;
          _this.px=dx;
          _this.py=dy;
          
        }
        _this.context.beginPath();
        _this.context.moveTo(x,y);
        _this.context.lineTo(dx,dy);
        _this.context.stroke();
        
        _thread.retVal=_this;return;
      },
      slicePattern :function _trc_PanelMod_slicePattern(x,y,width,height) {
        "use strict";
        var _this=this;
        
        return {image: _this.canvas,x: x,y: y,width: width,height: height};
      },
      fiber$slicePattern :function _trc_PanelMod_f_slicePattern(_thread,x,y,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal={image: _this.canvas,x: x,y: y,width: width,height: height};return;
        
        
        _thread.retVal=_this;return;
      },
      addPattern :function _trc_PanelMod_addPattern(x,y,width,height) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$imageList.push(_this.slicePattern(x,y,width,height));
        return Tonyu.globals.$imageList.length-1;
      },
      fiber$addPattern :function _trc_PanelMod_f_addPattern(_thread,x,y,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$imageList.push(_this.slicePattern(x,y,width,height));
        _thread.retVal=Tonyu.globals.$imageList.length-1;return;
        
        
        _thread.retVal=_this;return;
      },
      getImageData :function _trc_PanelMod_getImageData(x,y,width,height) {
        "use strict";
        var _this=this;
        
        return _this.context.getImageData(x,y,width,height);
      },
      fiber$getImageData :function _trc_PanelMod_f_getImageData(_thread,x,y,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.context.getImageData(x,y,width,height);return;
        
        
        _thread.retVal=_this;return;
      },
      putImageData :function _trc_PanelMod_putImageData(data,x,y) {
        "use strict";
        var _this=this;
        
        return _this.context.putImageData(data,x,y);
      },
      fiber$putImageData :function _trc_PanelMod_f_putImageData(_thread,data,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.context.putImageData(data,x,y);return;
        
        
        _thread.retVal=_this;return;
      },
      save :function _trc_PanelMod_save(fn) {
        "use strict";
        var _this=this;
        var url;
        
        url = _this.canvas.toDataURL();
        
        if (typeof  fn==="string") {
          fn=_this.file(fn);
        }
        return fn.text(url);
      },
      fiber$save :function _trc_PanelMod_f_save(_thread,fn) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var url;
        
        url = _this.canvas.toDataURL();
        
        
        _thread.enter(function _trc_PanelMod_ent_save(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  fn==="string")) { __pc=2     ; break; }
              _this.fiber$file(_thread, fn);
              __pc=1;return;
            case 1:
              fn=_thread.retVal;
              
            case 2     :
              
              _thread.exit(fn.text(url));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      load :function _trc_PanelMod_load(fn) {
        "use strict";
        var _this=this;
        var d;
        var url;
        var element;
        
        if (typeof  fn==="string") {
          fn=_this.file(fn);
        }
        d = new $.Deferred();
        
        url = fn.text();
        
        element = $("<img>").css({display: "none"}).appendTo("body");
        
        element.on("load",(function anonymous_7200() {
          var img;
          var width;
          var height;
          
          img = new Image();
          
          img.src=element.attr('src');
          width = img.width;
          
          height = img.height;
          
          _this.resize(width,height);
          _this.context.drawImage(img,0,0);
          d.resolve(_this);
        }));
        element.attr({src: url});
        return d.promise();
      },
      fiber$load :function _trc_PanelMod_f_load(_thread,fn) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var d;
        var url;
        var element;
        
        
        _thread.enter(function _trc_PanelMod_ent_load(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  fn==="string")) { __pc=2     ; break; }
              _this.fiber$file(_thread, fn);
              __pc=1;return;
            case 1:
              fn=_thread.retVal;
              
            case 2     :
              
              d = new $.Deferred();
              
              url = fn.text();
              
              element = $("<img>").css({display: "none"}).appendTo("body");
              
              element.on("load",(function anonymous_7200() {
                var img;
                var width;
                var height;
                
                img = new Image();
                
                img.src=element.attr('src');
                width = img.width;
                
                height = img.height;
                
                _this.resize(width,height);
                _this.context.drawImage(img,0,0);
                d.resolve(_this);
              }));
              element.attr({src: url});
              _thread.exit(d.promise());return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __setter__imageSmoothingEnabled :function _trc_PanelMod___setter__imageSmoothingEnabled(v) {
        "use strict";
        var _this=this;
        
        if (typeof  _this.context.msImageSmoothingEnabled==="boolean") {
          _this.context.msImageSmoothingEnabled=v;
          
        } else {
          _this.context.imageSmoothingEnabled=v;
          
        }
      },
      __getter__imageSmoothingEnabled :function _trc_PanelMod___getter__imageSmoothingEnabled() {
        "use strict";
        var _this=this;
        
        if (typeof  _this.context.msImageSmoothingEnabled==="boolean") {
          return _this.context.msImageSmoothingEnabled;
          
        } else {
          return _this.context.imageSmoothingEnabled;
          
        }
      },
      replaceColor :function _trc_PanelMod_replaceColor() {
        "use strict";
        var _this=this;
        var a;
        var top;
        var left;
        var w;
        var h;
        var func;
        var ctx;
        var data;
        var i;
        var j;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        top = 0;
        left = 0;
        
        w = _this.width;
        h = _this.height;
        
        if (a.length>=4) {
          left=a.shift();
          top=a.shift();
          w=a.shift();
          h=a.shift();
          
        }
        func = a.shift();
        
        if (typeof  func!=="function") {
          ctx = _this.context;
          
          ctx.save();
          ctx.beginPath();
          ctx.moveTo(left,top);
          ctx.lineTo(left+w,top);
          ctx.lineTo(left+w,top+h);
          ctx.lineTo(left,top+h);
          ctx.closePath();
          ctx.clip();
          ctx.globalCompositeOperation="source-in";
          if (func) {
            _this.fillStyle=func;
          }
          ctx.fillRect(left,top,w,h);
          ctx.restore();
          return _this;
          
        }
        data = _this.getImageData(left,top,w,h);
        
        i = 0;
        for (; i<h ; i++) {
          {
            j = 0;
            for (; j<w ; j++) {
              {
                func(new Tonyu.classes.kernel.Color(data,j,i),left+j,top+i);
              }
            }
          }
        }
        _this.putImageData(data,left,top);
      },
      fiber$replaceColor :function _trc_PanelMod_f_replaceColor(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var top;
        var left;
        var w;
        var h;
        var func;
        var ctx;
        var data;
        var i;
        var j;
        
        a = new Tonyu.classes.kernel.ArgParser(_arguments);
        
        top = 0;
        left = 0;
        
        w = _this.width;
        h = _this.height;
        
        if (a.length>=4) {
          left=a.shift();
          top=a.shift();
          w=a.shift();
          h=a.shift();
          
        }
        func = a.shift();
        
        if (typeof  func!=="function") {
          ctx = _this.context;
          
          ctx.save();
          ctx.beginPath();
          ctx.moveTo(left,top);
          ctx.lineTo(left+w,top);
          ctx.lineTo(left+w,top+h);
          ctx.lineTo(left,top+h);
          ctx.closePath();
          ctx.clip();
          ctx.globalCompositeOperation="source-in";
          if (func) {
            _this.fillStyle=func;
          }
          ctx.fillRect(left,top,w,h);
          ctx.restore();
          _thread.retVal=_this;return;
          
          
        }
        
        _thread.enter(function _trc_PanelMod_ent_replaceColor(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getImageData(_thread, left, top, w, h);
              __pc=1;return;
            case 1:
              data=_thread.retVal;
              
              i = 0;
              for (; i<h ; i++) {
                {
                  j = 0;
                  for (; j<w ; j++) {
                    {
                      func(new Tonyu.classes.kernel.Color(data,j,i),left+j,top+i);
                    }
                  }
                }
              }
              _this.fiber$putImageData(_thread, data, left, top);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initPanelMod":{"nowait":false},"setPanel":{"nowait":false},"resize":{"nowait":false},"getContext":{"nowait":false},"__getter__context":{"nowait":true},"__getter__image":{"nowait":true},"setFillStyle":{"nowait":false},"__getter__fillStyle":{"nowait":true},"__setter__fillStyle":{"nowait":true},"__setter__strokeStyle":{"nowait":true},"__setter__lineWidth":{"nowait":true},"fillCircle":{"nowait":false},"fillRect":{"nowait":false},"fillText":{"nowait":false},"clearRect":{"nowait":false},"getPixel":{"nowait":false},"scroll":{"nowait":false},"draw":{"nowait":true},"drawSprite":{"nowait":true},"copy":{"nowait":true},"drawLine":{"nowait":false},"slicePattern":{"nowait":false},"addPattern":{"nowait":false},"getImageData":{"nowait":false},"putImageData":{"nowait":false},"save":{"nowait":false},"load":{"nowait":false},"__setter__imageSmoothingEnabled":{"nowait":true},"__getter__imageSmoothingEnabled":{"nowait":true},"replaceColor":{"nowait":false}},"fields":{"canvas":{},"_drawn":{},"_fillStyle":{},"px":{},"py":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PlayMod',
  shortName: 'PlayMod',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.SchedulerMod,Tonyu.classes.kernel.LifeCycleMod],
  methods: function (__superClass) {
    return {
      main :function _trc_PlayMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_PlayMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initMML :function _trc_PlayMod_initMML() {
        "use strict";
        var _this=this;
        
        if (_this.mmlInited) {
          return _this;
        }
        _this.mmlInited=true;
        Tonyu.globals.$currentProject.requestPlugin("timbre");
        if (! Tonyu.globals.$MMLS) {
          Tonyu.globals.$MMLS={};
          Tonyu.globals.$WaveTable=new Tonyu.classes.kernel.WaveTable;
          Tonyu.globals.$Boot.on("stop",Tonyu.bindFunc(_this,_this.releaseMML));
          
        }
        _this.on("die",(function anonymous_350() {
          
          _this.play().stop();
        }));
      },
      releaseMML :function _trc_PlayMod_releaseMML() {
        "use strict";
        var _this=this;
        var k;
        var v;
        var _it_6217;
        
        if (Tonyu.globals.$MMLS) {
          _it_6217=Tonyu.iterator(Tonyu.globals.$MMLS,2);
          while(_it_6217.next()) {
            k=_it_6217[0];
            v=_it_6217[1];
            
            v.stop();
            
          }
          Tonyu.globals.$MMLS=null;
          
        }
        if (Tonyu.globals.$WaveTable) {
          Tonyu.globals.$WaveTable.stop();
          Tonyu.globals.$WaveTable=null;
          
        }
      },
      play :function _trc_PlayMod_play() {
        "use strict";
        var _this=this;
        var mmls;
        var i;
        
        _this.initMML();
        if (! _this._mml) {
          _this._mml=new Tonyu.classes.kernel.MML;
        }
        if (_this.isDead()||arguments.length==0) {
          return _this._mml;
        }
        mmls = [];
        
        i = 0;
        for (; i<arguments.length ; i++) {
          {
            mmls.push(arguments[i]);
          }
        }
        _this._mml.play(mmls);
        while (_this._mml.bufferCount()>2) {
          _this.update();
          
        }
        return _this._mml;
      },
      fiber$play :function _trc_PlayMod_f_play(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var mmls;
        var i;
        
        _this.initMML();
        if (! _this._mml) {
          _this._mml=new Tonyu.classes.kernel.MML;
        }
        if (_this.isDead()||_arguments.length==0) {
          _thread.retVal=_this._mml;return;
          
        }
        mmls = [];
        
        i = 0;
        for (; i<_arguments.length ; i++) {
          {
            mmls.push(_arguments[i]);
          }
        }
        _this._mml.play(mmls);
        
        _thread.enter(function _trc_PlayMod_ent_play(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(_this._mml.bufferCount()>2)) { __pc=3     ; break; }
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this._mml);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      playSE :function _trc_PlayMod_playSE() {
        "use strict";
        var _this=this;
        var mml;
        var mmls;
        var i;
        
        _this.initMML();
        mml = new Tonyu.classes.kernel.MML;
        
        mmls = [];
        
        i = 0;
        for (; i<arguments.length ; i++) {
          {
            mmls.push(arguments[i]);
          }
        }
        mml.play(mmls);
        return mml;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initMML":{"nowait":true},"releaseMML":{"nowait":true},"play":{"nowait":false},"playSE":{"nowait":true}},"fields":{"mmlInited":{},"_mml":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.InputMod',
  shortName: 'InputMod',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.QueryMod],
  methods: function (__superClass) {
    return {
      main :function _trc_InputMod_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_InputMod_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      getkey :function _trc_InputMod_getkey(k) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$Keys.getkey(k);
      },
      waitInputDevice :function _trc_InputMod_waitInputDevice(fl) {
        "use strict";
        var _this=this;
        
        _this.runAsync((function anonymous_242(f) {
          
          Tonyu.globals.$InputDevice.addOnetimeListener(f);
        }));
      },
      fiber$waitInputDevice :function _trc_InputMod_f_waitInputDevice(_thread,fl) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_InputMod_ent_waitInputDevice(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$runAsync(_thread, (function anonymous_242(f) {
                
                Tonyu.globals.$InputDevice.addOnetimeListener(f);
              }));
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getkey":{"nowait":true},"waitInputDevice":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.InputMod2D',
  shortName: 'InputMod2D',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.InputMod,Tonyu.classes.kernel.SpriteMod2D],
  methods: function (__superClass) {
    return {
      main :function _trc_InputMod2D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_InputMod2D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      findTouch :function _trc_InputMod2D_findTouch(params) {
        "use strict";
        var _this=this;
        var r;
        var res;
        
        if (typeof  params==="number") {
          params={scale: params};
        }
        params=params||{};
        
        if (params.width&&params.height) {
          r={x: _this.x,y: _this.y,width: params.width,height: params.height};
          
        } else {
          params.scale=params.scale||2;
          r=_this.getCrashShape();
          if (! r) {
            return null;
          }
          r={x: _this.x,y: _this.y,width: r.width*params.scale,height: r.height*params.scale};
          
        }
        res = Tonyu.globals.$touches.findTouch((function anonymous_578(t) {
          var tt;
          
          if (params.pickup||t.touched==1) {
            tt = Tonyu.globals.$Screen.convert(t,_this.layer);
            
            if (Tonyu.globals.$Math.abs(r.x-tt.x)<r.width/2&&Tonyu.globals.$Math.abs(r.y-tt.y)<r.height/2) {
              return true;
              
            }
            
          }
        }));
        
        if (res) {
          res.layer=_this.layer;
          return res;
          
        }
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"findTouch":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.BaseActor',
  shortName: 'BaseActor',
  namespace: 'kernel',
  includes: [Tonyu.classes.kernel.MathMod,Tonyu.classes.kernel.EventMod,Tonyu.classes.kernel.ThreadGroupMod,Tonyu.classes.kernel.EventHandlerCaller,Tonyu.classes.kernel.DialogMod,Tonyu.classes.kernel.FileMod,Tonyu.classes.kernel.AnimMod,Tonyu.classes.kernel.SchedulerMod,Tonyu.classes.kernel.QueryMod,Tonyu.classes.kernel.InputMod,Tonyu.classes.kernel.LifeCycleMod,Tonyu.classes.kernel.SpriteMod,Tonyu.classes.kernel.ParallelMod,Tonyu.classes.kernel.PlayMod,Tonyu.classes.kernel.ParallelMod],
  methods: function (__superClass) {
    return {
      main :function _trc_BaseActor_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_BaseActor_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_BaseActor_initialize(x,y,p) {
        "use strict";
        var _this=this;
        
        if (typeof  x=="object") {
          Tonyu.extend(_this,x);
        } else {
          if (typeof  x=="number") {
            _this.x=x;
            _this.y=y;
            _this.p=p;
            
          }
        }
        _this.initSchedulerMod();
        _this.layer=_this.layer||_this.defaultLayer;
        if (_this.layer.group instanceof Tonyu.classes.kernel.SpriteGroup) {
          _this.layer=_this.layer.group;
        }
        _this.crashScale=1;
        if (_this.position) {
          _this.x=_this.position.x;
          _this.y=_this.position.y;
          
        }
        _this.initSpriteMod();
        _this.addToLayer();
        _this.initAnimMod();
      },
      extend :function _trc_BaseActor_extend(obj) {
        "use strict";
        var _this=this;
        
        return Tonyu.extend(_this,obj);
      },
      print :function _trc_BaseActor_print() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$_printCount++;
        if (Tonyu.globals.$_printCount>Tonyu.globals.$printLimit) {
          throw new Error("printをしすぎています.\n"+"       $printLimitの値を変更すると、1フレーム間にできるprint回数を変更できます\n"+"       $printLimit="+Tonyu.globals.$printLimit+"; // 現在のprint回数の限度\n"+"       [参考] https://edit.tonyu.jp/doc/limitations.html\n");
          
        }
        console.log.apply(console,arguments);
        if (Tonyu.globals.$consolePanel) {
          Tonyu.globals.$consolePanel.print.apply(Tonyu.globals.$consolePanel,arguments);
          
        }
      },
      loadPage :function _trc_BaseActor_loadPage() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Boot.loadPage.apply(Tonyu.globals.$Boot,arguments);
        _this.update();
      },
      fiber$loadPage :function _trc_BaseActor_f_loadPage(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$Boot.loadPage.apply(Tonyu.globals.$Boot,_arguments);
        
        _thread.enter(function _trc_BaseActor_ent_loadPage(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$update(_thread);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__defaultLayer :function _trc_BaseActor___getter__defaultLayer() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$mainLayer;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"extend":{"nowait":true},"print":{"nowait":true},"loadPage":{"nowait":false},"__getter__defaultLayer":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.NoviceActor',
  shortName: 'NoviceActor',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.BaseActor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_NoviceActor_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_NoviceActor_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      sleep :function _trc_NoviceActor_sleep(n) {
        "use strict";
        var _this=this;
        
        if (! n) {
          n=1;
        }
        n;for (; n>0 ; n--) {
          _this.update();
        }
      },
      fiber$sleep :function _trc_NoviceActor_f_sleep(_thread,n) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! n) {
          n=1;
        }
        
        _thread.enter(function _trc_NoviceActor_ent_sleep(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              n;
            case 1:
              if (!(n>0)) { __pc=4     ; break; }
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
            case 3     :
              n--;
              __pc=1;break;
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initSprite :function _trc_NoviceActor_initSprite() {
        "use strict";
        var _this=this;
        
        if (! _this._sprite) {
          _this._sprite=new Tonyu.classes.kernel.BaseActor({owner: _this});
          Tonyu.globals.$Sprites.add(_this);
          
        }
      },
      fiber$initSprite :function _trc_NoviceActor_f_initSprite(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! _this._sprite) {
          _this._sprite=new Tonyu.classes.kernel.BaseActor({owner: _this});
          Tonyu.globals.$Sprites.add(_this);
          
        }
        
        _thread.retVal=_this;return;
      },
      say :function _trc_NoviceActor_say(text,size) {
        "use strict";
        var _this=this;
        
        if (! size) {
          size=15;
        }
        _this.initSprite();
        _this._sprite._fukidashi={text: text,size: size,c: 30};
      },
      fiber$say :function _trc_NoviceActor_f_say(_thread,text,size) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! size) {
          size=15;
        }
        
        _thread.enter(function _trc_NoviceActor_ent_say(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initSprite(_thread);
              __pc=1;return;
            case 1:
              
              _this._sprite._fukidashi={text: text,size: size,c: 30};
              _thread.exit(_this);return;
            }
          }
        });
      },
      sprite :function _trc_NoviceActor_sprite(x,y,p) {
        "use strict";
        var _this=this;
        
        _this.go(x,y,p);
      },
      fiber$sprite :function _trc_NoviceActor_f_sprite(_thread,x,y,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_NoviceActor_ent_sprite(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$go(_thread, x, y, p);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      show :function _trc_NoviceActor_show(x,y,p) {
        "use strict";
        var _this=this;
        
        _this.go(x,y,p);
      },
      draw :function _trc_NoviceActor_draw(ctx) {
        "use strict";
        var _this=this;
        
        _this._sprite.draw(ctx);
      },
      getCrashRect :function _trc_NoviceActor_getCrashRect() {
        "use strict";
        var _this=this;
        
        return _this._sprite.getCrashRect();
      },
      fiber$getCrashRect :function _trc_NoviceActor_f_getCrashRect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this._sprite.getCrashRect();return;
        
        
        _thread.retVal=_this;return;
      },
      go :function _trc_NoviceActor_go(x,y,p) {
        "use strict";
        var _this=this;
        
        _this.initSprite();
        _this._sprite.x=x;
        _this._sprite.y=y;
        if (p!=null) {
          _this._sprite.p=p;
        }
      },
      fiber$go :function _trc_NoviceActor_f_go(_thread,x,y,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_NoviceActor_ent_go(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initSprite(_thread);
              __pc=1;return;
            case 1:
              
              _this._sprite.x=x;
              _this._sprite.y=y;
              if (p!=null) {
                _this._sprite.p=p;
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      change :function _trc_NoviceActor_change(p) {
        "use strict";
        var _this=this;
        
        _this.initSprite();
        _this._sprite.p=p;
      },
      fiber$change :function _trc_NoviceActor_f_change(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_NoviceActor_ent_change(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initSprite(_thread);
              __pc=1;return;
            case 1:
              
              _this._sprite.p=p;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"sleep":{"nowait":false},"initSprite":{"nowait":false},"say":{"nowait":false},"sprite":{"nowait":false},"show":{"nowait":true},"draw":{"nowait":true},"getCrashRect":{"nowait":false},"go":{"nowait":false},"change":{"nowait":false}},"fields":{"_sprite":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Actor',
  shortName: 'Actor',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.BaseActor,
  includes: [Tonyu.classes.kernel.InputMod2D,Tonyu.classes.kernel.SpriteMod2D,Tonyu.classes.kernel.QueryMod2D,Tonyu.classes.kernel.OneframeSpriteMod],
  methods: function (__superClass) {
    return {
      main :function _trc_Actor_main() {
        "use strict";
        var _this=this;
        
        "field strict";
      },
      fiber$main :function _trc_Actor_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _thread.retVal=_this;return;
      },
      addSubsprite :function _trc_Actor_addSubsprite(s) {
        "use strict";
        var _this=this;
        
        _this.subsprites=_this.subsprites||new Tonyu.classes.kernel.Sprites({layer: _this});
        _this.subsprites.add(s);
        if (! s.lifeKeeper) {
          s.lifeKeeper=_this;
        }
      },
      fiber$addSubsprite :function _trc_Actor_f_addSubsprite(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.subsprites=_this.subsprites||new Tonyu.classes.kernel.Sprites({layer: _this});
        _this.subsprites.add(s);
        if (! s.lifeKeeper) {
          s.lifeKeeper=_this;
        }
        
        _thread.retVal=_this;return;
      },
      findEventHandlerClass :function _trc_Actor_findEventHandlerClass(type) {
        "use strict";
        var _this=this;
        
        if (type==="touch") {
          return Tonyu.classes.kernel.ActorTouch;
        }
        if (type==="keyDown") {
          return Tonyu.classes.kernel.KeyDownHandler;
        }
        return __superClass.prototype.findEventHandlerClass.apply( _this, [type]);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"addSubsprite":{"nowait":false},"findEventHandlerClass":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.Actor3D',
  shortName: 'Actor3D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.BaseActor,
  includes: [Tonyu.classes.kernel.SpriteMod3D,Tonyu.classes.kernel.QueryMod3D],
  methods: function (__superClass) {
    return {
      main :function _trc_Actor3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_Actor3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Actor3D_initialize(params) {
        "use strict";
        var _this=this;
        
        Tonyu.extend(_this,params);
        _this.initSchedulerMod();
        _this.layer=_this.layer||_this.defaultLayer;
        _this.crashScale=1;
        if (_this.position) {
          _this.x=_this.position.x;
          _this.y=_this.position.y;
          _this.z=_this.position.z;
          
        }
        _this.initSpriteMod();
        _this.addToLayer();
        _this.initAnimMod();
      },
      rotate :function _trc_Actor3D_rotate(axis,angle) {
        "use strict";
        var _this=this;
        
        _this.direction.rotate(axis,angle);
        return _this;
      },
      fiber$rotate :function _trc_Actor3D_f_rotate(_thread,axis,angle) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.direction.rotate(axis,angle);
        _thread.retVal=_this;return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__defaultLayer :function _trc_Actor3D___getter__defaultLayer() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$mainLayer3D;
      },
      dist :function _trc_Actor3D_dist(dx,dy,dz) {
        "use strict";
        var _this=this;
        var t;
        
        if (typeof  dx=="object") {
          t = dx;
          
          dx=t.x-_this.x;
          dy=t.y-_this.y;
          dz=t.z-_this.z;
          
        }
        dz=dz||0;
        return _this.sqrt(dx*dx+dy*dy+dz*dz);
      },
      addSubsprite :function _trc_Actor3D_addSubsprite(s) {
        "use strict";
        var _this=this;
        
        _this.subsprites=_this.subsprites||new Tonyu.classes.kernel.Sprites3D({layer: _this,transform: _this.transform});
        _this.subsprites.add(s);
        if (! s.lifeKeeper) {
          s.lifeKeeper=_this;
        }
      },
      fiber$addSubsprite :function _trc_Actor3D_f_addSubsprite(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.subsprites=_this.subsprites||new Tonyu.classes.kernel.Sprites3D({layer: _this,transform: _this.transform});
        _this.subsprites.add(s);
        if (! s.lifeKeeper) {
          s.lifeKeeper=_this;
        }
        
        _thread.retVal=_this;return;
      },
      localToWorld :function _trc_Actor3D_localToWorld(fru) {
        "use strict";
        var _this=this;
        var res;
        var name;
        var k;
        var _it_6232;
        var vec;
        
        res = _this.position.clone();
        
        _it_6232=Tonyu.iterator(fru,2);
        while(_it_6232.next()) {
          name=_it_6232[0];
          k=_it_6232[1];
          
          vec = _this.direction[name];
          
          if (vec&&vec.mul) {
            res.addX_v(vec.mul(k));
          }
          
        }
        return res;
      },
      fiber$localToWorld :function _trc_Actor3D_f_localToWorld(_thread,fru) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var name;
        var k;
        var _it_6232;
        var vec;
        
        res = _this.position.clone();
        
        _it_6232=Tonyu.iterator(fru,2);
        while(_it_6232.next()) {
          name=_it_6232[0];
          k=_it_6232[1];
          
          vec = _this.direction[name];
          
          if (vec&&vec.mul) {
            res.addX_v(vec.mul(k));
          }
          
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      moveBy :function _trc_Actor3D_moveBy(by) {
        "use strict";
        var _this=this;
        
        if (typeof  by==="number") {
          return _this.moveBy({forward: by});
        }
        _this.position.set(_this.localToWorld(by));
        return _this;
      },
      fiber$moveBy :function _trc_Actor3D_f_moveBy(_thread,by) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Actor3D_ent_moveBy(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  by==="number")) { __pc=2     ; break; }
              _this.fiber$moveBy(_thread, {forward: by});
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
            case 2     :
              
              _this.position.set(_this.localToWorld(by));
              _thread.exit(_this);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"rotate":{"nowait":false},"__getter__defaultLayer":{"nowait":true},"dist":{"nowait":true},"addSubsprite":{"nowait":false},"localToWorld":{"nowait":false},"moveBy":{"nowait":false}},"fields":{"z":{},"direction":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Camera3D',
  shortName: 'Camera3D',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor3D,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Camera3D_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
      },
      fiber$main :function _trc_Camera3D_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Camera3D_initialize(p) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [p]);
        _this.z1=_this.z1||Tonyu.globals.$screenWidth/2;
        _this.z=- _this.z1;
      },
      to2D :function _trc_Camera3D_to2D(pos) {
        "use strict";
        var _this=this;
        var c;
        var x;
        var y;
        var z;
        
        c = pos;
        
        x = c.x;
        
        y = c.y;
        
        z = c.z;
        
        if (z<=0) {
          return null;
        }
        x=x*_this.z1/z;
        y=y*_this.z1/z;
        return {x: x,y: y,z: z,scale: _this.z1/z};
      },
      fiber$to2D :function _trc_Camera3D_f_to2D(_thread,pos) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        var x;
        var y;
        var z;
        
        c = pos;
        
        x = c.x;
        
        y = c.y;
        
        z = c.z;
        
        if (z<=0) {
          _thread.retVal=null;return;
          
        }
        x=x*_this.z1/z;
        y=y*_this.z1/z;
        _thread.retVal={x: x,y: y,z: z,scale: _this.z1/z};return;
        
        
        _thread.retVal=_this;return;
      },
      draw3D :function _trc_Camera3D_draw3D(ctx3d) {
        "use strict";
        var _this=this;
        
        if (ctx3d.camera===_this) {
          return _this;
        }
        __superClass.prototype.draw3D.apply( _this, [ctx3d]);
      },
      fiber$draw3D :function _trc_Camera3D_f_draw3D(_thread,ctx3d) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (ctx3d.camera===_this) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Camera3D_ent_draw3D(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              __superClass.prototype.fiber$draw3D.apply( _this, [_thread, ctx3d]);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      goBehind :function _trc_Camera3D_goBehind(target,dist) {
        "use strict";
        var _this=this;
        
        if (! dist) {
          dist=_this.z1;
        }
        _this.position.set(target.position.sub(target.direction.forward.mul(dist)));
        _this.direction.set(target.direction);
      },
      fiber$goBehind :function _trc_Camera3D_f_goBehind(_thread,target,dist) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! dist) {
          dist=_this.z1;
        }
        _this.position.set(target.position.sub(target.direction.forward.mul(dist)));
        _this.direction.set(target.direction);
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"to2D":{"nowait":false},"draw3D":{"nowait":false},"goBehind":{"nowait":false}},"fields":{"z1":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.GameScreen',
  shortName: 'GameScreen',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_GameScreen_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_GameScreen_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_GameScreen_initialize(opt) {
        "use strict";
        var _this=this;
        
        _this.extend(opt);
        _this.resize(_this.width,_this.height);
        _this.bgColor="rgb(20,80,180)";
        _this.isDrawGrid=Tonyu.globals.$Sprites.isDrawGrid;
      },
      resize :function _trc_GameScreen_resize(width,height) {
        "use strict";
        var _this=this;
        
        _this.width=width;
        _this.height=height;
        _this.buf=$("<canvas>").attr({width: width,height: height});
        _this.ctx=_this.buf[0].getContext("2d");
        _this.fireEvent("resize",width,height);
      },
      fiber$resize :function _trc_GameScreen_f_resize(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.width=width;
        _this.height=height;
        _this.buf=$("<canvas>").attr({width: width,height: height});
        _this.ctx=_this.buf[0].getContext("2d");
        _this.fireEvent("resize",width,height);
        
        _thread.retVal=_this;return;
      },
      setBounds :function _trc_GameScreen_setBounds(b) {
        "use strict";
        var _this=this;
        
        _this.bounds=b;
      },
      fiber$setBounds :function _trc_GameScreen_f_setBounds(_thread,b) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.bounds=b;
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_GameScreen_draw(cctx) {
        "use strict";
        var _this=this;
        var b;
        
        b = _this.bounds;
        
        _this.fillCanvas();
        _this.sprites.draw(_this.buf[0]);
        cctx.drawImage(_this.buf[0],0,0,_this.width,_this.height,b.left,b.top,b.width,b.height);
      },
      canvas2buf :function _trc_GameScreen_canvas2buf(point) {
        "use strict";
        var _this=this;
        var b;
        
        b = _this.bounds;
        
        if (! b) {
          return point;
        }
        return {x: (point.x-b.left)/b.width*_this.width,y: (point.y-b.top)/b.height*_this.height};
      },
      fiber$canvas2buf :function _trc_GameScreen_f_canvas2buf(_thread,point) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b;
        
        b = _this.bounds;
        
        if (! b) {
          _thread.retVal=point;return;
          
        }
        _thread.retVal={x: (point.x-b.left)/b.width*_this.width,y: (point.y-b.top)/b.height*_this.height};return;
        
        
        _thread.retVal=_this;return;
      },
      setBGColor :function _trc_GameScreen_setBGColor(c) {
        "use strict";
        var _this=this;
        
        _this.bgColor=c;
      },
      fiber$setBGColor :function _trc_GameScreen_f_setBGColor(_thread,c) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.bgColor=c;
        
        _thread.retVal=_this;return;
      },
      fillCanvas :function _trc_GameScreen_fillCanvas() {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.buf[0].getContext("2d");
        
        ctx.save();
        ctx.fillStyle=_this.bgColor+"";
        ctx.fillRect(0,0,_this.width,_this.height);
        ctx.restore();
      },
      fiber$fillCanvas :function _trc_GameScreen_f_fillCanvas(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        ctx = _this.buf[0].getContext("2d");
        
        ctx.save();
        ctx.fillStyle=_this.bgColor+"";
        ctx.fillRect(0,0,_this.width,_this.height);
        ctx.restore();
        
        _thread.retVal=_this;return;
      },
      scrollTo :function _trc_GameScreen_scrollTo(scrollX,scrollY) {
        "use strict";
        var _this=this;
        
        _this.sprites.scrollTo(scrollX,scrollY);
      },
      fiber$scrollTo :function _trc_GameScreen_f_scrollTo(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.sprites.scrollTo(scrollX,scrollY);
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"resize":{"nowait":false},"setBounds":{"nowait":false},"draw":{"nowait":true},"canvas2buf":{"nowait":false},"setBGColor":{"nowait":false},"fillCanvas":{"nowait":false},"scrollTo":{"nowait":false}},"fields":{"isDrawGrid":{},"buf":{},"ctx":{},"bounds":{},"sprites":{},"bgColor":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Map',
  shortName: 'Map',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Map_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Map_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Map_initialize(param) {
        "use strict";
        var _this=this;
        var j;
        var rows;
        var i;
        
        _this.bufSplit=1024;
        _this.sx=0;
        _this.sy=0;
        _this.alpha=255;
        __superClass.apply( _this, [param]);
        _this.chipWidth=_this.chipWidth||32;
        _this.chipHeight=_this.chipHeight||_this.chipWidth||32;
        if (typeof  _this.col!=="number") {
          _this.col=Tonyu.globals.$screenWidth/_this.chipWidth;
        }
        if (typeof  _this.row!=="number") {
          _this.row=Tonyu.globals.$screenHeight/_this.chipHeight;
        }
        _this.col=_this.floor(_this.col);
        _this.row=_this.floor(_this.row);
        _this.bufAry=_this.createBuf(_this.col*_this.chipWidth,_this.row*_this.chipHeight);
        _this.mapObj=true;
        _this.mapTable=[];
        _this.mapOnTable=[];
        j = 0;
        for (; j<_this.row ; j++) {
          {
            rows = [];
            
            i = 0;
            for (; i<_this.col ; i++) {
              {
                rows.push(- 1);
              }
            }
            _this.mapTable.push(rows);
          }
        }
        j = 0;
        for (; j<_this.row ; j++) {
          {
            rows = [];
            
            i = 0;
            for (; i<_this.col ; i++) {
              {
                rows.push(- 1);
              }
            }
            _this.mapOnTable.push(rows);
          }
        }
        _this.initMap();
      },
      createBuf :function _trc_Map_createBuf(width,height) {
        "use strict";
        var _this=this;
        var rh;
        var ary;
        var j;
        var a;
        var h;
        var rw;
        var i;
        var w;
        
        rh = _this.floor(height);
        
        ary = [];
        
        j = 0;
        for (; 0<rh ; j++) {
          {
            a = [];
            
            h = rh;
            
            if (rh>_this.bufSplit) {
              h=_this.bufSplit;
            }
            if (rh<2) {
              h=2;
            }
            rw = _this.floor(width);
            
            i = 0;
            for (; 0<rw ; i++) {
              {
                w = rw;
                
                if (rw>_this.bufSplit) {
                  w=_this.bufSplit;
                }
                if (rw<2) {
                  w=2;
                }
                a.push($("<canvas>").attr({width: w,height: h}));
                rw-=_this.bufSplit;
              }
            }
            ary.push(a);
            rh-=_this.bufSplit;
          }
        }
        return ary;
      },
      fiber$createBuf :function _trc_Map_f_createBuf(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var rh;
        var ary;
        var j;
        var a;
        var h;
        var rw;
        var i;
        var w;
        
        rh = _this.floor(height);
        
        ary = [];
        
        j = 0;
        for (; 0<rh ; j++) {
          {
            a = [];
            
            h = rh;
            
            if (rh>_this.bufSplit) {
              h=_this.bufSplit;
            }
            if (rh<2) {
              h=2;
            }
            rw = _this.floor(width);
            
            i = 0;
            for (; 0<rw ; i++) {
              {
                w = rw;
                
                if (rw>_this.bufSplit) {
                  w=_this.bufSplit;
                }
                if (rw<2) {
                  w=2;
                }
                a.push($("<canvas>").attr({width: w,height: h}));
                rw-=_this.bufSplit;
              }
            }
            ary.push(a);
            rh-=_this.bufSplit;
          }
        }
        _thread.retVal=ary;return;
        
        
        _thread.retVal=_this;return;
      },
      initMap :function _trc_Map_initMap() {
        "use strict";
        var _this=this;
        var i;
        var j;
        
        if (! _this.mapData) {
          return _this;
        }
        if (! _this.mapOnData) {
          return _this;
        }
        i = 0;
        for (; i<_this.row ; i++) {
          {
            j = 0;
            for (; j<_this.col ; j++) {
              {
                _this.setAll(j,i,_this.mapData[i][j],_this.mapOnData[i][j]);
              }
            }
          }
        }
      },
      fiber$initMap :function _trc_Map_f_initMap(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var j;
        
        if (! _this.mapData) {
          _thread.retVal=_this;return;
          
        }
        if (! _this.mapOnData) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Map_ent_initMap(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              i = 0;
              
            case 1:
              if (!(i<_this.row)) { __pc=7     ; break; }
              j = 0;
              
            case 2:
              if (!(j<_this.col)) { __pc=5     ; break; }
              _this.fiber$setAll(_thread, j, i, _this.mapData[i][j], _this.mapOnData[i][j]);
              __pc=3;return;
            case 3:
              
            case 4     :
              j++;
              __pc=2;break;
            case 5     :
              
            case 6     :
              i++;
              __pc=1;break;
            case 7     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      redrawMap :function _trc_Map_redrawMap() {
        "use strict";
        var _this=this;
        
        return _this.redraw();
      },
      fiber$redrawMap :function _trc_Map_f_redrawMap(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map_ent_redrawMap(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$redraw(_thread);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      redraw :function _trc_Map_redraw() {
        "use strict";
        var _this=this;
        var i;
        var j;
        
        if (! _this.mapTable) {
          return _this;
        }
        _this.bufAry=_this.createBuf(_this.col*_this.chipWidth,_this.row*_this.chipHeight);
        i = 0;
        for (; i<_this.row ; i++) {
          {
            j = 0;
            for (; j<_this.col ; j++) {
              {
                _this.set(j,i,_this.mapTable[i][j]);
              }
            }
          }
        }
        if (! _this.mapOnTable) {
          return _this;
        }
        i = 0;
        for (; i<_this.row ; i++) {
          {
            j = 0;
            for (; j<_this.col ; j++) {
              {
                _this.setOn(j,i,_this.mapOnTable[i][j]);
              }
            }
          }
        }
      },
      fiber$redraw :function _trc_Map_f_redraw(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var j;
        
        if (! _this.mapTable) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Map_ent_redraw(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$createBuf(_thread, _this.col*_this.chipWidth, _this.row*_this.chipHeight);
              __pc=1;return;
            case 1:
              _this.bufAry=_thread.retVal;
              
              i = 0;
              
            case 2:
              if (!(i<_this.row)) { __pc=8     ; break; }
              j = 0;
              
            case 3:
              if (!(j<_this.col)) { __pc=6     ; break; }
              _this.fiber$set(_thread, j, i, _this.mapTable[i][j]);
              __pc=4;return;
            case 4:
              
            case 5     :
              j++;
              __pc=3;break;
            case 6     :
              
            case 7     :
              i++;
              __pc=2;break;
            case 8     :
              
              if (!(! _this.mapOnTable)) { __pc=9     ; break; }
              _thread.exit(_this);return;
            case 9     :
              
              i = 0;
              
            case 10:
              if (!(i<_this.row)) { __pc=16    ; break; }
              j = 0;
              
            case 11:
              if (!(j<_this.col)) { __pc=14    ; break; }
              _this.fiber$setOn(_thread, j, i, _this.mapOnTable[i][j]);
              __pc=12;return;
            case 12:
              
            case 13    :
              j++;
              __pc=11;break;
            case 14    :
              
            case 15    :
              i++;
              __pc=10;break;
            case 16    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      resolve :function _trc_Map_resolve(fileName,fallback) {
        "use strict";
        var _this=this;
        var r;
        
        if (typeof  fileName==="string") {
          r = _this.file("../maps/").rel(fileName);
          
          if (! fallback||r.exists()) {
            return r;
          }
          r=_this.file(fileName);
          return r;
          
        }
        return fileName;
      },
      fiber$resolve :function _trc_Map_f_resolve(_thread,fileName,fallback) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        _thread.enter(function _trc_Map_ent_resolve(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  fileName==="string")) { __pc=3     ; break; }
              r = _this.file("../maps/").rel(fileName);
              
              if (!(! fallback||r.exists())) { __pc=1     ; break; }
              _thread.exit(r);return;
            case 1     :
              
              _this.fiber$file(_thread, fileName);
              __pc=2;return;
            case 2:
              r=_thread.retVal;
              
              _thread.exit(r);return;
            case 3     :
              
              _thread.exit(fileName);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      load :function _trc_Map_load(dataFile) {
        "use strict";
        var _this=this;
        
        dataFile=_this.resolve(dataFile,true);
        if (! dataFile||! dataFile.obj) {
          _this.print(dataFile);
          throw new Error(dataFile+" is not a file!");
          
          
        }
        _this.baseData=dataFile.obj();
        _this.loadFromBaseData(_this.baseData);
      },
      fiber$load :function _trc_Map_f_load(_thread,dataFile) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map_ent_load(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resolve(_thread, dataFile, true);
              __pc=1;return;
            case 1:
              dataFile=_thread.retVal;
              
              if (! dataFile||! dataFile.obj) {
                _this.print(dataFile);
                throw new Error(dataFile+" is not a file!");
                
                
              }
              _this.baseData=dataFile.obj();
              _this.fiber$loadFromBaseData(_thread, _this.baseData);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      loadFromBaseData :function _trc_Map_loadFromBaseData(baseData) {
        "use strict";
        var _this=this;
        
        _this.mapTable=baseData[0];
        _this.mapData=_this.mapTable;
        _this.row=_this.mapTable.length;
        _this.col=_this.mapTable[0].length;
        _this.mapOnTable=baseData[1];
        _this.mapOnData=_this.mapOnTable;
        if (baseData[2]) {
          _this.chipWidth=(baseData[2]-0)||_this.chipWidth||32;
        }
        if (baseData[3]) {
          _this.chipHeight=(baseData[3]-0)||_this.chipHeight||32;
        }
        _this.bufAry=_this.createBuf(_this.col*_this.chipWidth,_this.row*_this.chipHeight);
        _this.initMap();
      },
      fiber$loadFromBaseData :function _trc_Map_f_loadFromBaseData(_thread,baseData) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.mapTable=baseData[0];
        _this.mapData=_this.mapTable;
        _this.row=_this.mapTable.length;
        _this.col=_this.mapTable[0].length;
        _this.mapOnTable=baseData[1];
        _this.mapOnData=_this.mapOnTable;
        if (baseData[2]) {
          _this.chipWidth=(baseData[2]-0)||_this.chipWidth||32;
        }
        if (baseData[3]) {
          _this.chipHeight=(baseData[3]-0)||_this.chipHeight||32;
        }
        
        _thread.enter(function _trc_Map_ent_loadFromBaseData(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$createBuf(_thread, _this.col*_this.chipWidth, _this.row*_this.chipHeight);
              __pc=1;return;
            case 1:
              _this.bufAry=_thread.retVal;
              
              _this.fiber$initMap(_thread);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      save :function _trc_Map_save(saveFileName) {
        "use strict";
        var _this=this;
        var saveDataFile;
        var data;
        
        saveDataFile = _this.resolve(saveFileName);
        
        data = [_this.mapTable,_this.mapOnTable,_this.chipWidth,_this.chipHeight];
        
        saveDataFile.obj(data);
      },
      fiber$save :function _trc_Map_f_save(_thread,saveFileName) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var saveDataFile;
        var data;
        
        
        _thread.enter(function _trc_Map_ent_save(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resolve(_thread, saveFileName);
              __pc=1;return;
            case 1:
              saveDataFile=_thread.retVal;
              
              data = [_this.mapTable,_this.mapOnTable,_this.chipWidth,_this.chipHeight];
              
              saveDataFile.obj(data);
              _thread.exit(_this);return;
            }
          }
        });
      },
      setAll :function _trc_Map_setAll(setCol,setRow,p,onP) {
        "use strict";
        var _this=this;
        var oldP;
        var oldOnP;
        var x1;
        var x2;
        var y1;
        var y2;
        var hs;
        var j;
        var ws;
        var i;
        var drawX;
        var drawY;
        var cv;
        var ctx;
        var pImg;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          return _this;
        }
        oldP = _this.mapTable[setRow][setCol];
        
        oldOnP = _this.mapOnTable[setRow][setCol];
        
        _this.mapTable[setRow][setCol]=p;
        _this.mapOnTable[setRow][setCol]=onP;
        x1 = _this.floor(setCol*_this.chipWidth/_this.bufSplit);
        
        x2 = _this.floor((setCol*_this.chipWidth+(_this.chipWidth-1))/_this.bufSplit);
        
        y1 = _this.floor(setRow*_this.chipHeight/_this.bufSplit);
        
        y2 = _this.floor((setRow*_this.chipHeight+(_this.chipHeight-1))/_this.bufSplit);
        
        hs = _this.bufAry.length;
        
        j = y1;
        for (; j<=y2 ; j++) {
          {
            ws = _this.bufAry[j].length;
            
            i = x1;
            for (; i<=x2 ; i++) {
              {
                drawX = setCol*_this.chipWidth-i*_this.bufSplit;
                
                drawY = setRow*_this.chipHeight-j*_this.bufSplit;
                
                cv = _this.bufAry[j][i];
                
                if (! cv) {
                  return _this;
                }
                ctx = cv[0].getContext("2d");
                
                if (! ctx) {
                  return _this;
                }
                p=Math.floor(p);
                pImg = Tonyu.globals.$imageList[p];
                
                ctx.clearRect(drawX,drawY,_this.chipWidth,_this.chipHeight);
                if (pImg) {
                  ctx.save();
                  ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,drawX,drawY,_this.chipWidth,_this.chipHeight);
                  ctx.restore();
                  
                }
                onP=Math.floor(onP);
                pImg=Tonyu.globals.$imageList[onP];
                if (pImg) {
                  ctx.save();
                  ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,drawX,drawY,_this.chipWidth,_this.chipHeight);
                  ctx.restore();
                  
                }
              }
            }
          }
        }
      },
      fiber$setAll :function _trc_Map_f_setAll(_thread,setCol,setRow,p,onP) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var oldP;
        var oldOnP;
        var x1;
        var x2;
        var y1;
        var y2;
        var hs;
        var j;
        var ws;
        var i;
        var drawX;
        var drawY;
        var cv;
        var ctx;
        var pImg;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          _thread.retVal=_this;return;
          
        }
        oldP = _this.mapTable[setRow][setCol];
        
        oldOnP = _this.mapOnTable[setRow][setCol];
        
        _this.mapTable[setRow][setCol]=p;
        _this.mapOnTable[setRow][setCol]=onP;
        x1 = _this.floor(setCol*_this.chipWidth/_this.bufSplit);
        
        x2 = _this.floor((setCol*_this.chipWidth+(_this.chipWidth-1))/_this.bufSplit);
        
        y1 = _this.floor(setRow*_this.chipHeight/_this.bufSplit);
        
        y2 = _this.floor((setRow*_this.chipHeight+(_this.chipHeight-1))/_this.bufSplit);
        
        hs = _this.bufAry.length;
        
        j = y1;
        for (; j<=y2 ; j++) {
          {
            ws = _this.bufAry[j].length;
            
            i = x1;
            for (; i<=x2 ; i++) {
              {
                drawX = setCol*_this.chipWidth-i*_this.bufSplit;
                
                drawY = setRow*_this.chipHeight-j*_this.bufSplit;
                
                cv = _this.bufAry[j][i];
                
                if (! cv) {
                  _thread.retVal=_this;return;
                  
                }
                ctx = cv[0].getContext("2d");
                
                if (! ctx) {
                  _thread.retVal=_this;return;
                  
                }
                p=Math.floor(p);
                pImg = Tonyu.globals.$imageList[p];
                
                ctx.clearRect(drawX,drawY,_this.chipWidth,_this.chipHeight);
                if (pImg) {
                  ctx.save();
                  ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,drawX,drawY,_this.chipWidth,_this.chipHeight);
                  ctx.restore();
                  
                }
                onP=Math.floor(onP);
                pImg=Tonyu.globals.$imageList[onP];
                if (pImg) {
                  ctx.save();
                  ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,drawX,drawY,_this.chipWidth,_this.chipHeight);
                  ctx.restore();
                  
                }
              }
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      set :function _trc_Map_set(setCol,setRow,p) {
        "use strict";
        var _this=this;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          return _this;
        }
        _this.setAll(setCol,setRow,p,_this.mapOnTable[setRow][setCol]);
      },
      fiber$set :function _trc_Map_f_set(_thread,setCol,setRow,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Map_ent_set(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setAll(_thread, setCol, setRow, p, _this.mapOnTable[setRow][setCol]);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setOn :function _trc_Map_setOn(setCol,setRow,onP) {
        "use strict";
        var _this=this;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          return _this;
        }
        _this.setAll(setCol,setRow,_this.mapTable[setRow][setCol],onP);
      },
      fiber$setOn :function _trc_Map_f_setOn(_thread,setCol,setRow,onP) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Map_ent_setOn(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setAll(_thread, setCol, setRow, _this.mapTable[setRow][setCol], onP);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setOnAt :function _trc_Map_setOnAt(setX,setY,p) {
        "use strict";
        var _this=this;
        
        _this.setOn(Math.floor((setX-_this.sx)/_this.chipWidth),Math.floor((setY-_this.sy)/_this.chipHeight),p);
      },
      fiber$setOnAt :function _trc_Map_f_setOnAt(_thread,setX,setY,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map_ent_setOnAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setOn(_thread, Math.floor((setX-_this.sx)/_this.chipWidth), Math.floor((setY-_this.sy)/_this.chipHeight), p);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setAt :function _trc_Map_setAt(setX,setY,p) {
        "use strict";
        var _this=this;
        
        _this.set(Math.floor((setX-_this.sx)/_this.chipWidth),Math.floor((setY-_this.sy)/_this.chipHeight),p);
      },
      fiber$setAt :function _trc_Map_f_setAt(_thread,setX,setY,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map_ent_setAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$set(_thread, Math.floor((setX-_this.sx)/_this.chipWidth), Math.floor((setY-_this.sy)/_this.chipHeight), p);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      get :function _trc_Map_get(getCol,getRow) {
        "use strict";
        var _this=this;
        
        if (getCol<_this.col&&getRow<_this.row&&getCol>=0&&getRow>=0) {
          return _this.mapTable[getRow][getCol];
        }
        return - 1;
      },
      fiber$get :function _trc_Map_f_get(_thread,getCol,getRow) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (getCol<_this.col&&getRow<_this.row&&getCol>=0&&getRow>=0) {
          _thread.retVal=_this.mapTable[getRow][getCol];return;
          
        }
        _thread.retVal=- 1;return;
        
        
        _thread.retVal=_this;return;
      },
      getAt :function _trc_Map_getAt(getX,getY) {
        "use strict";
        var _this=this;
        
        return _this.get(Math.floor((getX-_this.sx)/_this.chipWidth),Math.floor((getY-_this.sy)/_this.chipHeight));
      },
      fiber$getAt :function _trc_Map_f_getAt(_thread,getX,getY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map_ent_getAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$get(_thread, Math.floor((getX-_this.sx)/_this.chipWidth), Math.floor((getY-_this.sy)/_this.chipHeight));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getOn :function _trc_Map_getOn(getCol,getRow) {
        "use strict";
        var _this=this;
        
        if (getCol<_this.col&&getRow<_this.row&&getCol>=0&&getRow>=0) {
          return _this.mapOnTable[getRow][getCol];
        }
        return - 1;
      },
      fiber$getOn :function _trc_Map_f_getOn(_thread,getCol,getRow) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (getCol<_this.col&&getRow<_this.row&&getCol>=0&&getRow>=0) {
          _thread.retVal=_this.mapOnTable[getRow][getCol];return;
          
        }
        _thread.retVal=- 1;return;
        
        
        _thread.retVal=_this;return;
      },
      getOnAt :function _trc_Map_getOnAt(getX,getY) {
        "use strict";
        var _this=this;
        
        return _this.getOn(Math.floor((getX-_this.sx)/_this.chipWidth),Math.floor((getY-_this.sy)/_this.chipHeight));
      },
      fiber$getOnAt :function _trc_Map_f_getOnAt(_thread,getX,getY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map_ent_getOnAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getOn(_thread, Math.floor((getX-_this.sx)/_this.chipWidth), Math.floor((getY-_this.sy)/_this.chipHeight));
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      scrollTo :function _trc_Map_scrollTo(scrollX,scrollY) {
        "use strict";
        var _this=this;
        
        _this.sx=- scrollX;
        _this.sy=- scrollY;
      },
      fiber$scrollTo :function _trc_Map_f_scrollTo(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.sx=- scrollX;
        _this.sy=- scrollY;
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_Map_draw(ctx) {
        "use strict";
        var _this=this;
        var lay;
        var lsx;
        var lsy;
        var lwx;
        var lwy;
        var ls;
        var lr;
        var hs;
        var sum;
        var j;
        var ws;
        var i;
        var pCv;
        var pCtx;
        var dx;
        var dy;
        var dw;
        var dh;
        var mx1;
        var my1;
        var mx2;
        var my2;
        
        lay = Tonyu.globals.$Screen.findLayer(_this.layer);
        
        lsx = lay.spx;
        
        lsy = lay.spy;
        
        lwx = lay.wpx;
        
        lwy = lay.wpy;
        
        ls = (typeof  lay.scale=="number")?lay.scale:1;
        
        lr = (typeof  lay.rotation=="number")?lay.rotation:0;
        
        hs = _this.bufAry.length;
        
        sum = 0;
        
        ctx.save();
        j = 0;
        for (; j<hs ; j++) {
          {
            ws = _this.bufAry[j].length;
            
            i = 0;
            for (; i<ws ; i++) {
              {
                pCv = _this.bufAry[j][i];
                
                if (! pCv) {
                  return _this;
                }
                pCtx = pCv[0];
                
                if (! pCtx) {
                  return _this;
                }
                dx = _this.sx+i*_this.bufSplit;
                
                dy = _this.sy+j*_this.bufSplit;
                
                dw = pCtx.width;
                
                dh = pCtx.height;
                
                mx1 = lsx+(dx-lwx)*ls;
                
                my1 = lsy+(dy-lwy)*ls;
                
                mx2 = lsx+(dx-lwx+dw)*ls;
                
                my2 = lsy+(dy-lwy+dh)*ls;
                
                if (lr!=0||(0<=mx2&&mx1<Tonyu.globals.$screenWidth&&0<=my2&&my1<Tonyu.globals.$screenHeight)) {
                  ctx.globalAlpha=_this.alpha/255;
                  ctx.drawImage(pCtx,0,0,dw,dh,dx,dy,dw,dh);
                  sum++;
                  
                }
              }
            }
          }
        }
        ctx.restore();
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"createBuf":{"nowait":false},"initMap":{"nowait":false},"redrawMap":{"nowait":false},"redraw":{"nowait":false},"resolve":{"nowait":false},"load":{"nowait":false},"loadFromBaseData":{"nowait":false},"save":{"nowait":false},"setAll":{"nowait":false},"set":{"nowait":false},"setOn":{"nowait":false},"setOnAt":{"nowait":false},"setAt":{"nowait":false},"get":{"nowait":false},"getAt":{"nowait":false},"getOn":{"nowait":false},"getOnAt":{"nowait":false},"scrollTo":{"nowait":false},"draw":{"nowait":true}},"fields":{"bufSplit":{},"sx":{},"sy":{},"chipWidth":{},"chipHeight":{},"col":{},"row":{},"bufAry":{},"mapObj":{},"mapTable":{},"mapOnTable":{},"mapData":{},"mapOnData":{},"baseData":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Map2',
  shortName: 'Map2',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Map2_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
        
        
      },
      fiber$main :function _trc_Map2_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        
        
        _thread.retVal=_this;return;
      },
      getChipLayer :function _trc_Map2_getChipLayer(name) {
        "use strict";
        var _this=this;
        var mp;
        var _it_6300;
        
        _it_6300=Tonyu.iterator(_this.chipLayers,1);
        while(_it_6300.next()) {
          mp=_it_6300[0];
          
          if (mp.name===name) {
            return mp;
          }
          
        }
        return null;
      },
      fiber$getChipLayer :function _trc_Map2_f_getChipLayer(_thread,name) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var mp;
        var _it_6300;
        
        _it_6300=Tonyu.iterator(_this.chipLayers,1);
        while(_it_6300.next()) {
          mp=_it_6300[0];
          
          if (mp.name===name) {
            _thread.retVal=mp;return;
            
          }
          
        }
        _thread.retVal=null;return;
        
        
        _thread.retVal=_this;return;
      },
      addChipLayer :function _trc_Map2_addChipLayer(name) {
        "use strict";
        var _this=this;
        var res;
        
        res = new Tonyu.classes.kernel.Matrix;
        
        res.name=name;
        _this.chipLayers.push(res);
        return res;
      },
      fiber$addChipLayer :function _trc_Map2_f_addChipLayer(_thread,name) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        res = new Tonyu.classes.kernel.Matrix;
        
        res.name=name;
        _this.chipLayers.push(res);
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      __setter__expand :function _trc_Map2___setter__expand(v) {
        "use strict";
        var _this=this;
        var k;
        var _it_6304;
        
        switch (typeof  v) {
        case "string":
          v=v.split(/\s*[\s,]\s*/);
        case "object":
          if (v.join) {
            _this._expand={};
            _it_6304=Tonyu.iterator(v,1);
            while(_it_6304.next()) {
              k=_it_6304[0];
              
              _this._expand[k]=true;
            }
            
          } else {
            _this._expand=v;
            
          }
          break;
          
        }
        if (_this._expand.all) {
          _this._expand={row: true,col: true};
        }
        if (_this._expand.row) {
          _this._expand.top=_this._expand.bottom=true;
          
        }
        if (_this._expand.col) {
          _this._expand.left=_this._expand.right=true;
          
        }
      },
      __getter__expand :function _trc_Map2___getter__expand() {
        "use strict";
        var _this=this;
        
        return _this._expand;
      },
      initialize :function _trc_Map2_initialize(param) {
        "use strict";
        var _this=this;
        
        _this._expand={};
        _this.chipLayers=[];
        param=param||{};
        _this.bufferSize=param.bufferSize||1024;
        _this.alpha=255;
        __superClass.apply( _this, [param]);
        _this.x=_this.x||0;
        _this.y=_this.y||0;
        if (! _this.align) {
          _this.align="left top";
        }
        if (typeof  _this.col==="number") {
          _this.col=_this.floor(_this.col);
          
        } else {
          _this.col=0;
          _this.expand.right=true;
          
        }
        if (typeof  _this.row==="number") {
          _this.row=_this.floor(_this.row);
          
        } else {
          _this.row=0;
          _this.expand.bottom=true;
          
        }
        _this.mapObj=true;
        _this.addChipLayer("base");
        _this.addChipLayer("on");
        _this.setWallFilter({layer: "on"});
      },
      setPivot :function _trc_Map2_setPivot(x,y) {
        "use strict";
        var _this=this;
        
        _this.align=["left","top",x,y];
      },
      fiber$setPivot :function _trc_Map2_f_setPivot(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.align=["left","top",x,y];
        
        _thread.retVal=_this;return;
      },
      initBuf :function _trc_Map2_initBuf(p) {
        "use strict";
        var _this=this;
        var pImg;
        
        if (_this.bufMat) {
          return _this;
        }
        _this.bufMat=new Tonyu.classes.kernel.Matrix;
        pImg = Tonyu.globals.$imageList[p];
        
        if (pImg) {
          _this.chipWidth=_this.chipWidth||pImg.width;
          _this.chipHeight=_this.chipHeight||pImg.height;
          
        } else {
          _this.chipWidth=_this.chipWidth||32;
          _this.chipHeight=_this.chipHeight||_this.chipWidth||32;
          
        }
        _this.parseBufferSize();
      },
      fiber$initBuf :function _trc_Map2_f_initBuf(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var pImg;
        
        if (_this.bufMat) {
          _thread.retVal=_this;return;
          
        }
        _this.bufMat=new Tonyu.classes.kernel.Matrix;
        pImg = Tonyu.globals.$imageList[p];
        
        if (pImg) {
          _this.chipWidth=_this.chipWidth||pImg.width;
          _this.chipHeight=_this.chipHeight||pImg.height;
          
        } else {
          _this.chipWidth=_this.chipWidth||32;
          _this.chipHeight=_this.chipHeight||_this.chipWidth||32;
          
        }
        
        _thread.enter(function _trc_Map2_ent_initBuf(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$parseBufferSize(_thread);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      parseBufferSize :function _trc_Map2_parseBufferSize() {
        "use strict";
        var _this=this;
        function fitSize(size,unit) {
          
          size=_this.floor(size/unit)*unit;
          if (size<unit) {
            size=unit;
          }
          return size;
        }
        
        if (typeof  _this.bufferSize==="number") {
          _this.bufferSize={w: _this.bufferSize,h: _this.bufferSize};
          
        } else {
          _this.bufferSize.w=_this.bufferSize.w||_this.bufferSize.width||1024;
          _this.bufferSize.h=_this.bufferSize.h||_this.bufferSize.height||1024;
          
        }
        _this.bufferSize.w=fitSize(_this.bufferSize.w,_this.chipWidth);
        _this.bufferSize.h=fitSize(_this.bufferSize.h,_this.chipHeight);
      },
      fiber$parseBufferSize :function _trc_Map2_f_parseBufferSize(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        function fitSize(size,unit) {
          
          size=_this.floor(size/unit)*unit;
          if (size<unit) {
            size=unit;
          }
          return size;
        }
        
        if (typeof  _this.bufferSize==="number") {
          _this.bufferSize={w: _this.bufferSize,h: _this.bufferSize};
          
        } else {
          _this.bufferSize.w=_this.bufferSize.w||_this.bufferSize.width||1024;
          _this.bufferSize.h=_this.bufferSize.h||_this.bufferSize.height||1024;
          
        }
        _this.bufferSize.w=fitSize(_this.bufferSize.w,_this.chipWidth);
        _this.bufferSize.h=fitSize(_this.bufferSize.h,_this.chipHeight);
        
        _thread.retVal=_this;return;
      },
      getBuf :function _trc_Map2_getBuf(col,row) {
        "use strict";
        var _this=this;
        var w;
        var h;
        var cPerBuf;
        var rPerBuf;
        var bx;
        var by;
        var canvas;
        
        _this.initBuf();
        w = _this.bufferSize.w;
        
        h = _this.bufferSize.h;
        
        cPerBuf = _this.floor(w/_this.chipWidth);
        
        rPerBuf = _this.floor(h/_this.chipHeight);
        
        bx = _this.floor(col/cPerBuf);
        
        by = _this.floor(row/rPerBuf);
        
        canvas = _this.bufMat.get(bx,by);
        
        if (! canvas) {
          canvas=$("<canvas>").attr({width: w,height: h});
          _this.bufMat.set(bx,by,canvas);
          
        }
        return {canvas: canvas,context: canvas[0].getContext("2d"),bx: bx,by: by,left: (col%cPerBuf)*_this.chipWidth,top: (row%rPerBuf)*_this.chipHeight,width: _this.chipWidth,height: _this.chipHeight};
      },
      fiber$getBuf :function _trc_Map2_f_getBuf(_thread,col,row) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var w;
        var h;
        var cPerBuf;
        var rPerBuf;
        var bx;
        var by;
        var canvas;
        
        
        _thread.enter(function _trc_Map2_ent_getBuf(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initBuf(_thread);
              __pc=1;return;
            case 1:
              
              w = _this.bufferSize.w;
              
              h = _this.bufferSize.h;
              
              cPerBuf = _this.floor(w/_this.chipWidth);
              
              rPerBuf = _this.floor(h/_this.chipHeight);
              
              bx = _this.floor(col/cPerBuf);
              
              by = _this.floor(row/rPerBuf);
              
              canvas = _this.bufMat.get(bx,by);
              
              if (! canvas) {
                canvas=$("<canvas>").attr({width: w,height: h});
                _this.bufMat.set(bx,by,canvas);
                
              }
              _thread.exit({canvas: canvas,context: canvas[0].getContext("2d"),bx: bx,by: by,left: (col%cPerBuf)*_this.chipWidth,top: (row%rPerBuf)*_this.chipHeight,width: _this.chipWidth,height: _this.chipHeight});return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      pack :function _trc_Map2_pack() {
        "use strict";
        var _this=this;
        var chipLayer;
        var _it_6318;
        
        _this.row=_this.col=0;
        _it_6318=Tonyu.iterator(_this.chipLayers,1);
        while(_it_6318.next()) {
          chipLayer=_it_6318[0];
          
          if (chipLayer.xmax+1>_this.col) {
            _this.col=chipLayer.xmax+1;
          }
          if (chipLayer.ymax+1>_this.row) {
            _this.row=chipLayer.ymax+1;
          }
          
        }
      },
      fiber$pack :function _trc_Map2_f_pack(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var chipLayer;
        var _it_6318;
        
        _this.row=_this.col=0;
        _it_6318=Tonyu.iterator(_this.chipLayers,1);
        while(_it_6318.next()) {
          chipLayer=_it_6318[0];
          
          if (chipLayer.xmax+1>_this.col) {
            _this.col=chipLayer.xmax+1;
          }
          if (chipLayer.ymax+1>_this.row) {
            _this.row=chipLayer.ymax+1;
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      redraw :function _trc_Map2_redraw() {
        "use strict";
        var _this=this;
        var i;
        var j;
        
        _this.initBuf();
        i = 0;
        for (; i<_this.row ; i++) {
          {
            j = 0;
            for (; j<_this.col ; j++) {
              {
                _this.redrawChip(j,i);
              }
            }
          }
        }
      },
      fiber$redraw :function _trc_Map2_f_redraw(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var j;
        
        
        _thread.enter(function _trc_Map2_ent_redraw(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initBuf(_thread);
              __pc=1;return;
            case 1:
              
              i = 0;
              
            case 2:
              if (!(i<_this.row)) { __pc=8     ; break; }
              j = 0;
              
            case 3:
              if (!(j<_this.col)) { __pc=6     ; break; }
              _this.fiber$redrawChip(_thread, j, i);
              __pc=4;return;
            case 4:
              
            case 5     :
              j++;
              __pc=3;break;
            case 6     :
              
            case 7     :
              i++;
              __pc=2;break;
            case 8     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      resolve :function _trc_Map2_resolve(fileName,fallback) {
        "use strict";
        var _this=this;
        var r;
        
        if (typeof  fileName==="string") {
          r = _this.file("../maps/").rel(fileName);
          
          if (! fallback||r.exists()) {
            return r;
          }
          r=_this.file(fileName);
          return r;
          
        }
        return fileName;
      },
      fiber$resolve :function _trc_Map2_f_resolve(_thread,fileName,fallback) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        _thread.enter(function _trc_Map2_ent_resolve(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  fileName==="string")) { __pc=3     ; break; }
              r = _this.file("../maps/").rel(fileName);
              
              if (!(! fallback||r.exists())) { __pc=1     ; break; }
              _thread.exit(r);return;
            case 1     :
              
              _this.fiber$file(_thread, fileName);
              __pc=2;return;
            case 2:
              r=_thread.retVal;
              
              _thread.exit(r);return;
            case 3     :
              
              _thread.exit(fileName);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      load :function _trc_Map2_load(dataFile) {
        "use strict";
        var _this=this;
        var c;
        
        _this.bufMat=null;
        dataFile=_this.resolve(dataFile,true);
        if (! dataFile||! dataFile.obj) {
          _this.print(dataFile);
          throw new Error(dataFile+" is not a file!");
          
          
        }
        c = new Tonyu.classes.kernel.MapCodec({map: _this});
        
        c.load(dataFile);
        _this.redraw();
      },
      fiber$load :function _trc_Map2_f_load(_thread,dataFile) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        
        _this.bufMat=null;
        
        _thread.enter(function _trc_Map2_ent_load(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resolve(_thread, dataFile, true);
              __pc=1;return;
            case 1:
              dataFile=_thread.retVal;
              
              if (! dataFile||! dataFile.obj) {
                _this.print(dataFile);
                throw new Error(dataFile+" is not a file!");
                
                
              }
              c = new Tonyu.classes.kernel.MapCodec({map: _this});
              
              c.load(dataFile);
              _this.fiber$redraw(_thread);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      save :function _trc_Map2_save(saveFileName) {
        "use strict";
        var _this=this;
        var c;
        var saveDataFile;
        
        c = new Tonyu.classes.kernel.MapCodec({map: _this});
        
        saveDataFile = _this.resolve(saveFileName);
        
        c.save(saveDataFile);
      },
      fiber$save :function _trc_Map2_f_save(_thread,saveFileName) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        var saveDataFile;
        
        c = new Tonyu.classes.kernel.MapCodec({map: _this});
        
        
        _thread.enter(function _trc_Map2_ent_save(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resolve(_thread, saveFileName);
              __pc=1;return;
            case 1:
              saveDataFile=_thread.retVal;
              
              c.save(saveDataFile);
              _thread.exit(_this);return;
            }
          }
        });
      },
      redrawChip :function _trc_Map2_redrawChip(setCol,setRow) {
        "use strict";
        var _this=this;
        var buf;
        var cv;
        var drawX;
        var drawY;
        var ctx;
        var w;
        var h;
        var l;
        var _it_6327;
        var p;
        var pImg;
        
        buf = _this.getBuf(setCol,setRow);
        
        cv = buf.canvas;
        
        drawX = buf.left;
        
        drawY = buf.top;
        
        ctx = buf.context;
        
        w = buf.width;
        
        h = buf.height;
        
        ctx.clearRect(drawX,drawY,w,h);
        _it_6327=Tonyu.iterator(_this.chipLayers,1);
        while(_it_6327.next()) {
          l=_it_6327[0];
          
          p = l.get(setCol,setRow);
          
          pImg = Tonyu.globals.$imageList[p];
          
          if (pImg) {
            ctx.save();
            ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,drawX,drawY,w,h);
            ctx.restore();
            
          }
          
        }
      },
      fiber$redrawChip :function _trc_Map2_f_redrawChip(_thread,setCol,setRow) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var buf;
        var cv;
        var drawX;
        var drawY;
        var ctx;
        var w;
        var h;
        var l;
        var _it_6327;
        var p;
        var pImg;
        
        
        _thread.enter(function _trc_Map2_ent_redrawChip(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getBuf(_thread, setCol, setRow);
              __pc=1;return;
            case 1:
              buf=_thread.retVal;
              
              cv = buf.canvas;
              
              drawX = buf.left;
              
              drawY = buf.top;
              
              ctx = buf.context;
              
              w = buf.width;
              
              h = buf.height;
              
              ctx.clearRect(drawX,drawY,w,h);
              _it_6327=Tonyu.iterator(_this.chipLayers,1);
              while(_it_6327.next()) {
                l=_it_6327[0];
                
                p = l.get(setCol,setRow);
                
                pImg = Tonyu.globals.$imageList[p];
                
                if (pImg) {
                  ctx.save();
                  ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,drawX,drawY,w,h);
                  ctx.restore();
                  
                }
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      setWithLayerName :function _trc_Map2_setWithLayerName(name,setCol,setRow,p) {
        "use strict";
        var _this=this;
        var l;
        
        _this.initBuf(p);
        if (setCol>=_this.col&&! _this._expand.right||setRow>=_this.row&&! _this._expand.bottom||setCol<0&&! _this._expand.left||setRow<0&&! _this._expand.top) {
          return _this;
          
        }
        l = _this.getChipLayer(name);
        
        if (! l) {
          throw new Error("No such chipLayer "+name);
          
        }
        if (setRow>=_this.row) {
          _this.row=setRow+1;
        }
        if (setCol>=_this.col) {
          _this.col=setCol+1;
        }
        if (p<0) {
          p=undefined;
        }
        l.set(setCol,setRow,p);
        _this.redrawChip(setCol,setRow);
      },
      fiber$setWithLayerName :function _trc_Map2_f_setWithLayerName(_thread,name,setCol,setRow,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_setWithLayerName(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initBuf(_thread, p);
              __pc=1;return;
            case 1:
              
              if (!(setCol>=_this.col&&! _this._expand.right||setRow>=_this.row&&! _this._expand.bottom||setCol<0&&! _this._expand.left||setRow<0&&! _this._expand.top)) { __pc=2     ; break; }
              _thread.exit(_this);return;
            case 2     :
              
              _this.fiber$getChipLayer(_thread, name);
              __pc=3;return;
            case 3:
              l=_thread.retVal;
              
              if (! l) {
                throw new Error("No such chipLayer "+name);
                
              }
              if (setRow>=_this.row) {
                _this.row=setRow+1;
              }
              if (setCol>=_this.col) {
                _this.col=setCol+1;
              }
              if (p<0) {
                p=undefined;
              }
              l.set(setCol,setRow,p);
              _this.fiber$redrawChip(_thread, setCol, setRow);
              __pc=4;return;
            case 4:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      range :function _trc_Map2_range(options) {
        "use strict";
        var _this=this;
        var s;
        var world;
        var left;
        var top;
        var right;
        var width;
        var bottom;
        var height;
        var layers;
        var lt;
        var rb;
        var res;
        var i;
        var j;
        function n() {
          var a;
          var v;
          
          a = Array.prototype.slice.call(arguments);
          
          while (a.length) {
            v = a.shift();
            
            if (typeof  v==="number"&&v===v) {
              return v;
            }
            
          }
        }
        if (! _this.col||! _this.row) {
          return [];
        }
        options=options||{xmin: 0,ymin: 0,xmax: _this.col-1,ymax: _this.row-1};
        if (options.getCrashShape) {
          s = options.getCrashShape();
          
          options={world: true,xmin: s.xmin,xmax: s.xmax,ymin: s.ymin,ymax: s.ymax};
          
        }
        world = options.world;
        
        left = n(options.left,options.xmin,options.col,options.x);
        
        top = n(options.top,options.ymin,options.row,options.y);
        
        right = n(options.right,options.xmax,left+options.width-1,left);
        
        width = n(options.width,right-left+1);
        
        bottom = n(options.bottom,options.ymax,top+options.height-1,top);
        
        height = n(options.height,bottom-top+1);
        
        layers = options.layers||options.layer||_this.allLayerNames;
        
        if (world) {
          lt = _this.worldToChip({x: left,y: top});
          
          left=lt.x;
          top=lt.y;
          rb = _this.worldToChip({x: right,y: bottom});
          
          right=rb.x;
          bottom=rb.y;
          
        }
        res = [];
        
        i = top;
        for (; i<=bottom ; i++) {
          {
            j = left;
            for (; j<=right ; j++) {
              {
                res.push(_this.chip(j,i,layers));
              }
            }
          }
        }
        ;
        
        return res;
        
      },
      fiber$range :function _trc_Map2_f_range(_thread,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var s;
        var world;
        var left;
        var top;
        var right;
        var width;
        var bottom;
        var height;
        var layers;
        var lt;
        var rb;
        var res;
        var i;
        var j;
        function n() {
          var a;
          var v;
          
          a = Array.prototype.slice.call(arguments);
          
          while (a.length) {
            v = a.shift();
            
            if (typeof  v==="number"&&v===v) {
              return v;
            }
            
          }
        }
        if (! _this.col||! _this.row) {
          _thread.retVal=[];return;
          
        }
        options=options||{xmin: 0,ymin: 0,xmax: _this.col-1,ymax: _this.row-1};
        if (options.getCrashShape) {
          s = options.getCrashShape();
          
          options={world: true,xmin: s.xmin,xmax: s.xmax,ymin: s.ymin,ymax: s.ymax};
          
        }
        world = options.world;
        
        left = n(options.left,options.xmin,options.col,options.x);
        
        top = n(options.top,options.ymin,options.row,options.y);
        
        right = n(options.right,options.xmax,left+options.width-1,left);
        
        width = n(options.width,right-left+1);
        
        bottom = n(options.bottom,options.ymax,top+options.height-1,top);
        
        height = n(options.height,bottom-top+1);
        
        layers = options.layers||options.layer||_this.allLayerNames;
        
        
        _thread.enter(function _trc_Map2_ent_range(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(world)) { __pc=3     ; break; }
              _this.fiber$worldToChip(_thread, {x: left,y: top});
              __pc=1;return;
            case 1:
              lt=_thread.retVal;
              
              left=lt.x;
              top=lt.y;
              _this.fiber$worldToChip(_thread, {x: right,y: bottom});
              __pc=2;return;
            case 2:
              rb=_thread.retVal;
              
              right=rb.x;
              bottom=rb.y;
            case 3     :
              
              res = [];
              
              i = top;
              for (; i<=bottom ; i++) {
                {
                  j = left;
                  for (; j<=right ; j++) {
                    {
                      res.push(_this.chip(j,i,layers));
                    }
                  }
                }
              }
              ;
              
              _thread.exit(res);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      crashTo :function _trc_Map2_crashTo(actor,filter) {
        "use strict";
        var _this=this;
        var r;
        var f;
        var re;
        var _it_6357;
        var c;
        
        r = _this.range(actor);
        
        f = _this._wallFilter;
        
        if (filter) {
          f=_this.chipFilter(filter);
          
        }
        _it_6357=Tonyu.iterator(r,1);
        while(_it_6357.next()) {
          re=_it_6357[0];
          
          c = f(re);
          
          if (c) {
            return c;
          }
          
        }
        return null;
      },
      isWallAt :function _trc_Map2_isWallAt(x,y) {
        "use strict";
        var _this=this;
        var o;
        
        o = _this.worldToChip(x,y);
        
        return _this.isWall(o.x,o.y);
      },
      fiber$isWallAt :function _trc_Map2_f_isWallAt(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var o;
        
        
        _thread.enter(function _trc_Map2_ent_isWallAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, x, y);
              __pc=1;return;
            case 1:
              o=_thread.retVal;
              
              _this.fiber$isWall(_thread, o.x, o.y);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      isWall :function _trc_Map2_isWall(cx,cy) {
        "use strict";
        var _this=this;
        
        return _this._wallFilter(cx,cy,_this);
      },
      fiber$isWall :function _trc_Map2_f_isWall(_thread,cx,cy) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this._wallFilter(cx,cy,_this);return;
        
        
        _thread.retVal=_this;return;
      },
      chipFilter :function _trc_Map2_chipFilter(options) {
        "use strict";
        var _this=this;
        var func;
        var p;
        var not;
        var layers;
        
        
        if (typeof  options==="function") {
          func=options;
          return func;
          
        } else {
          if (typeof  options==="number") {
            options={p: [options]};
            
          } else {
            if (options&&typeof  options.slice==="function") {
              options={p: options};
              
            }
          }
        }
        p = options.p;
        
        not = options.not;
        
        layers = options.layers||options.layer||_this.allLayerNames;
        
        if (p==null) {
          p=[- 1];
          not=true;
          
        }
        if (typeof  p==="number") {
          p=[p];
        }
        if (typeof  layers==="string") {
          layers=[layers];
        }
        if (not) {
          func=(function anonymous_8066(chip) {
            
            return chip.withLayers(layers).hasExcept(p);
          });
          
        } else {
          func=(function anonymous_8174(chip) {
            
            return chip.withLayers(layers).has(p);
          });
          
        }
        return func;
      },
      fiber$chipFilter :function _trc_Map2_f_chipFilter(_thread,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var func;
        var p;
        var not;
        var layers;
        
        
        if (typeof  options==="function") {
          func=options;
          _thread.retVal=func;return;
          
          
        } else {
          if (typeof  options==="number") {
            options={p: [options]};
            
          } else {
            if (options&&typeof  options.slice==="function") {
              options={p: options};
              
            }
          }
        }
        p = options.p;
        
        not = options.not;
        
        layers = options.layers||options.layer||_this.allLayerNames;
        
        if (p==null) {
          p=[- 1];
          not=true;
          
        }
        if (typeof  p==="number") {
          p=[p];
        }
        if (typeof  layers==="string") {
          layers=[layers];
        }
        if (not) {
          func=(function anonymous_8066(chip) {
            
            return chip.withLayers(layers).hasExcept(p);
          });
          
        } else {
          func=(function anonymous_8174(chip) {
            
            return chip.withLayers(layers).has(p);
          });
          
        }
        _thread.retVal=func;return;
        
        
        _thread.retVal=_this;return;
      },
      setWallFilter :function _trc_Map2_setWallFilter(options) {
        "use strict";
        var _this=this;
        
        if (options.wall!=null) {
          options.p=options.wall;
          
        }
        if (options.path!=null) {
          options.p=options.path;
          options.not=true;
          
        }
        _this._wallFilter=_this.chipFilter(options);
      },
      fiber$setWallFilter :function _trc_Map2_f_setWallFilter(_thread,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (options.wall!=null) {
          options.p=options.wall;
          
        }
        if (options.path!=null) {
          options.p=options.path;
          options.not=true;
          
        }
        
        _thread.enter(function _trc_Map2_ent_setWallFilter(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$chipFilter(_thread, options);
              __pc=1;return;
            case 1:
              _this._wallFilter=_thread.retVal;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      set :function _trc_Map2_set(setCol,setRow,p) {
        "use strict";
        var _this=this;
        
        _this.setWithLayerName("base",setCol,setRow,p);
      },
      fiber$set :function _trc_Map2_f_set(_thread,setCol,setRow,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map2_ent_set(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setWithLayerName(_thread, "base", setCol, setRow, p);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setOn :function _trc_Map2_setOn(setCol,setRow,onP) {
        "use strict";
        var _this=this;
        
        _this.setWithLayerName("on",setCol,setRow,onP);
      },
      fiber$setOn :function _trc_Map2_f_setOn(_thread,setCol,setRow,onP) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map2_ent_setOn(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setWithLayerName(_thread, "on", setCol, setRow, onP);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      worldToChip :function _trc_Map2_worldToChip(o) {
        "use strict";
        var _this=this;
        var l;
        var r;
        
        l = _this.transform.worldToLocal(o);
        
        r = _this.getDrawRect();
        
        _this.initBuf();
        return {x: Math.floor((l.x-r.left)/_this.chipWidth),y: Math.floor((l.y-r.top)/_this.chipHeight)};
      },
      fiber$worldToChip :function _trc_Map2_f_worldToChip(_thread,o) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        var r;
        
        l = _this.transform.worldToLocal(o);
        
        
        _thread.enter(function _trc_Map2_ent_worldToChip(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getDrawRect(_thread);
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _this.fiber$initBuf(_thread);
              __pc=2;return;
            case 2:
              
              _thread.exit({x: Math.floor((l.x-r.left)/_this.chipWidth),y: Math.floor((l.y-r.top)/_this.chipHeight)});return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      chipToWorld :function _trc_Map2_chipToWorld(x,y) {
        "use strict";
        var _this=this;
        var o;
        var r;
        var co;
        
        o = x;
        
        if (typeof  x==="number") {
          o={x: x,y: y};
          
        }
        r = _this.getDrawRect();
        
        _this.initBuf();
        co = {x: r.left+o.x*_this.chipWidth+_this.chipWidth/2,y: r.top+o.y*_this.chipHeight+_this.chipHeight/2};
        
        return _this.transform.localToWorld(co);
      },
      fiber$chipToWorld :function _trc_Map2_f_chipToWorld(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var o;
        var r;
        var co;
        
        o = x;
        
        if (typeof  x==="number") {
          o={x: x,y: y};
          
        }
        
        _thread.enter(function _trc_Map2_ent_chipToWorld(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getDrawRect(_thread);
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              _this.fiber$initBuf(_thread);
              __pc=2;return;
            case 2:
              
              co = {x: r.left+o.x*_this.chipWidth+_this.chipWidth/2,y: r.top+o.y*_this.chipHeight+_this.chipHeight/2};
              
              _thread.exit(_this.transform.localToWorld(co));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      setOnAt :function _trc_Map2_setOnAt(x,y,p) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.worldToChip({x: x,y: y});
        
        _this.setOn(l.x,l.y,p);
      },
      fiber$setOnAt :function _trc_Map2_f_setOnAt(_thread,x,y,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_setOnAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, {x: x,y: y});
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              _this.fiber$setOn(_thread, l.x, l.y, p);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setAt :function _trc_Map2_setAt(x,y,p) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.worldToChip({x: x,y: y});
        
        _this.set(l.x,l.y,p);
      },
      fiber$setAt :function _trc_Map2_f_setAt(_thread,x,y,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_setAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, {x: x,y: y});
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              _this.fiber$set(_thread, l.x, l.y, p);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getWithLayerName :function _trc_Map2_getWithLayerName(name,setCol,setRow) {
        "use strict";
        var _this=this;
        var l;
        var r;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          return - 1;
        }
        l = _this.getChipLayer(name);
        
        if (! l) {
          throw new Error("No such chipLayer "+name);
          
        }
        r = l.get(setCol,setRow);
        
        return r==null?- 1:r;
      },
      fiber$getWithLayerName :function _trc_Map2_f_getWithLayerName(_thread,name,setCol,setRow) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        var r;
        
        if (setCol>=_this.col||setRow>=_this.row||setCol<0||setRow<0) {
          _thread.retVal=- 1;return;
          
        }
        
        _thread.enter(function _trc_Map2_ent_getWithLayerName(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getChipLayer(_thread, name);
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              if (! l) {
                throw new Error("No such chipLayer "+name);
                
              }
              r = l.get(setCol,setRow);
              
              _thread.exit(r==null?- 1:r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      get :function _trc_Map2_get(getCol,getRow) {
        "use strict";
        var _this=this;
        
        return _this.getWithLayerName("base",getCol,getRow);
      },
      fiber$get :function _trc_Map2_f_get(_thread,getCol,getRow) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map2_ent_get(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getWithLayerName(_thread, "base", getCol, getRow);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getAt :function _trc_Map2_getAt(x,y) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.worldToChip({x: x,y: y});
        
        return _this.get(l.x,l.y);
      },
      fiber$getAt :function _trc_Map2_f_getAt(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_getAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, {x: x,y: y});
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              _this.fiber$get(_thread, l.x, l.y);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getOn :function _trc_Map2_getOn(getCol,getRow) {
        "use strict";
        var _this=this;
        
        return _this.getWithLayerName("on",getCol,getRow);
      },
      fiber$getOn :function _trc_Map2_f_getOn(_thread,getCol,getRow) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Map2_ent_getOn(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getWithLayerName(_thread, "on", getCol, getRow);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getOnAt :function _trc_Map2_getOnAt(x,y) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.worldToChip({x: x,y: y});
        
        return _this.getOn(l.x,l.y);
      },
      fiber$getOnAt :function _trc_Map2_f_getOnAt(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_getOnAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, {x: x,y: y});
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              _this.fiber$getOn(_thread, l.x, l.y);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__allLayerNames :function _trc_Map2___getter__allLayerNames() {
        "use strict";
        var _this=this;
        
        return _this.chipLayers.map((function anonymous_10344(l) {
          
          return l.name;
        }));
      },
      chip :function _trc_Map2_chip(x,y,layers) {
        "use strict";
        var _this=this;
        
        return new Tonyu.classes.kernel.MapChip({map: _this,x: x,y: y,layers: layers});
      },
      fiber$chip :function _trc_Map2_f_chip(_thread,x,y,layers) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=new Tonyu.classes.kernel.MapChip({map: _this,x: x,y: y,layers: layers});return;
        
        
        _thread.retVal=_this;return;
      },
      chipAt :function _trc_Map2_chipAt(x,y,layers) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.worldToChip({x: x,y: y});
        
        return _this.chip(l.x,l.y,layers);
      },
      fiber$chipAt :function _trc_Map2_f_chipAt(_thread,x,y,layers) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_chipAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, {x: x,y: y});
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              _this.fiber$chip(_thread, l.x, l.y, layers);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      has :function _trc_Map2_has(x,y,p) {
        "use strict";
        var _this=this;
        
        return _this.chip(x,y).has(p);
      },
      fiber$has :function _trc_Map2_f_has(_thread,x,y,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.chip(x,y).has(p);return;
        
        
        _thread.retVal=_this;return;
      },
      hasAt :function _trc_Map2_hasAt(x,y,p) {
        "use strict";
        var _this=this;
        var l;
        
        l = _this.worldToChip({x: x,y: y});
        
        return _this.has(l.x,l.y,p);
      },
      fiber$hasAt :function _trc_Map2_f_hasAt(_thread,x,y,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var l;
        
        
        _thread.enter(function _trc_Map2_ent_hasAt(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$worldToChip(_thread, {x: x,y: y});
              __pc=1;return;
            case 1:
              l=_thread.retVal;
              
              _this.fiber$has(_thread, l.x, l.y, p);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      scrollTo :function _trc_Map2_scrollTo(scrollX,scrollY) {
        "use strict";
        var _this=this;
        
        _this.x=- scrollX;
        _this.y=- scrollY;
      },
      fiber$scrollTo :function _trc_Map2_f_scrollTo(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.x=- scrollX;
        _this.y=- scrollY;
        
        _thread.retVal=_this;return;
      },
      getDrawRect :function _trc_Map2_getDrawRect() {
        "use strict";
        var _this=this;
        var r;
        
        _this.initBuf();
        r = _this._align.getDrawRect({width: _this.chipWidth*_this.col,height: _this.chipHeight*_this.row});
        
        r.left=r.x-r.width/2;
        r.top=r.y-r.height/2;
        return r;
      },
      fiber$getDrawRect :function _trc_Map2_f_getDrawRect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        _thread.enter(function _trc_Map2_ent_getDrawRect(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initBuf(_thread);
              __pc=1;return;
            case 1:
              
              r = _this._align.getDrawRect({width: _this.chipWidth*_this.col,height: _this.chipHeight*_this.row});
              
              r.left=r.x-r.width/2;
              r.top=r.y-r.height/2;
              _thread.exit(r);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      draw :function _trc_Map2_draw(ctx) {
        "use strict";
        var _this=this;
        var sum;
        var r;
        var sx;
        var sy;
        var j;
        var i;
        var pCv;
        var _it_6385;
        var pCtx;
        var dx;
        var dy;
        var dw;
        var dh;
        
        if (! _this.bufMat) {
          return _this;
        }
        sum = 0;
        
        r = _this.getDrawRect();
        
        sx = r.left;
        
        sy = r.top;
        
        ctx.save();
        _this.performTransform(ctx);
        ctx.globalAlpha=_this.alpha/255;
        _it_6385=Tonyu.iterator(_this.bufMat.keysIterator(),3);
        while(_it_6385.next()) {
          j=_it_6385[0];
          i=_it_6385[1];
          pCv=_it_6385[2];
          
          pCtx = pCv[0];
          
          if (! pCtx) {
            return _this;
          }
          dx = sx+j*_this.bufferSize.w;
          
          dy = sy+i*_this.bufferSize.h;
          
          dw = pCtx.width;
          
          dh = pCtx.height;
          
          ctx.drawImage(pCtx,0,0,dw,dh,dx,dy,dw,dh);
          sum++;
          
        }
        ctx.restore();
      },
      chipToActor :function _trc_Map2_chipToActor(options) {
        "use strict";
        var _this=this;
        var p;
        var klass;
        var params;
        var r;
        var _it_6399;
        var n;
        
        p = options.p;
        klass = options.class;
        params = options.params||{};
        
        if (typeof  p==="number") {
          p=[p];
          
        }
        _it_6399=Tonyu.iterator(_this.range(),1);
        while(_it_6399.next()) {
          r=_it_6399[0];
          
          n = r.has(p);
          
          if (n) {
            n.toActor({class: klass,params: params});
            
          }
          
        }
      },
      fiber$chipToActor :function _trc_Map2_f_chipToActor(_thread,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        var klass;
        var params;
        var r;
        var _it_6399;
        var n;
        
        p = options.p;
        klass = options.class;
        params = options.params||{};
        
        if (typeof  p==="number") {
          p=[p];
          
        }
        _it_6399=Tonyu.iterator(_this.range(),1);
        while(_it_6399.next()) {
          r=_it_6399[0];
          
          n = r.has(p);
          
          if (n) {
            n.toActor({class: klass,params: params});
            
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getChipLayer":{"nowait":false},"addChipLayer":{"nowait":false},"__setter__expand":{"nowait":true},"__getter__expand":{"nowait":true},"new":{"nowait":false},"setPivot":{"nowait":false},"initBuf":{"nowait":false},"parseBufferSize":{"nowait":false},"getBuf":{"nowait":false},"pack":{"nowait":false},"redraw":{"nowait":false},"resolve":{"nowait":false},"load":{"nowait":false},"save":{"nowait":false},"redrawChip":{"nowait":false},"setWithLayerName":{"nowait":false},"range":{"nowait":false},"crashTo":{"nowait":true},"isWallAt":{"nowait":false},"isWall":{"nowait":false},"chipFilter":{"nowait":false},"setWallFilter":{"nowait":false},"set":{"nowait":false},"setOn":{"nowait":false},"worldToChip":{"nowait":false},"chipToWorld":{"nowait":false},"setOnAt":{"nowait":false},"setAt":{"nowait":false},"getWithLayerName":{"nowait":false},"get":{"nowait":false},"getAt":{"nowait":false},"getOn":{"nowait":false},"getOnAt":{"nowait":false},"__getter__allLayerNames":{"nowait":true},"chip":{"nowait":false},"chipAt":{"nowait":false},"has":{"nowait":false},"hasAt":{"nowait":false},"scrollTo":{"nowait":false},"getDrawRect":{"nowait":false},"draw":{"nowait":true},"chipToActor":{"nowait":false}},"fields":{"chipWidth":{},"chipHeight":{},"bufferSize":{},"bufMat":{},"row":{},"col":{},"chipLayers":{},"mapObj":{},"_expand":{},"_wallFilter":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Panel',
  shortName: 'Panel',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Panel_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Panel_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Panel_initialize(opt) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [opt]);
        if (_this.canvas) {
          _this.width=_this.canvas.width;
          _this.height=_this.canvas.height;
          _this.parallel("watchResize");
          
        } else {
          _this.setPanel(_this.width||Tonyu.globals.$screenWidth||465,_this.height||Tonyu.globals.$screenHeight||465);
          
        }
        if (_this._fillStyle&&_this.canvas) {
          _this.canvas.getContext("2d").fillStyle=_this._fillStyle+"";
        }
        _this.x=typeof  _this.x==="number"?_this.x:_this.width/2;
        _this.y=typeof  _this.y==="number"?_this.y:_this.height/2;
        if (_this.alpha==null) {
          _this.alpha=255;
        }
        if (_this._drawn==null) {
          _this._drawn=false;
        }
        _this.registerEventHandler("touchstart",new Tonyu.classes.kernel.PanelTouchStart({target: _this}));
      },
      watchResize :function _trc_Panel_watchResize() {
        "use strict";
        var _this=this;
        
        while (true) {
          if (_this.width!=_this.canvas.width||_this.height!=_this.canvas.height) {
            _this.width=_this.canvas.width;
            _this.height=_this.canvas.height;
            _this.fireEvent("resize",{width: _this.width,height: _this.height});
            
          }
          _this.runPromise(requestAnimationFrame);
          
        }
      },
      fiber$watchResize :function _trc_Panel_f_watchResize(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Panel_ent_watchResize(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (_this.width!=_this.canvas.width||_this.height!=_this.canvas.height) {
                _this.width=_this.canvas.width;
                _this.height=_this.canvas.height;
                _this.fireEvent("resize",{width: _this.width,height: _this.height});
                
              }
              _this.fiber$runPromise(_thread, requestAnimationFrame);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setPanel :function _trc_Panel_setPanel(width,height) {
        "use strict";
        var _this=this;
        
        if (! (width*height>0)) {
          throw new Error("Invalid Panel size: "+width+"x"+height);
          
          
        }
        _this.width=_this.trunc(width);
        _this.height=_this.trunc(height);
        _this.buf=$("<canvas>").attr({width: width,height: height});
        _this.canvas=_this.buf[0];
        _this.imageSmoothingEnabled=! Tonyu.globals.$imageSmoothingDisabled;
        _this._drawn=false;
        _this.fireEvent("resize",{width: width,height: height,force: true});
      },
      fiber$setPanel :function _trc_Panel_f_setPanel(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! (width*height>0)) {
          throw new Error("Invalid Panel size: "+width+"x"+height);
          
          
        }
        _this.width=_this.trunc(width);
        _this.height=_this.trunc(height);
        _this.buf=$("<canvas>").attr({width: width,height: height});
        _this.canvas=_this.buf[0];
        _this.imageSmoothingEnabled=! Tonyu.globals.$imageSmoothingDisabled;
        _this._drawn=false;
        _this.fireEvent("resize",{width: width,height: height,force: true});
        
        _thread.retVal=_this;return;
      },
      resize :function _trc_Panel_resize(width,height) {
        "use strict";
        var _this=this;
        
        if (_this.width==width&&_this.height==height) {
          return _this;
        }
        _this.setPanel(width,height);
      },
      fiber$resize :function _trc_Panel_f_resize(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.width==width&&_this.height==height) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Panel_ent_resize(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setPanel(_thread, width, height);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getContext :function _trc_Panel_getContext() {
        "use strict";
        var _this=this;
        
        _this._drawn=true;
        return _this.canvas.getContext("2d");
      },
      fiber$getContext :function _trc_Panel_f_getContext(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._drawn=true;
        _thread.retVal=_this.canvas.getContext("2d");return;
        
        
        _thread.retVal=_this;return;
      },
      __getter__context :function _trc_Panel___getter__context() {
        "use strict";
        var _this=this;
        
        _this._drawn=true;
        return _this.canvas.getContext("2d");
      },
      __getter__image :function _trc_Panel___getter__image() {
        "use strict";
        var _this=this;
        
        _this._drawn=true;
        return _this.canvas;
      },
      setFillStyle :function _trc_Panel_setFillStyle(color) {
        "use strict";
        var _this=this;
        
        _this.fillStyle=color;
      },
      fiber$setFillStyle :function _trc_Panel_f_setFillStyle(_thread,color) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.fillStyle=color;
        
        _thread.retVal=_this;return;
      },
      __getter__fillStyle :function _trc_Panel___getter__fillStyle() {
        "use strict";
        var _this=this;
        
        return _this._fillStyle;
      },
      __setter__fillStyle :function _trc_Panel___setter__fillStyle(val) {
        "use strict";
        var _this=this;
        
        _this._fillStyle=val;
        if (! _this.canvas) {
          return _this;
        }
        _this.context.fillStyle=val+"";
      },
      __setter__strokeStyle :function _trc_Panel___setter__strokeStyle(val) {
        "use strict";
        var _this=this;
        
        _this.context.strokeStyle=val+"";
      },
      __setter__lineWidth :function _trc_Panel___setter__lineWidth(val) {
        "use strict";
        var _this=this;
        
        _this.context.lineWidth=val;
      },
      fillCircle :function _trc_Panel_fillCircle(x,y,r) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.context;
        
        ctx.fillStyle=_this.fillStyle+"";
        ctx.beginPath();
        ctx.arc(x,y,r,0,2*Tonyu.globals.$Math.PI);
        ctx.closePath();
        ctx.fill();
      },
      fiber$fillCircle :function _trc_Panel_f_fillCircle(_thread,x,y,r) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        ctx = _this.context;
        
        ctx.fillStyle=_this.fillStyle+"";
        ctx.beginPath();
        ctx.arc(x,y,r,0,2*Tonyu.globals.$Math.PI);
        ctx.closePath();
        ctx.fill();
        
        _thread.retVal=_this;return;
      },
      fillRect :function _trc_Panel_fillRect(x,y,w,h) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.getContext();
        
        ctx.fillRect(x,y,w,h);
      },
      fillText :function _trc_Panel_fillText(text,x,y,size,align,baseline) {
        "use strict";
        var _this=this;
        var ctx;
        var splits;
        var f;
        var colCount;
        
        ctx = _this.getContext();
        
        ctx.save();
        text=text+"";
        splits = text.split("\n");
        
        ctx.textAlign=align||"center";
        ctx.textBaseline=baseline||"alphabetic";
        size=size||15;
        ctx.fillStyle=_this.fillStyle+"";
        f = ctx.font.replace(/^[0-9\.]+/,"");
        
        ctx.font=size+f;
        colCount = 0;
        for (; colCount<splits.length ; colCount++) {
          {
            ctx.fillText(splits[colCount],x,y);
            y+=size;
          }
        }
        ctx.restore();
      },
      fiber$fillText :function _trc_Panel_f_fillText(_thread,text,x,y,size,align,baseline) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        var splits;
        var f;
        var colCount;
        
        
        _thread.enter(function _trc_Panel_ent_fillText(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.save();
              text=text+"";
              splits = text.split("\n");
              
              ctx.textAlign=align||"center";
              ctx.textBaseline=baseline||"alphabetic";
              size=size||15;
              ctx.fillStyle=_this.fillStyle+"";
              f = ctx.font.replace(/^[0-9\.]+/,"");
              
              ctx.font=size+f;
              colCount = 0;
              for (; colCount<splits.length ; colCount++) {
                {
                  ctx.fillText(splits[colCount],x,y);
                  y+=size;
                }
              }
              ctx.restore();
              _thread.exit(_this);return;
            }
          }
        });
      },
      clearRect :function _trc_Panel_clearRect(clearX,clearY,clearW,clearH) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.getContext();
        
        ctx.save();
        ctx.clearRect(clearX||0,clearY||0,clearW||_this.width,clearH||_this.height);
        ctx.restore();
        if (arguments.length==0) {
          _this._drawn=false;
        }
      },
      fiber$clearRect :function _trc_Panel_f_clearRect(_thread,clearX,clearY,clearW,clearH) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        
        _thread.enter(function _trc_Panel_ent_clearRect(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.save();
              ctx.clearRect(clearX||0,clearY||0,clearW||_this.width,clearH||_this.height);
              ctx.restore();
              if (_arguments.length==0) {
                _this._drawn=false;
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPixelColor :function _trc_Panel_getPixelColor(x,y) {
        "use strict";
        var _this=this;
        var d;
        
        d = _this.getPixel(x,y);
        
        return new Tonyu.classes.kernel.Color(d[0],d[1],d[2],d[3]);
      },
      fiber$getPixelColor :function _trc_Panel_f_getPixelColor(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var d;
        
        
        _thread.enter(function _trc_Panel_ent_getPixelColor(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getPixel(_thread, x, y);
              __pc=1;return;
            case 1:
              d=_thread.retVal;
              
              _thread.exit(new Tonyu.classes.kernel.Color(d[0],d[1],d[2],d[3]));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPixel :function _trc_Panel_getPixel(getX,getY) {
        "use strict";
        var _this=this;
        var ctx;
        
        
        if (typeof  getX=="number"&&! isNaN(getX)&&typeof  getY=="number"&&! isNaN(getY)) {
          ctx=_this.getContext();
          _this.imagedata=ctx.getImageData(getX,getY,1,1);
          _this.colordata=[_this.imagedata.data[0],_this.imagedata.data[1],_this.imagedata.data[2],_this.imagedata.data[3]];
          
        } else {
          _this.colordata=[0,0,0,0];
          
        }
        return (_this.colordata);
      },
      fiber$getPixel :function _trc_Panel_f_getPixel(_thread,getX,getY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        
        
        _thread.enter(function _trc_Panel_ent_getPixel(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  getX=="number"&&! isNaN(getX)&&typeof  getY=="number"&&! isNaN(getY))) { __pc=2     ; break; }
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              _this.imagedata=ctx.getImageData(getX,getY,1,1);
              _this.colordata=[_this.imagedata.data[0],_this.imagedata.data[1],_this.imagedata.data[2],_this.imagedata.data[3]];
              __pc=3     ;break;
            case 2     :
              {
                _this.colordata=[0,0,0,0];
              }
            case 3     :
              
              _thread.exit((_this.colordata));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      scroll :function _trc_Panel_scroll(scrollX,scrollY) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = _this.getContext();
        
        ctx.save();
        _this.imagedata=ctx.getImageData(0,0,_this.width,_this.height);
        _this.clearRect(0,0,_this.width,_this.height);
        ctx.putImageData(_this.imagedata,- scrollX,- scrollY);
        ctx.restore();
      },
      fiber$scroll :function _trc_Panel_f_scroll(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        
        _thread.enter(function _trc_Panel_ent_scroll(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              ctx=_thread.retVal;
              
              ctx.save();
              _this.imagedata=ctx.getImageData(0,0,_this.width,_this.height);
              _this.fiber$clearRect(_thread, 0, 0, _this.width, _this.height);
              __pc=2;return;
            case 2:
              
              ctx.putImageData(_this.imagedata,- scrollX,- scrollY);
              ctx.restore();
              _thread.exit(_this);return;
            }
          }
        });
      },
      draw :function _trc_Panel_draw(ctx) {
        "use strict";
        var _this=this;
        var pImg;
        var r;
        
        if (_this._drawn) {
          pImg = _this.canvas;
          
          ctx.save();
          _this.performTransform(ctx);
          r = _this._align.getDrawRect(_this);
          
          ctx.drawImage(pImg,0,0,_this.width,_this.height,r.x-r.width/2,r.y-r.height/2,_this.width,_this.height);
          ctx.restore();
          
        }
      },
      drawSprite :function _trc_Panel_drawSprite(x,y,p,options) {
        "use strict";
        var _this=this;
        var pImg;
        var scaleX;
        var scaleY;
        var rotation;
        var ctx;
        
        pImg = Tonyu.globals.$imageList[p];
        
        if (! pImg) {
          return _this;
        }
        if (options===true) {
          options={f: true};
        }
        options=options||{};
        scaleX = typeof  (options.scaleX)==="number"?options.scaleX:1;
        
        scaleY = typeof  (options.scaleY)==="number"?options.scaleY:scaleX;
        
        rotation = options.rotation||options.angle||0;
        
        ctx = _this.context;
        
        if (options.f) {
          scaleX*=- 1;
        }
        ctx.save();
        ctx.translate(x,y);
        ctx.rotate(rotation/180*Math.PI);
        ctx.scale(scaleX,scaleY);
        ctx.drawImage(pImg.image,pImg.x,pImg.y,pImg.width,pImg.height,- pImg.width/2,- pImg.height/2,pImg.width,pImg.height);
        ctx.restore();
      },
      copy :function _trc_Panel_copy() {
        "use strict";
        var _this=this;
        var sx;
        var sy;
        var sw;
        var sh;
        var dx;
        var dy;
        var dw;
        var dh;
        var a;
        var srcPanel;
        var params;
        
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        srcPanel = a.shift(Tonyu.classes.kernel.Panel)||_this;
        
        if (a.length<=4) {
          dx=a.shift();
          dy=a.shift();
          if (a.length==0) {
            _this.context.drawImage(srcPanel.image,dx,dy);
            
          } else {
            dw=a.shift();
            dh=a.shift();
            if (dw*dh!=0) {
              _this.context.drawImage(srcPanel.image,dx,dy,dw,dh);
              
            }
            
          }
          
        } else {
          sx=a.shift();
          sy=a.shift();
          sw=a.shift();
          sh=a.shift();
          dx=a.shift();
          if (typeof  dx==="object") {
            params = dx;
            
            
          }
          dy=a.shift();
          dw=a.shift()||sw;
          dh=a.shift()||sh;
          if (sw*sh*dw*dh!=0) {
            _this.context.drawImage(srcPanel.image,sx,sy,sw,sh,dx,dy,dw,dh);
            
          }
          
        }
      },
      convert :function _trc_Panel_convert(obj,toLayer) {
        "use strict";
        var _this=this;
        var fromLayer;
        var scaleY;
        var r;
        var dx;
        var dy;
        var rt;
        var x;
        var y;
        
        fromLayer = obj.layer;
        
        if (fromLayer==null&&toLayer==null) {
          fromLayer=_this;
          toLayer=_this.layer;
          
        } else {
          if (fromLayer==null&&toLayer===_this.layer) {
            fromLayer=_this;
            
          } else {
            if (fromLayer===_this&&toLayer==null) {
              toLayer=_this.layer;
              
            } else {
              if (fromLayer==null&&toLayer===_this) {
                fromLayer=_this.layer;
                
              } else {
                if (fromLayer===_this.layer&&toLayer==null) {
                  toLayer=_this;
                  
                }
              }
            }
          }
        }
        if (fromLayer===toLayer) {
          return obj;
        }
        scaleY = _this.scaleY||_this.scaleX;
        
        if (fromLayer==null||toLayer==null) {
          throw new Error("layer not set");
          
        }
        if (fromLayer===_this&&toLayer===_this.layer) {
          r = _this._align.getDrawRect(_this);
          
          dx = obj.x+r.x-r.width/2;
          
          dy = obj.y+r.y-r.height/2;
          
          rt = _this.rotation;
          
          x = _this.x+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)*_this.scaleX;
          
          y = _this.y+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)*scaleY;
          
          return {x: x,y: y,rotation: obj.rotation,scale: obj.scale,layer: toLayer};
          
        } else {
          if (fromLayer===_this.layer&&toLayer===_this) {
            r = _this._align.getDrawRect(_this);
            
            rt = - _this.rotation;
            
            dx = obj.x-(_this.x);
            
            dy = obj.y-(_this.y);
            
            x = r.width/2-r.x+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)/_this.scaleX;
            
            y = r.height/2-r.y+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)/scaleY;
            
            return {x: x,y: y,rotation: rt,scale: 1/_this.scaleX,layer: toLayer};
            
          } else {
            _this.print("no support",obj.layer,toLayer);
            throw new Error("not support");
            
            
          }
        }
      },
      fiber$convert :function _trc_Panel_f_convert(_thread,obj,toLayer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var fromLayer;
        var scaleY;
        var r;
        var dx;
        var dy;
        var rt;
        var x;
        var y;
        
        fromLayer = obj.layer;
        
        if (fromLayer==null&&toLayer==null) {
          fromLayer=_this;
          toLayer=_this.layer;
          
        } else {
          if (fromLayer==null&&toLayer===_this.layer) {
            fromLayer=_this;
            
          } else {
            if (fromLayer===_this&&toLayer==null) {
              toLayer=_this.layer;
              
            } else {
              if (fromLayer==null&&toLayer===_this) {
                fromLayer=_this.layer;
                
              } else {
                if (fromLayer===_this.layer&&toLayer==null) {
                  toLayer=_this;
                  
                }
              }
            }
          }
        }
        if (fromLayer===toLayer) {
          _thread.retVal=obj;return;
          
        }
        scaleY = _this.scaleY||_this.scaleX;
        
        if (fromLayer==null||toLayer==null) {
          throw new Error("layer not set");
          
        }
        if (fromLayer===_this&&toLayer===_this.layer) {
          r = _this._align.getDrawRect(_this);
          
          dx = obj.x+r.x-r.width/2;
          
          dy = obj.y+r.y-r.height/2;
          
          rt = _this.rotation;
          
          x = _this.x+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)*_this.scaleX;
          
          y = _this.y+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)*scaleY;
          
          _thread.retVal={x: x,y: y,rotation: obj.rotation,scale: obj.scale,layer: toLayer};return;
          
          
        } else {
          if (fromLayer===_this.layer&&toLayer===_this) {
            r = _this._align.getDrawRect(_this);
            
            rt = - _this.rotation;
            
            dx = obj.x-(_this.x);
            
            dy = obj.y-(_this.y);
            
            x = r.width/2-r.x+(_this.cos(rt)*dx+_this.cos(rt+90)*dy)/_this.scaleX;
            
            y = r.height/2-r.y+(_this.sin(rt)*dx+_this.sin(rt+90)*dy)/scaleY;
            
            _thread.retVal={x: x,y: y,rotation: rt,scale: 1/_this.scaleX,layer: toLayer};return;
            
            
          } else {
            _this.print("no support",obj.layer,toLayer);
            throw new Error("not support");
            
            
          }
        }
        
        _thread.retVal=_this;return;
      },
      drawLine :function _trc_Panel_drawLine(x,y,dx,dy) {
        "use strict";
        var _this=this;
        
        if (dx==null&&dy==null) {
          if (x==null&&y==null) {
            _this.px=null;
            _this.py=null;
            return _this;
            
          }
          if (_this.px==null&&_this.py==null) {
            _this.px=x;
            _this.py=y;
            return _this;
            
          }
          dx=x;
          dy=y;
          x=_this.px;
          y=_this.py;
          _this.px=dx;
          _this.py=dy;
          
        }
        _this.context.beginPath();
        _this.context.moveTo(x,y);
        _this.context.lineTo(dx,dy);
        _this.context.stroke();
      },
      slicePattern :function _trc_Panel_slicePattern(x,y,width,height) {
        "use strict";
        var _this=this;
        
        return {image: _this.canvas,x: x,y: y,width: width,height: height};
      },
      fiber$slicePattern :function _trc_Panel_f_slicePattern(_thread,x,y,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal={image: _this.canvas,x: x,y: y,width: width,height: height};return;
        
        
        _thread.retVal=_this;return;
      },
      addPattern :function _trc_Panel_addPattern(x,y,width,height) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$imageList.push(_this.slicePattern(x,y,width,height));
        return Tonyu.globals.$imageList.length-1;
      },
      fiber$addPattern :function _trc_Panel_f_addPattern(_thread,x,y,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$imageList.push(_this.slicePattern(x,y,width,height));
        _thread.retVal=Tonyu.globals.$imageList.length-1;return;
        
        
        _thread.retVal=_this;return;
      },
      getImageData :function _trc_Panel_getImageData(x,y,width,height) {
        "use strict";
        var _this=this;
        
        return _this.context.getImageData(x,y,width,height);
      },
      fiber$getImageData :function _trc_Panel_f_getImageData(_thread,x,y,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.context.getImageData(x,y,width,height);return;
        
        
        _thread.retVal=_this;return;
      },
      putImageData :function _trc_Panel_putImageData(data,x,y) {
        "use strict";
        var _this=this;
        
        return _this.context.putImageData(data,x,y);
      },
      fiber$putImageData :function _trc_Panel_f_putImageData(_thread,data,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.context.putImageData(data,x,y);return;
        
        
        _thread.retVal=_this;return;
      },
      setAsText :function _trc_Panel_setAsText(text,options) {
        "use strict";
        var _this=this;
        var padding;
        var f;
        var size;
        var a;
        var rect;
        var bg;
        
        options=options||{};
        padding = options.padding||0;
        
        switch (typeof  padding) {
        case "number":
          padding={left: padding,top: padding,right: padding,bottom: padding};
          break;
          
        case "string":
          padding=padding.split(/[ ,]+/);
          switch (padding.length) {
          case 1:
            padding={left: padding[0]-0,top: padding[0]-0,right: padding[0]-0,bottom: padding[0]-0};
            break;
            
          case 2:
            padding={left: padding[0]-0,top: padding[1]-0,right: padding[0]-0,bottom: padding[1]-0};
            break;
            
          default:
            padding={left: padding[0]-0,top: padding[1]-0,right: padding[2]-0,bottom: padding[3]-0};
          }
        }
        padding.left=padding.left||0;
        padding.right=padding.right||padding.left;
        padding.top=padding.top||0;
        padding.bottom=padding.bottom||padding.top;
        f = options.fillStyle||_this.fillStyle;
        
        size = options.size||15;
        
        a = new Tonyu.classes.kernel.Align2D("left top");
        
        rect = _this.drawTextRect(_this.context,text,padding.left,padding.top,size,a,"test");
        
        _this.resize(padding.left+rect.w+padding.right,padding.top+rect.h+padding.bottom);
        bg = options.background||options.bg||(function anonymous_10888() {
          
        });
        
        if (typeof  bg!=="function") {
          _this.fillStyle=bg;
          _this.fillRect(0,0,_this.width,_this.height);
          
        } else {
          bg(_this);
          
        }
        _this.fillStyle=f;
        rect = _this.drawTextRect(_this.context,text,padding.left,padding.top,size,a,"fill");
        
      },
      fiber$setAsText :function _trc_Panel_f_setAsText(_thread,text,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var padding;
        var f;
        var size;
        var a;
        var rect;
        var bg;
        
        options=options||{};
        padding = options.padding||0;
        
        switch (typeof  padding) {
        case "number":
          padding={left: padding,top: padding,right: padding,bottom: padding};
          break;
          
        case "string":
          padding=padding.split(/[ ,]+/);
          switch (padding.length) {
          case 1:
            padding={left: padding[0]-0,top: padding[0]-0,right: padding[0]-0,bottom: padding[0]-0};
            break;
            
          case 2:
            padding={left: padding[0]-0,top: padding[1]-0,right: padding[0]-0,bottom: padding[1]-0};
            break;
            
          default:
            padding={left: padding[0]-0,top: padding[1]-0,right: padding[2]-0,bottom: padding[3]-0};
          }
        }
        padding.left=padding.left||0;
        padding.right=padding.right||padding.left;
        padding.top=padding.top||0;
        padding.bottom=padding.bottom||padding.top;
        f = options.fillStyle||_this.fillStyle;
        
        size = options.size||15;
        
        a = new Tonyu.classes.kernel.Align2D("left top");
        
        rect = _this.drawTextRect(_this.context,text,padding.left,padding.top,size,a,"test");
        
        
        _thread.enter(function _trc_Panel_ent_setAsText(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resize(_thread, padding.left+rect.w+padding.right, padding.top+rect.h+padding.bottom);
              __pc=1;return;
            case 1:
              
              bg = options.background||options.bg||(function anonymous_10888() {
                
              });
              
              if (typeof  bg!=="function") {
                _this.fillStyle=bg;
                _this.fillRect(0,0,_this.width,_this.height);
                
              } else {
                bg(_this);
                
              }
              _this.fillStyle=f;
              rect = _this.drawTextRect(_this.context,text,padding.left,padding.top,size,a,"fill");
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      replace :function _trc_Panel_replace(x,y,width,height,replacement) {
        "use strict";
        var _this=this;
        
      },
      fiber$replace :function _trc_Panel_f_replace(_thread,x,y,width,height,replacement) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      save :function _trc_Panel_save(fn) {
        "use strict";
        var _this=this;
        var url;
        
        url = _this.buf[0].toDataURL();
        
        if (typeof  fn==="string") {
          fn=_this.file(fn);
        }
        return fn.text(url);
      },
      fiber$save :function _trc_Panel_f_save(_thread,fn) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var url;
        
        url = _this.buf[0].toDataURL();
        
        
        _thread.enter(function _trc_Panel_ent_save(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  fn==="string")) { __pc=2     ; break; }
              _this.fiber$file(_thread, fn);
              __pc=1;return;
            case 1:
              fn=_thread.retVal;
              
            case 2     :
              
              _thread.exit(fn.text(url));return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      download :function _trc_Panel_download(filename) {
        "use strict";
        var _this=this;
        var url;
        
        filename=filename||"download.png";
        url = _this.buf[0].toDataURL();
        
        FS.Content.url(url).download(filename);
      },
      fiber$download :function _trc_Panel_f_download(_thread,filename) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var url;
        
        filename=filename||"download.png";
        url = _this.buf[0].toDataURL();
        
        FS.Content.url(url).download(filename);
        
        _thread.retVal=_this;return;
      },
      load :function _trc_Panel_load(fn) {
        "use strict";
        var _this=this;
        var d;
        var url;
        var element;
        
        if (typeof  fn==="string") {
          fn=_this.file(fn);
        }
        d = new $.Deferred();
        
        url = fn.text();
        
        element = $("<img>").css({display: "none"}).appendTo("body");
        
        element.on("load",(function anonymous_11648() {
          var img;
          var width;
          var height;
          
          img = new Image();
          
          img.src=element.attr('src');
          width = img.width;
          
          height = img.height;
          
          _this.resize(width,height);
          _this.context.drawImage(img,0,0);
          d.resolve(_this);
        }));
        element.attr({src: url});
        return d.promise();
      },
      fiber$load :function _trc_Panel_f_load(_thread,fn) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var d;
        var url;
        var element;
        
        
        _thread.enter(function _trc_Panel_ent_load(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(typeof  fn==="string")) { __pc=2     ; break; }
              _this.fiber$file(_thread, fn);
              __pc=1;return;
            case 1:
              fn=_thread.retVal;
              
            case 2     :
              
              d = new $.Deferred();
              
              url = fn.text();
              
              element = $("<img>").css({display: "none"}).appendTo("body");
              
              element.on("load",(function anonymous_11648() {
                var img;
                var width;
                var height;
                
                img = new Image();
                
                img.src=element.attr('src');
                width = img.width;
                
                height = img.height;
                
                _this.resize(width,height);
                _this.context.drawImage(img,0,0);
                d.resolve(_this);
              }));
              element.attr({src: url});
              _thread.exit(d.promise());return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __setter__imageSmoothingEnabled :function _trc_Panel___setter__imageSmoothingEnabled(v) {
        "use strict";
        var _this=this;
        var context;
        
        context = _this.context;
        
        if (! context) {
          return _this;
        }
        if (typeof  context.msImageSmoothingEnabled==="boolean") {
          context.msImageSmoothingEnabled=v;
          
        } else {
          context.imageSmoothingEnabled=v;
          
        }
      },
      __getter__imageSmoothingEnabled :function _trc_Panel___getter__imageSmoothingEnabled() {
        "use strict";
        var _this=this;
        var context;
        
        context = _this.context;
        
        if (! context) {
          return _this;
        }
        if (typeof  context.msImageSmoothingEnabled==="boolean") {
          return context.msImageSmoothingEnabled;
          
        } else {
          return context.imageSmoothingEnabled;
          
        }
      },
      replaceColor :function _trc_Panel_replaceColor() {
        "use strict";
        var _this=this;
        var a;
        var top;
        var left;
        var w;
        var h;
        var func;
        var ctx;
        var data;
        var i;
        var j;
        
        a = new Tonyu.classes.kernel.ArgParser(arguments);
        
        top = 0;
        left = 0;
        
        w = _this.width;
        h = _this.height;
        
        if (a.length>=4) {
          left=a.shift();
          top=a.shift();
          w=a.shift();
          h=a.shift();
          
        }
        func = a.shift();
        
        if (typeof  func!=="function") {
          ctx = _this.context;
          
          ctx.save();
          ctx.beginPath();
          ctx.moveTo(left,top);
          ctx.lineTo(left+w,top);
          ctx.lineTo(left+w,top+h);
          ctx.lineTo(left,top+h);
          ctx.closePath();
          ctx.clip();
          ctx.globalCompositeOperation="source-in";
          if (func) {
            _this.fillStyle=func;
          }
          ctx.fillRect(left,top,w,h);
          ctx.restore();
          return _this;
          
        }
        data = _this.getImageData(left,top,w,h);
        
        i = 0;
        for (; i<h ; i++) {
          {
            j = 0;
            for (; j<w ; j++) {
              {
                func(new Tonyu.classes.kernel.Color(data,j,i),left+j,top+i);
              }
            }
          }
        }
        _this.putImageData(data,left,top);
      },
      fiber$replaceColor :function _trc_Panel_f_replaceColor(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        var top;
        var left;
        var w;
        var h;
        var func;
        var ctx;
        var data;
        var i;
        var j;
        
        a = new Tonyu.classes.kernel.ArgParser(_arguments);
        
        top = 0;
        left = 0;
        
        w = _this.width;
        h = _this.height;
        
        if (a.length>=4) {
          left=a.shift();
          top=a.shift();
          w=a.shift();
          h=a.shift();
          
        }
        func = a.shift();
        
        if (typeof  func!=="function") {
          ctx = _this.context;
          
          ctx.save();
          ctx.beginPath();
          ctx.moveTo(left,top);
          ctx.lineTo(left+w,top);
          ctx.lineTo(left+w,top+h);
          ctx.lineTo(left,top+h);
          ctx.closePath();
          ctx.clip();
          ctx.globalCompositeOperation="source-in";
          if (func) {
            _this.fillStyle=func;
          }
          ctx.fillRect(left,top,w,h);
          ctx.restore();
          _thread.retVal=_this;return;
          
          
        }
        
        _thread.enter(function _trc_Panel_ent_replaceColor(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getImageData(_thread, left, top, w, h);
              __pc=1;return;
            case 1:
              data=_thread.retVal;
              
              i = 0;
              for (; i<h ; i++) {
                {
                  j = 0;
                  for (; j<w ; j++) {
                    {
                      func(new Tonyu.classes.kernel.Color(data,j,i),left+j,top+i);
                    }
                  }
                }
              }
              _this.fiber$putImageData(_thread, data, left, top);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"watchResize":{"nowait":false},"setPanel":{"nowait":false},"resize":{"nowait":false},"getContext":{"nowait":false},"__getter__context":{"nowait":true},"__getter__image":{"nowait":true},"setFillStyle":{"nowait":false},"__getter__fillStyle":{"nowait":true},"__setter__fillStyle":{"nowait":true},"__setter__strokeStyle":{"nowait":true},"__setter__lineWidth":{"nowait":true},"fillCircle":{"nowait":false},"fillRect":{"nowait":true},"fillText":{"nowait":false},"clearRect":{"nowait":false},"getPixelColor":{"nowait":false},"getPixel":{"nowait":false},"scroll":{"nowait":false},"draw":{"nowait":true},"drawSprite":{"nowait":true},"copy":{"nowait":true},"convert":{"nowait":false},"drawLine":{"nowait":true},"slicePattern":{"nowait":false},"addPattern":{"nowait":false},"getImageData":{"nowait":false},"putImageData":{"nowait":false},"setAsText":{"nowait":false},"replace":{"nowait":false},"save":{"nowait":false},"download":{"nowait":false},"load":{"nowait":false},"__setter__imageSmoothingEnabled":{"nowait":true},"__getter__imageSmoothingEnabled":{"nowait":true},"replaceColor":{"nowait":false}},"fields":{"canvas":{},"_fillStyle":{},"_drawn":{},"buf":{},"imagedata":{},"colordata":{},"px":{},"py":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ScaledCanvas',
  shortName: 'ScaledCanvas',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ScaledCanvas_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ScaledCanvas_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ScaledCanvas_initialize(opt) {
        "use strict";
        var _this=this;
        
        _this.extend(opt);
        _this.resize(_this.width,_this.height);
        _this.cw=_this.canvas.width();
        _this.ch=_this.canvas.height();
        _this.cctx=_this.canvas[0].getContext("2d");
        _this._color="rgb(20,80,180)";
        _this.sx=0;
        _this.sy=0;
        _this.isDrawGrid=Tonyu.globals.$Sprites.isDrawGrid;
      },
      resize :function _trc_ScaledCanvas_resize(width,height) {
        "use strict";
        var _this=this;
        
        _this.width=width;
        _this.height=height;
        _this.buf=$("<canvas>").attr({width: width,height: height});
        _this.ctx=_this.buf[0].getContext("2d");
        Tonyu.globals.$screenWidth=width;
        Tonyu.globals.$screenHeight=height;
        if (Tonyu.globals.$panel) {
          Tonyu.globals.$panel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
          Tonyu.globals.$panel.x=Tonyu.globals.$screenWidth/2;
          Tonyu.globals.$panel.y=Tonyu.globals.$screenHeight/2;
          
        }
        if (Tonyu.globals.$consolePanel) {
          Tonyu.globals.$consolePanel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
          Tonyu.globals.$consolePanel.x=Tonyu.globals.$screenWidth/2;
          Tonyu.globals.$consolePanel.y=Tonyu.globals.$screenHeight/2;
          Tonyu.globals.$consolePrintY=Tonyu.globals.$screenHeight;
          
        }
      },
      fiber$resize :function _trc_ScaledCanvas_f_resize(_thread,width,height) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.width=width;
        _this.height=height;
        _this.buf=$("<canvas>").attr({width: width,height: height});
        _this.ctx=_this.buf[0].getContext("2d");
        Tonyu.globals.$screenWidth=width;
        Tonyu.globals.$screenHeight=height;
        if (Tonyu.globals.$panel) {
          Tonyu.globals.$panel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
          Tonyu.globals.$panel.x=Tonyu.globals.$screenWidth/2;
          Tonyu.globals.$panel.y=Tonyu.globals.$screenHeight/2;
          
        }
        if (Tonyu.globals.$consolePanel) {
          Tonyu.globals.$consolePanel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
          Tonyu.globals.$consolePanel.x=Tonyu.globals.$screenWidth/2;
          Tonyu.globals.$consolePanel.y=Tonyu.globals.$screenHeight/2;
          Tonyu.globals.$consolePrintY=Tonyu.globals.$screenHeight;
          
        }
        
        _thread.retVal=_this;return;
      },
      shouldDraw1x1 :function _trc_ScaledCanvas_shouldDraw1x1(srcw,srch,dstw,dsth) {
        "use strict";
        var _this=this;
        var larger;
        var smaller;
        
        larger = 200;
        
        smaller = 5;
        
        return srcw-smaller<=dstw&&dstw<=srcw+larger&&srch-smaller<=dsth&&dsth<=srch+larger;
      },
      fiber$shouldDraw1x1 :function _trc_ScaledCanvas_f_shouldDraw1x1(_thread,srcw,srch,dstw,dsth) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var larger;
        var smaller;
        
        larger = 200;
        
        smaller = 5;
        
        _thread.retVal=srcw-smaller<=dstw&&dstw<=srcw+larger&&srch-smaller<=dsth&&dsth<=srch+larger;return;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_ScaledCanvas_draw() {
        "use strict";
        var _this=this;
        var calcw;
        var calch;
        var marginw;
        var marginh;
        
        _this.cw=_this.canvas.width();
        _this.ch=_this.canvas.height();
        calcw = _this.ch/_this.height*_this.width;
        
        calch = _this.cw/_this.width*_this.height;
        
        if (calch>_this.ch) {
          calch=_this.ch;
        }
        if (calcw>_this.cw) {
          calcw=_this.cw;
        }
        _this.cctx.clearRect(0,0,_this.cw,_this.ch);
        if (_this.shouldDraw1x1(_this.width,_this.height,calcw,calch)) {
          calcw=_this.width;
          calch=_this.height;
          
        }
        marginw = Math.floor((_this.cw-calcw)/2);
        
        marginh = Math.floor((_this.ch-calch)/2);
        
        _this.cctx.drawImage(_this.buf[0],0,0,_this.width,_this.height,marginw,marginh,calcw,calch);
      },
      canvas2buf :function _trc_ScaledCanvas_canvas2buf(point) {
        "use strict";
        var _this=this;
        var calcw;
        var calch;
        var marginw;
        var marginh;
        
        calcw = _this.ch/_this.height*_this.width;
        
        calch = _this.cw/_this.width*_this.height;
        
        if (calch>_this.ch) {
          calch=_this.ch;
        }
        if (calcw>_this.cw) {
          calcw=_this.cw;
        }
        if (_this.shouldDraw1x1(_this.width,_this.height,calcw,calch)) {
          calcw=_this.width;
          calch=_this.height;
          
        }
        marginw = Math.floor((_this.cw-calcw)/2);
        
        marginh = Math.floor((_this.ch-calch)/2);
        
        _this._ret="("+point.x+"-"+marginw+")/"+calcw+"*"+_this.width+",";
        return {x: (point.x-marginw)/calcw*_this.width,y: (point.y-marginh)/calch*_this.height};
      },
      fiber$canvas2buf :function _trc_ScaledCanvas_f_canvas2buf(_thread,point) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var calcw;
        var calch;
        var marginw;
        var marginh;
        
        calcw = _this.ch/_this.height*_this.width;
        
        calch = _this.cw/_this.width*_this.height;
        
        if (calch>_this.ch) {
          calch=_this.ch;
        }
        if (calcw>_this.cw) {
          calcw=_this.cw;
        }
        if (_this.shouldDraw1x1(_this.width,_this.height,calcw,calch)) {
          calcw=_this.width;
          calch=_this.height;
          
        }
        marginw = Math.floor((_this.cw-calcw)/2);
        
        marginh = Math.floor((_this.ch-calch)/2);
        
        _this._ret="("+point.x+"-"+marginw+")/"+calcw+"*"+_this.width+",";
        _thread.retVal={x: (point.x-marginw)/calcw*_this.width,y: (point.y-marginh)/calch*_this.height};return;
        
        
        _thread.retVal=_this;return;
      },
      setBGColor :function _trc_ScaledCanvas_setBGColor(color) {
        "use strict";
        var _this=this;
        
        _this._color=color;
      },
      fiber$setBGColor :function _trc_ScaledCanvas_f_setBGColor(_thread,color) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._color=color;
        
        _thread.retVal=_this;return;
      },
      fillCanvas :function _trc_ScaledCanvas_fillCanvas(cv) {
        "use strict";
        var _this=this;
        var ctx;
        
        ctx = cv.getContext("2d");
        
        ctx.save();
        ctx.fillStyle=_this._color+"";
        ctx.fillRect(0,0,cv.width,cv.height);
        if (_this.isDrawGrid) {
          _this.drawGrid(cv);
        }
        ctx.restore();
      },
      fiber$fillCanvas :function _trc_ScaledCanvas_f_fillCanvas(_thread,cv) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var ctx;
        
        ctx = cv.getContext("2d");
        
        ctx.save();
        ctx.fillStyle=_this._color+"";
        ctx.fillRect(0,0,cv.width,cv.height);
        if (_this.isDrawGrid) {
          _this.drawGrid(cv);
        }
        ctx.restore();
        
        _thread.retVal=_this;return;
      },
      scrollTo :function _trc_ScaledCanvas_scrollTo(scrollX,scrollY) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Sprites.scrollTo(scrollX,scrollY);
      },
      fiber$scrollTo :function _trc_ScaledCanvas_f_scrollTo(_thread,scrollX,scrollY) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$Sprites.scrollTo(scrollX,scrollY);
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"resize":{"nowait":false},"shouldDraw1x1":{"nowait":false},"draw":{"nowait":true},"canvas2buf":{"nowait":false},"setBGColor":{"nowait":false},"fillCanvas":{"nowait":false},"scrollTo":{"nowait":false}},"fields":{"cw":{},"canvas":{},"ch":{},"cctx":{},"sx":{},"sy":{},"isDrawGrid":{},"buf":{},"ctx":{},"_ret":{},"_color":{},"drawGrid":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Screen',
  shortName: 'Screen',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Panel,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Screen_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Screen_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Screen_initialize(opt) {
        "use strict";
        var _this=this;
        
        _this.layers=[];
        _this._color="black";
        _this.camera={screen: _this};
        __superClass.apply( _this, [opt]);
      },
      drawLayers :function _trc_Screen_drawLayers() {
        "use strict";
        var _this=this;
        var c;
        var i;
        var l;
        
        if (! _this._drawing) {
          if (! _this.canvas) {
            throw new Error("canvas is null");
            
            
          }
          _this._drawing=true;
          if (_this.clearBG) {
            _this.clearRect(0,0,_this.width,_this.height);
            
          }
          _this.fillStyle=_this._color+"";
          _this.fillRect(0,0,_this.width,_this.height);
          c = _this.getContext();
          
          i = _this.layers.length-1;
          for (; i>=0 ; i--) {
            {
              l = _this.layers[i];
              
              l.draw(c);
            }
          }
          _this._drawing=false;
          
        }
      },
      fiber$drawLayers :function _trc_Screen_f_drawLayers(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var c;
        var i;
        var l;
        
        
        _thread.enter(function _trc_Screen_ent_drawLayers(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this._drawing)) { __pc=4     ; break; }
              if (! _this.canvas) {
                throw new Error("canvas is null");
                
                
              }
              _this._drawing=true;
              if (!(_this.clearBG)) { __pc=2     ; break; }
              _this.fiber$clearRect(_thread, 0, 0, _this.width, _this.height);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _this.fillStyle=_this._color+"";
              _this.fillRect(0,0,_this.width,_this.height);
              _this.fiber$getContext(_thread);
              __pc=3;return;
            case 3:
              c=_thread.retVal;
              
              i = _this.layers.length-1;
              for (; i>=0 ; i--) {
                {
                  l = _this.layers[i];
                  
                  l.draw(c);
                }
              }
              _this._drawing=false;
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      draw :function _trc_Screen_draw(ctx) {
        "use strict";
        var _this=this;
        
        _this.drawLayers();
        __superClass.prototype.draw.apply( _this, [ctx]);
      },
      addLayer :function _trc_Screen_addLayer(group,at) {
        "use strict";
        var _this=this;
        var layer;
        
        
        if (Tonyu.is(group,Tonyu.classes.kernel.ScreenLayer)) {
          layer=group;
          
        } else {
          group=group||new Tonyu.classes.kernel.Sprites;
          layer=new Tonyu.classes.kernel.Layer2D({spx: 0,spy: 0,wpx: 0,wpy: 0,rotation: 0,scale: 1,group: group,screen: _this,index: _this.layers.length});
          
        }
        if (at==null) {
          _this.layers.push(layer);
        } else {
          if (at<0) {
            at=_this.layers.length-at;
          }
          _this.layers.splice(at,0,layer);
          
        }
        if (_this.layers.length==1&&_this.index==null) {
          _this.selectLayer(layer);
          
        }
        return layer;
      },
      fiber$addLayer :function _trc_Screen_f_addLayer(_thread,group,at) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var layer;
        
        
        if (Tonyu.is(group,Tonyu.classes.kernel.ScreenLayer)) {
          layer=group;
          
        } else {
          group=group||new Tonyu.classes.kernel.Sprites;
          layer=new Tonyu.classes.kernel.Layer2D({spx: 0,spy: 0,wpx: 0,wpy: 0,rotation: 0,scale: 1,group: group,screen: _this,index: _this.layers.length});
          
        }
        if (at==null) {
          _this.layers.push(layer);
        } else {
          if (at<0) {
            at=_this.layers.length-at;
          }
          _this.layers.splice(at,0,layer);
          
        }
        
        _thread.enter(function _trc_Screen_ent_addLayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.layers.length==1&&_this.index==null)) { __pc=2     ; break; }
              _this.fiber$selectLayer(_thread, layer);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _thread.exit(layer);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      removeLayer :function _trc_Screen_removeLayer(i) {
        "use strict";
        var _this=this;
        var r;
        
        r = _this.findLayerIndex(i);
        
        if (r<0) {
          return _this;
        }
        _this.layers.splice(r,1);
      },
      fiber$removeLayer :function _trc_Screen_f_removeLayer(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        _thread.enter(function _trc_Screen_ent_removeLayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$findLayerIndex(_thread, i);
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              if (!(r<0)) { __pc=2     ; break; }
              _thread.exit(_this);return;
            case 2     :
              
              _this.layers.splice(r,1);
              _thread.exit(_this);return;
            }
          }
        });
      },
      selectLayer :function _trc_Screen_selectLayer(i) {
        "use strict";
        var _this=this;
        var r;
        
        r = _this.findLayerIndex(i);
        
        if (r!=null) {
          _this.index=r;
        }
      },
      fiber$selectLayer :function _trc_Screen_f_selectLayer(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        
        
        _thread.enter(function _trc_Screen_ent_selectLayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$findLayerIndex(_thread, i);
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              if (r!=null) {
                _this.index=r;
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      findLayerIndex :function _trc_Screen_findLayerIndex(i) {
        "use strict";
        var _this=this;
        var j;
        
        if (typeof  i=="number") {
          if (_this.layers[i]) {
            return i;
          }
          
        } else {
          j = 0;
          for (; j<_this.layers.length ; j++) {
            {
              if (_this.layers[j]==i||_this.layers[j].group==i) {
                return j;
                
              }
            }
          }
          
        }
        return - 1;
      },
      fiber$findLayerIndex :function _trc_Screen_f_findLayerIndex(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var j;
        
        if (typeof  i=="number") {
          if (_this.layers[i]) {
            _thread.retVal=i;return;
            
          }
          
        } else {
          j = 0;
          for (; j<_this.layers.length ; j++) {
            {
              if (_this.layers[j]==i||_this.layers[j].group==i) {
                _thread.retVal=j;return;
                
                
              }
            }
          }
          
        }
        _thread.retVal=- 1;return;
        
        
        _thread.retVal=_this;return;
      },
      findLayer :function _trc_Screen_findLayer(key) {
        "use strict";
        var _this=this;
        var idx;
        
        idx = _this.findLayerIndex(key);
        
        if (idx>=0) {
          return _this.layers[idx];
        }
        return null;
      },
      fiber$findLayer :function _trc_Screen_f_findLayer(_thread,key) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var idx;
        
        
        _thread.enter(function _trc_Screen_ent_findLayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$findLayerIndex(_thread, key);
              __pc=1;return;
            case 1:
              idx=_thread.retVal;
              
              if (!(idx>=0)) { __pc=2     ; break; }
              _thread.exit(_this.layers[idx]);return;
            case 2     :
              
              _thread.exit(null);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      setPivot :function _trc_Screen_setPivot(x,y) {
        "use strict";
        var _this=this;
        
        _this.layers[_this.index].spx=x;
        _this.layers[_this.index].spy=y;
      },
      fiber$setPivot :function _trc_Screen_f_setPivot(_thread,x,y) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.layers[_this.index].spx=x;
        _this.layers[_this.index].spy=y;
        
        _thread.retVal=_this;return;
      },
      scrollTo :function _trc_Screen_scrollTo(x,y,scl,rot) {
        "use strict";
        var _this=this;
        
        _this.layers[_this.index].wpx=x;
        _this.layers[_this.index].wpy=y;
        if (typeof  scl=="number") {
          _this.layers[_this.index].scale=scl;
        }
        if (typeof  rot=="number") {
          _this.layers[_this.index].rotation=rot;
        }
      },
      fiber$scrollTo :function _trc_Screen_f_scrollTo(_thread,x,y,scl,rot) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.layers[_this.index].wpx=x;
        _this.layers[_this.index].wpy=y;
        if (typeof  scl=="number") {
          _this.layers[_this.index].scale=scl;
        }
        if (typeof  rot=="number") {
          _this.layers[_this.index].rotation=rot;
        }
        
        _thread.retVal=_this;return;
      },
      canvas2buf :function _trc_Screen_canvas2buf(p) {
        "use strict";
        var _this=this;
        
        p.layer=_this.layer;
        return _this.convert(p,_this);
      },
      fiber$canvas2buf :function _trc_Screen_f_canvas2buf(_thread,p) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        p.layer=_this.layer;
        
        _thread.enter(function _trc_Screen_ent_canvas2buf(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$convert(_thread, p, _this);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      convert :function _trc_Screen_convert(obj,toLayer) {
        "use strict";
        var _this=this;
        var p;
        var l;
        
        if (toLayer==null) {
          toLayer=_this;
        }
        if (! obj.layer) {
          obj.layer=_this;
        }
        if (obj.layer===toLayer) {
          return obj;
        }
        if (obj.layer!==_this&&toLayer!==_this) {
          p = _this.convert(obj,_this);
          
          return _this.convert(p,toLayer);
          
        } else {
          if (obj.layer!==_this&&toLayer===_this) {
            l = _this.findLayer(obj.layer);
            
            if (l!=null) {
              return l.world2screen(obj);
              
            } else {
              return __superClass.prototype.convert.apply( _this, [obj,_this]);
              
            }
            
          } else {
            if (obj.layer===_this&&toLayer!==_this) {
              l = _this.findLayer(toLayer);
              
              if (l!=null) {
                return l.screen2world(obj);
                
              } else {
                return __superClass.prototype.convert.apply( _this, [obj,toLayer]);
                
              }
              
            } else {
              return obj;
            }
          }
        }
      },
      fiber$convert :function _trc_Screen_f_convert(_thread,obj,toLayer) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var p;
        var l;
        
        if (toLayer==null) {
          toLayer=_this;
        }
        if (! obj.layer) {
          obj.layer=_this;
        }
        if (obj.layer===toLayer) {
          _thread.retVal=obj;return;
          
        }
        
        _thread.enter(function _trc_Screen_ent_convert(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(obj.layer!==_this&&toLayer!==_this)) { __pc=3     ; break; }
              _this.fiber$convert(_thread, obj, _this);
              __pc=1;return;
            case 1:
              p=_thread.retVal;
              
              _this.fiber$convert(_thread, p, toLayer);
              __pc=2;return;
            case 2:
              _thread.exit(_thread.retVal);return;
              
              __pc=14    ;break;
            case 3     :
              if (!(obj.layer!==_this&&toLayer===_this)) { __pc=7     ; break; }
              _this.fiber$findLayer(_thread, obj.layer);
              __pc=4;return;
            case 4:
              l=_thread.retVal;
              
              if (!(l!=null)) { __pc=5     ; break; }
              _thread.exit(l.world2screen(obj));return;
              __pc=6     ;break;
            case 5     :
              _thread.exit(__superClass.prototype.convert.apply( _this, [obj,_this]));return;
            case 6     :
              
              __pc=13    ;break;
            case 7     :
              if (!(obj.layer===_this&&toLayer!==_this)) { __pc=11    ; break; }
              _this.fiber$findLayer(_thread, toLayer);
              __pc=8;return;
            case 8:
              l=_thread.retVal;
              
              if (!(l!=null)) { __pc=9     ; break; }
              _thread.exit(l.screen2world(obj));return;
              __pc=10    ;break;
            case 9     :
              _thread.exit(__superClass.prototype.convert.apply( _this, [obj,toLayer]));return;
            case 10    :
              
              __pc=12    ;break;
            case 11    :
              _thread.exit(obj);return;
            case 12    :
              
            case 13    :
              
            case 14    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setBGColor :function _trc_Screen_setBGColor(color) {
        "use strict";
        var _this=this;
        
        _this._color=color;
      },
      fiber$setBGColor :function _trc_Screen_f_setBGColor(_thread,color) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._color=color;
        
        _thread.retVal=_this;return;
      },
      all :function _trc_Screen_all() {
        "use strict";
        var _this=this;
        var res;
        var l;
        var _it_6489;
        var q;
        
        res = new Tonyu.classes.kernel.TQuery({screen: _this});
        
        _it_6489=Tonyu.iterator(_this.layers,1);
        while(_it_6489.next()) {
          l=_it_6489[0];
          
          q = l.group.all.apply(l.group,arguments);
          
          res.push(q);
          
        }
        return res;
      },
      saveAndClear :function _trc_Screen_saveAndClear(excludes) {
        "use strict";
        var _this=this;
        var res;
        var l;
        var _it_6494;
        
        res = [];
        
        excludes=excludes||Tonyu.globals.$excludeFromAll.toArray();
        _it_6494=Tonyu.iterator(_this.layers,1);
        while(_it_6494.next()) {
          l=_it_6494[0];
          
          res.push(l.group.saveAndClear(excludes));
          
        }
        return {layers: res,multiLayerTouches: _this.multiLayerTouches&&_this.multiLayerTouches.saveAndClear()};
      },
      fiber$saveAndClear :function _trc_Screen_f_saveAndClear(_thread,excludes) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var l;
        var _it_6494;
        
        res = [];
        
        excludes=excludes||Tonyu.globals.$excludeFromAll.toArray();
        _it_6494=Tonyu.iterator(_this.layers,1);
        while(_it_6494.next()) {
          l=_it_6494[0];
          
          res.push(l.group.saveAndClear(excludes));
          
        }
        _thread.retVal={layers: res,multiLayerTouches: _this.multiLayerTouches&&_this.multiLayerTouches.saveAndClear()};return;
        
        
        _thread.retVal=_this;return;
      },
      restore :function _trc_Screen_restore(saved) {
        "use strict";
        var _this=this;
        var i;
        var l;
        var _it_6498;
        
        i = 0;
        
        _it_6498=Tonyu.iterator(_this.layers,1);
        while(_it_6498.next()) {
          l=_it_6498[0];
          
          l.group.restore(saved.layers[i]);
          i++;
          
        }
        if (_this.multiLayerTouches&&saved.multiLayerTouches) {
          _this.multiLayerTouches.restore(saved.multiLayerTouches);
          
        }
      },
      fiber$restore :function _trc_Screen_f_restore(_thread,saved) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var l;
        var _it_6498;
        
        i = 0;
        
        _it_6498=Tonyu.iterator(_this.layers,1);
        while(_it_6498.next()) {
          l=_it_6498[0];
          
          l.group.restore(saved.layers[i]);
          i++;
          
        }
        if (_this.multiLayerTouches&&saved.multiLayerTouches) {
          _this.multiLayerTouches.restore(saved.multiLayerTouches);
          
        }
        
        _thread.retVal=_this;return;
      },
      touchedFingers :function _trc_Screen_touchedFingers(q,options) {
        "use strict";
        var _this=this;
        var res;
        var e;
        var _it_6502;
        var r;
        var i;
        var t;
        var p;
        
        res = [];
        
        options=options||{};
        _it_6502=Tonyu.iterator(q,1);
        while(_it_6502.next()) {
          e=_it_6502[0];
          
          r = e.getCrashRect();
          
          i = 0;
          for (; i<Tonyu.globals.$touches.length ; i++) {
            {
              t = Tonyu.globals.$touches[i];
              
              if (t.touched==1) {
                p = _this.convert(t,e.layer);
                
                if (p.x>=r.x-r.width/2&&p.x<=r.x+r.width/2&&p.y>=r.y-r.height/2&&p.y<=r.y+r.height/2) {
                  t.captured=e;
                  res.push(t);
                  
                }
                
              }
            }
          }
          
        }
        return res;
      },
      fiber$touchedFingers :function _trc_Screen_f_touchedFingers(_thread,q,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var e;
        var _it_6502;
        var r;
        var i;
        var t;
        var p;
        
        res = [];
        
        options=options||{};
        
        _thread.enter(function _trc_Screen_ent_touchedFingers(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _it_6502=Tonyu.iterator(q,1);
            case 1:
              if (!(_it_6502.next())) { __pc=7     ; break; }
              e=_it_6502[0];
              
              r = e.getCrashRect();
              
              i = 0;
              
            case 2:
              if (!(i<Tonyu.globals.$touches.length)) { __pc=6     ; break; }
              t = Tonyu.globals.$touches[i];
              
              if (!(t.touched==1)) { __pc=4     ; break; }
              _this.fiber$convert(_thread, t, e.layer);
              __pc=3;return;
            case 3:
              p=_thread.retVal;
              
              if (p.x>=r.x-r.width/2&&p.x<=r.x+r.width/2&&p.y>=r.y-r.height/2&&p.y<=r.y+r.height/2) {
                t.captured=e;
                res.push(t);
                
              }
            case 4     :
              
            case 5     :
              i++;
              __pc=2;break;
            case 6     :
              
              __pc=1;break;
            case 7     :
              
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"drawLayers":{"nowait":false},"draw":{"nowait":true},"addLayer":{"nowait":false},"removeLayer":{"nowait":false},"selectLayer":{"nowait":false},"findLayerIndex":{"nowait":false},"findLayer":{"nowait":false},"setPivot":{"nowait":false},"scrollTo":{"nowait":false},"canvas2buf":{"nowait":false},"convert":{"nowait":false},"setBGColor":{"nowait":false},"all":{"nowait":true},"saveAndClear":{"nowait":false},"restore":{"nowait":false},"touchedFingers":{"nowait":false}},"fields":{"layers":{},"_color":{},"camera":{},"_drawing":{},"clearBG":{},"index":{},"multiLayerTouches":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.KernelDemo',
  shortName: 'KernelDemo',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_KernelDemo_main() {
        "use strict";
        var _this=this;
        
        new Tonyu.classes.kernel.Label({x: Tonyu.globals.$screenWidth/2,y: 0,text: "Tonyu System",size: 20});
        new Tonyu.classes.kernel.Actor({x: 0,y: 0,align: "left top",fillStyle: "red",width: 50,height: 50});
      },
      fiber$main :function _trc_KernelDemo_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        new Tonyu.classes.kernel.Label({x: Tonyu.globals.$screenWidth/2,y: 0,text: "Tonyu System",size: 20});
        new Tonyu.classes.kernel.Actor({x: 0,y: 0,align: "left top",fillStyle: "red",width: 50,height: 50});
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.BodyActor',
  shortName: 'BodyActor',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [Tonyu.classes.kernel.T2Mod],
  methods: function (__superClass) {
    return {
      main :function _trc_BodyActor_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
        
        
      },
      fiber$main :function _trc_BodyActor_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_BodyActor_initialize(p) {
        "use strict";
        var _this=this;
        
        if (typeof  Box2D==="undefined") {
          Tonyu.globals.$currentProject.requestPlugin("box2d");
          
        }
        __superClass.apply( _this, [p]);
        _this._th.on("end",Tonyu.bindFunc(_this,_this.initBody));
      },
      getWorld :function _trc_BodyActor_getWorld() {
        "use strict";
        var _this=this;
        
        if (Tonyu.is(_this.world,Tonyu.classes.kernel.T2World)) {
          return _this.world;
        }
        if (Tonyu.globals.$t2World) {
          return Tonyu.globals.$t2World;
        }
        Tonyu.globals.$t2World=new Tonyu.classes.kernel.T2World;
        return Tonyu.globals.$t2World;
      },
      fiber$getWorld :function _trc_BodyActor_f_getWorld(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (Tonyu.is(_this.world,Tonyu.classes.kernel.T2World)) {
          _thread.retVal=_this.world;return;
          
        }
        if (Tonyu.globals.$t2World) {
          _thread.retVal=Tonyu.globals.$t2World;return;
          
        }
        Tonyu.globals.$t2World=new Tonyu.classes.kernel.T2World;
        _thread.retVal=Tonyu.globals.$t2World;return;
        
        
        _thread.retVal=_this;return;
      },
      update :function _trc_BodyActor_update() {
        "use strict";
        var _this=this;
        
        _this.initBody();
        __superClass.prototype.update.apply( _this, []);
      },
      fiber$update :function _trc_BodyActor_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_BodyActor_ent_update(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initBody(_thread);
              __pc=1;return;
            case 1:
              
              __superClass.prototype.fiber$update.apply( _this, [_thread]);
              __pc=2;return;
            case 2:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initBody :function _trc_BodyActor_initBody() {
        "use strict";
        var _this=this;
        var wworld;
        var b2Vec2;
        var b2BodyDef;
        var b2Body;
        var b2FixtureDef;
        var b2Fixture;
        var b2PolygonShape;
        var b2CircleShape;
        var fixDef;
        var bodyDef;
        var w;
        var h;
        var t;
        var fps;
        var r;
        var ve;
        var vr;
        
        if (_this.isDead()) {
          return false;
        }
        if (_this.body) {
          return _this.body;
        }
        wworld = _this.getWorld();
        
        _this.b2world=wworld.world;
        _this.wscale=wworld.scale;
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        b2BodyDef = Box2D.Dynamics.b2BodyDef;
        
        b2Body = Box2D.Dynamics.b2Body;
        
        b2FixtureDef = Box2D.Dynamics.b2FixtureDef;
        
        b2Fixture = Box2D.Dynamics.b2Fixture;
        
        b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;
        
        b2CircleShape = Box2D.Collision.Shapes.b2CircleShape;
        
        fixDef = new b2FixtureDef;
        
        fixDef.density=_this.defv(_this.density,1);
        fixDef.friction=_this.defv(_this.friction,0.5);
        fixDef.restitution=_this.defv(_this.restitution,0.2);
        bodyDef = new b2BodyDef;
        
        bodyDef.type=_this.isStatic?b2Body.b2_staticBody:b2Body.b2_dynamicBody;
        bodyDef.position.x=_this.x/_this.wscale;
        bodyDef.position.y=_this.y/_this.wscale;
        _this.shape=_this.shape||(_this.radius?"circle":"box");
        w = _this.width;
        h = _this.height;
        
        if (! w) {
          t = _this.detectSpriteType();
          
          if (t==="Image") {
            _this.prepareImage();
          } else {
            if (t==="Custom") {
              if (_this.p.width*_this.p.height>0) {
                _this.width=_this.p.width;
                _this.height=_this.p.height;
                
              }
              
            }
          }
          w=_this.width*_this.abs(_this.scaleX||1);
          h=_this.height*_this.abs(_this.scaleY||_this.scaleX||1);
          
        }
        if (_this.shape=="box") {
          if (! w) {
            console.log(_this);
            throw new Error("BodyActor::width is not set");
            
            
          }
          if (! h) {
            h=w;
          }
          fixDef.shape=new b2PolygonShape;
          fixDef.shape.SetAsOrientedBox(w/2/_this.wscale,h/2/_this.wscale,new b2Vec2(0,0),0);
          
        } else {
          _this.radius=_this.radius||w/2||16;
          fixDef.shape=new b2CircleShape(_this.radius/_this.wscale);
          _this.width=_this.height=_this.radius*2;
          
        }
        fps = wworld.fps;
        
        r = _this.rotation;
        ve = _this.bvec(_this.defv(_this.vx*fps,0),_this.defv(_this.vy*fps,0));
        vr = _this.defv(_this.vrotation,0);
        
        _this.body=_this.b2world.CreateBody(bodyDef);
        _this.body.CreateFixture(fixDef);
        _this.body.SetUserData(_this);
        _this.body.SetLinearVelocity(ve);
        _this.rotation=r;
        _this.vrotation=vr;
        _this.fireEvent("createBody");
        return _this.body;
      },
      fiber$initBody :function _trc_BodyActor_f_initBody(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var wworld;
        var b2Vec2;
        var b2BodyDef;
        var b2Body;
        var b2FixtureDef;
        var b2Fixture;
        var b2PolygonShape;
        var b2CircleShape;
        var fixDef;
        var bodyDef;
        var w;
        var h;
        var t;
        var fps;
        var r;
        var ve;
        var vr;
        
        if (_this.isDead()) {
          _thread.retVal=false;return;
          
        }
        if (_this.body) {
          _thread.retVal=_this.body;return;
          
        }
        
        _thread.enter(function _trc_BodyActor_ent_initBody(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getWorld(_thread);
              __pc=1;return;
            case 1:
              wworld=_thread.retVal;
              
              _this.b2world=wworld.world;
              _this.wscale=wworld.scale;
              b2Vec2 = Box2D.Common.Math.b2Vec2;
              
              b2BodyDef = Box2D.Dynamics.b2BodyDef;
              
              b2Body = Box2D.Dynamics.b2Body;
              
              b2FixtureDef = Box2D.Dynamics.b2FixtureDef;
              
              b2Fixture = Box2D.Dynamics.b2Fixture;
              
              b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;
              
              b2CircleShape = Box2D.Collision.Shapes.b2CircleShape;
              
              fixDef = new b2FixtureDef;
              
              _this.fiber$defv(_thread, _this.density, 1);
              __pc=2;return;
            case 2:
              fixDef.density=_thread.retVal;
              
              _this.fiber$defv(_thread, _this.friction, 0.5);
              __pc=3;return;
            case 3:
              fixDef.friction=_thread.retVal;
              
              _this.fiber$defv(_thread, _this.restitution, 0.2);
              __pc=4;return;
            case 4:
              fixDef.restitution=_thread.retVal;
              
              bodyDef = new b2BodyDef;
              
              bodyDef.type=_this.isStatic?b2Body.b2_staticBody:b2Body.b2_dynamicBody;
              bodyDef.position.x=_this.x/_this.wscale;
              bodyDef.position.y=_this.y/_this.wscale;
              _this.shape=_this.shape||(_this.radius?"circle":"box");
              w = _this.width;
              h = _this.height;
              
              if (!(! w)) { __pc=6     ; break; }
              _this.fiber$detectSpriteType(_thread);
              __pc=5;return;
            case 5:
              t=_thread.retVal;
              
              if (t==="Image") {
                _this.prepareImage();
              } else {
                if (t==="Custom") {
                  if (_this.p.width*_this.p.height>0) {
                    _this.width=_this.p.width;
                    _this.height=_this.p.height;
                    
                  }
                  
                }
              }
              w=_this.width*_this.abs(_this.scaleX||1);
              h=_this.height*_this.abs(_this.scaleY||_this.scaleX||1);
            case 6     :
              
              if (_this.shape=="box") {
                if (! w) {
                  console.log(_this);
                  throw new Error("BodyActor::width is not set");
                  
                  
                }
                if (! h) {
                  h=w;
                }
                fixDef.shape=new b2PolygonShape;
                fixDef.shape.SetAsOrientedBox(w/2/_this.wscale,h/2/_this.wscale,new b2Vec2(0,0),0);
                
              } else {
                _this.radius=_this.radius||w/2||16;
                fixDef.shape=new b2CircleShape(_this.radius/_this.wscale);
                _this.width=_this.height=_this.radius*2;
                
              }
              fps = wworld.fps;
              
              r = _this.rotation;
              _this.fiber$bvec(_thread, _this.defv(_this.vx*fps,0), _this.defv(_this.vy*fps,0));
              __pc=7;return;
            case 7:
              ve=_thread.retVal;
              _this.fiber$defv(_thread, _this.vrotation, 0);
              __pc=8;return;
            case 8:
              vr=_thread.retVal;
              
              _this.body=_this.b2world.CreateBody(bodyDef);
              _this.body.CreateFixture(fixDef);
              _this.body.SetUserData(_this);
              _this.body.SetLinearVelocity(ve);
              _this.rotation=r;
              _this.vrotation=vr;
              _this.fireEvent("createBody");
              _thread.exit(_this.body);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      allContactPoints :function _trc_BodyActor_allContactPoints(klass) {
        "use strict";
        var _this=this;
        var res;
        var m;
        var point;
        var w;
        var c;
        var a;
        var b;
        
        if (! _this.initBody()) {
          return [];
        }
        res = [];
        
        w = _this.getWorld();
        
        c = _this.b2world.GetContactList();
        for (; c ; c=c.GetNext()) {
          {
            if (c.IsTouching()) {
              c.GetWorldManifold(m=new Box2D.Collision.b2WorldManifold);
              if (m.m_points[0]) {
                if (m.m_points[1]&&m.m_points[1].x&&m.m_points[1].y) {
                  point={x: (m.m_points[0].x+m.m_points[1].x)/2*w.scale,y: (m.m_points[0].y+m.m_points[1].y)/2*w.scale};
                  
                } else {
                  point={x: m.m_points[0].x*w.scale,y: m.m_points[0].y*w.scale};
                  
                }
                
              } else {
                point={x: _this.x,y: _this.y};
              }
              a = c.GetFixtureA().GetBody().GetUserData();
              
              b = c.GetFixtureB().GetBody().GetUserData();
              
              if (a===_this) {
                if (! klass||b===klass||b instanceof klass) {
                  res.push({target: b,manifold: m,x: point.x,y: point.y});
                  
                }
                
              } else {
                if (b===_this) {
                  if (! klass||a===klass||a instanceof klass) {
                    res.push({target: a,manifold: m,x: point.x,y: point.y});
                    
                  }
                  
                }
              }
              
            }
          }
        }
        return res;
      },
      fiber$allContactPoints :function _trc_BodyActor_f_allContactPoints(_thread,klass) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var m;
        var point;
        var w;
        var c;
        var a;
        var b;
        
        if (! _this.initBody()) {
          _thread.retVal=[];return;
          
        }
        res = [];
        
        
        _thread.enter(function _trc_BodyActor_ent_allContactPoints(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getWorld(_thread);
              __pc=1;return;
            case 1:
              w=_thread.retVal;
              
              c = _this.b2world.GetContactList();
              for (; c ; c=c.GetNext()) {
                {
                  if (c.IsTouching()) {
                    c.GetWorldManifold(m=new Box2D.Collision.b2WorldManifold);
                    if (m.m_points[0]) {
                      if (m.m_points[1]&&m.m_points[1].x&&m.m_points[1].y) {
                        point={x: (m.m_points[0].x+m.m_points[1].x)/2*w.scale,y: (m.m_points[0].y+m.m_points[1].y)/2*w.scale};
                        
                      } else {
                        point={x: m.m_points[0].x*w.scale,y: m.m_points[0].y*w.scale};
                        
                      }
                      
                    } else {
                      point={x: _this.x,y: _this.y};
                    }
                    a = c.GetFixtureA().GetBody().GetUserData();
                    
                    b = c.GetFixtureB().GetBody().GetUserData();
                    
                    if (a===_this) {
                      if (! klass||b===klass||b instanceof klass) {
                        res.push({target: b,manifold: m,x: point.x,y: point.y});
                        
                      }
                      
                    } else {
                      if (b===_this) {
                        if (! klass||a===klass||a instanceof klass) {
                          res.push({target: a,manifold: m,x: point.x,y: point.y});
                          
                        }
                        
                      }
                    }
                    
                  }
                }
              }
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      contactPoint :function _trc_BodyActor_contactPoint(klass) {
        "use strict";
        var _this=this;
        
        return _this.allContactPoints(klass)[0];
      },
      fiber$contactPoint :function _trc_BodyActor_f_contactPoint(_thread,klass) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.allContactPoints(klass)[0];return;
        
        
        _thread.retVal=_this;return;
      },
      allContact :function _trc_BodyActor_allContact(klass) {
        "use strict";
        var _this=this;
        
        return _this.allContacts(klass);
      },
      fiber$allContact :function _trc_BodyActor_f_allContact(_thread,klass) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_BodyActor_ent_allContact(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$allContacts(_thread, klass);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      allContacts :function _trc_BodyActor_allContacts(klass) {
        "use strict";
        var _this=this;
        var res;
        var c;
        var a;
        var b;
        
        if (! _this.initBody()) {
          return [];
        }
        res = [];
        
        c = _this.b2world.GetContactList();
        for (; c ; c=c.GetNext()) {
          {
            if (c.IsTouching()) {
              a = c.GetFixtureA().GetBody().GetUserData();
              
              b = c.GetFixtureB().GetBody().GetUserData();
              
              if (a===_this) {
                if (! klass||b===klass||b instanceof klass) {
                  res.push(b);
                  
                }
                
              } else {
                if (b===_this) {
                  if (! klass||a===klass||a instanceof klass) {
                    res.push(a);
                    
                  }
                  
                }
              }
              
            }
          }
        }
        return res;
      },
      fiber$allContacts :function _trc_BodyActor_f_allContacts(_thread,klass) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var c;
        var a;
        var b;
        
        if (! _this.initBody()) {
          _thread.retVal=[];return;
          
        }
        res = [];
        
        c = _this.b2world.GetContactList();
        for (; c ; c=c.GetNext()) {
          {
            if (c.IsTouching()) {
              a = c.GetFixtureA().GetBody().GetUserData();
              
              b = c.GetFixtureB().GetBody().GetUserData();
              
              if (a===_this) {
                if (! klass||b===klass||b instanceof klass) {
                  res.push(b);
                  
                }
                
              } else {
                if (b===_this) {
                  if (! klass||a===klass||a instanceof klass) {
                    res.push(a);
                    
                  }
                  
                }
              }
              
            }
          }
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      applyForce :function _trc_BodyActor_applyForce(fx,fy,px,py) {
        "use strict";
        var _this=this;
        var b2Vec2;
        var scale;
        var fps;
        
        if (! _this.initBody()) {
          return _this;
        }
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        scale = _this.getWorld().scale;
        
        fps = 60;
        
        _this.body.ApplyForce(new b2Vec2(fx,fy),_this.body.GetPosition());
      },
      fiber$applyForce :function _trc_BodyActor_f_applyForce(_thread,fx,fy,px,py) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b2Vec2;
        var scale;
        var fps;
        
        if (! _this.initBody()) {
          _thread.retVal=_this;return;
          
        }
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        scale = _this.getWorld().scale;
        
        fps = 60;
        
        _this.body.ApplyForce(new b2Vec2(fx,fy),_this.body.GetPosition());
        
        _thread.retVal=_this;return;
      },
      applyImpulse :function _trc_BodyActor_applyImpulse(fx,fy,px,py) {
        "use strict";
        var _this=this;
        var b2Vec2;
        var scale;
        var fps;
        
        if (! _this.initBody()) {
          return _this;
        }
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        scale = _this.getWorld().scale;
        
        fps = 60;
        
        _this.body.ApplyImpulse(new b2Vec2(fx,fy),_this.body.GetPosition());
      },
      fiber$applyImpulse :function _trc_BodyActor_f_applyImpulse(_thread,fx,fy,px,py) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b2Vec2;
        var scale;
        var fps;
        
        if (! _this.initBody()) {
          _thread.retVal=_this;return;
          
        }
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        scale = _this.getWorld().scale;
        
        fps = 60;
        
        _this.body.ApplyImpulse(new b2Vec2(fx,fy),_this.body.GetPosition());
        
        _thread.retVal=_this;return;
      },
      applyTorque :function _trc_BodyActor_applyTorque(a) {
        "use strict";
        var _this=this;
        
        if (! _this.initBody()) {
          return _this;
        }
        _this.body.ApplyTorque(a);
      },
      fiber$applyTorque :function _trc_BodyActor_f_applyTorque(_thread,a) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! _this.initBody()) {
          _thread.retVal=_this;return;
          
        }
        _this.body.ApplyTorque(a);
        
        _thread.retVal=_this;return;
      },
      moveBy :function _trc_BodyActor_moveBy(dx,dy) {
        "use strict";
        var _this=this;
        var pos;
        
        if (! _this.initBody()) {
          return _this;
        }
        pos = _this.body.GetPosition();
        
        pos.x+=dx/_this.wscale;
        pos.y+=dy/_this.wscale;
        _this.body.SetPosition(pos);
      },
      fiber$moveBy :function _trc_BodyActor_f_moveBy(_thread,dx,dy) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var pos;
        
        if (! _this.initBody()) {
          _thread.retVal=_this;return;
          
        }
        pos = _this.body.GetPosition();
        
        pos.x+=dx/_this.wscale;
        pos.y+=dy/_this.wscale;
        _this.body.SetPosition(pos);
        
        _thread.retVal=_this;return;
      },
      contactTo :function _trc_BodyActor_contactTo(t) {
        "use strict";
        var _this=this;
        
        return _this.allContact(t)[0];
      },
      fiber$contactTo :function _trc_BodyActor_f_contactTo(_thread,t) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.allContact(t)[0];return;
        
        
        _thread.retVal=_this;return;
      },
      die :function _trc_BodyActor_die() {
        "use strict";
        var _this=this;
        
        __superClass.prototype.die.apply( _this, []);
        if (_this.b2world) {
          _this.b2world.DestroyBody(_this.body);
        }
      },
      addRevoluteJoint :function _trc_BodyActor_addRevoluteJoint(params) {
        "use strict";
        var _this=this;
        var px;
        var py;
        var wworld;
        var scale;
        var b2world;
        var b2BodyDef;
        var b2Body;
        var JDC;
        var jd;
        var bodyB;
        var bodyDef;
        var b2Vec2;
        
        if (! _this.initBody()) {
          return _this;
        }
        params=params||{};
        px = params.x||_this.x;
        
        py = params.y||_this.y;
        
        wworld = _this.getWorld();
        
        scale = wworld.scale;
        
        b2world = wworld.world;
        
        b2BodyDef = Box2D.Dynamics.b2BodyDef;
        
        b2Body = Box2D.Dynamics.b2Body;
        
        JDC = Box2D.Dynamics.Joints.b2RevoluteJointDef;
        
        jd = new JDC;
        
        
        if (params.other&&Tonyu.is(params.other,Tonyu.classes.kernel.BodyActor)) {
          params.other.initBody();
          bodyB=params.other.body;
          
        } else {
          bodyDef = new b2BodyDef;
          
          bodyDef.type=b2Body.b2_staticBody;
          bodyDef.position.x=px/scale;
          bodyDef.position.y=py/scale;
          bodyB=b2world.CreateBody(bodyDef);
          
        }
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        jd.Initialize(_this.body,bodyB,new b2Vec2(px/scale,py/scale));
        if (params.lowerAngle&&params.upperAngle) {
          jd.lowerAngle=_this.rad(params.lowerAngle);
          jd.upperAngle=_this.rad(params.upperAngle);
          jd.enableLimit=true;
          
        }
        b2world.CreateJoint(jd);
      },
      fiber$addRevoluteJoint :function _trc_BodyActor_f_addRevoluteJoint(_thread,params) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var px;
        var py;
        var wworld;
        var scale;
        var b2world;
        var b2BodyDef;
        var b2Body;
        var JDC;
        var jd;
        var bodyB;
        var bodyDef;
        var b2Vec2;
        
        if (! _this.initBody()) {
          _thread.retVal=_this;return;
          
        }
        params=params||{};
        px = params.x||_this.x;
        
        py = params.y||_this.y;
        
        
        _thread.enter(function _trc_BodyActor_ent_addRevoluteJoint(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getWorld(_thread);
              __pc=1;return;
            case 1:
              wworld=_thread.retVal;
              
              scale = wworld.scale;
              
              b2world = wworld.world;
              
              b2BodyDef = Box2D.Dynamics.b2BodyDef;
              
              b2Body = Box2D.Dynamics.b2Body;
              
              JDC = Box2D.Dynamics.Joints.b2RevoluteJointDef;
              
              jd = new JDC;
              
              
              if (params.other&&Tonyu.is(params.other,Tonyu.classes.kernel.BodyActor)) {
                params.other.initBody();
                bodyB=params.other.body;
                
              } else {
                bodyDef = new b2BodyDef;
                
                bodyDef.type=b2Body.b2_staticBody;
                bodyDef.position.x=px/scale;
                bodyDef.position.y=py/scale;
                bodyB=b2world.CreateBody(bodyDef);
                
              }
              b2Vec2 = Box2D.Common.Math.b2Vec2;
              
              jd.Initialize(_this.body,bodyB,new b2Vec2(px/scale,py/scale));
              if (params.lowerAngle&&params.upperAngle) {
                jd.lowerAngle=_this.rad(params.lowerAngle);
                jd.upperAngle=_this.rad(params.upperAngle);
                jd.enableLimit=true;
                
              }
              b2world.CreateJoint(jd);
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__rotation :function _trc_BodyActor___getter__rotation() {
        "use strict";
        var _this=this;
        
        if (! _this.body||_this.manualRotation) {
          return _this._rotation;
        }
        return _this.deg(_this.body.GetAngle());
      },
      __setter__rotation :function _trc_BodyActor___setter__rotation(r) {
        "use strict";
        var _this=this;
        
        r=r||0;
        if (! _this.body||_this.manualRotation) {
          return _this._rotation=r;
        }
        _this.body.SetAngle(_this.rad(r));
      },
      __getter__x :function _trc_BodyActor___getter__x() {
        "use strict";
        var _this=this;
        var pos;
        
        if (! _this.body) {
          return _this._x;
        }
        pos = _this.body.GetPosition();
        
        return pos.x*_this.wscale;
      },
      __setter__x :function _trc_BodyActor___setter__x(v) {
        "use strict";
        var _this=this;
        var pos;
        
        if (! _this.body) {
          return _this._x=v;
        }
        v=v||0;
        pos = _this.body.GetPosition();
        
        pos.x=v/_this.wscale;
        _this.body.SetPosition(pos);
      },
      __getter__y :function _trc_BodyActor___getter__y() {
        "use strict";
        var _this=this;
        var pos;
        
        if (! _this.body) {
          return _this._y;
        }
        pos = _this.body.GetPosition();
        
        return pos.y*_this.wscale;
      },
      __setter__y :function _trc_BodyActor___setter__y(v) {
        "use strict";
        var _this=this;
        var pos;
        
        if (! _this.body) {
          return _this._y=v;
        }
        v=v||0;
        pos = _this.body.GetPosition();
        
        pos.y=v/_this.wscale;
        _this.body.SetPosition(pos);
      },
      __getter__vx :function _trc_BodyActor___getter__vx() {
        "use strict";
        var _this=this;
        var v;
        
        if (! _this.body) {
          return _this._vx;
        }
        v = _this.body.GetLinearVelocity();
        
        return v.x*_this.wscale/_this.getWorld().fps;
      },
      __setter__vx :function _trc_BodyActor___setter__vx(v) {
        "use strict";
        var _this=this;
        var ve;
        
        if (! _this.body) {
          return _this._vx=v;
        }
        v=v||0;
        ve = _this.body.GetLinearVelocity();
        
        ve.x=v/_this.wscale*_this.getWorld().fps;
        if (v) {
          _this.body.SetAwake(true);
        }
        _this.body.SetLinearVelocity(ve);
      },
      __getter__vy :function _trc_BodyActor___getter__vy() {
        "use strict";
        var _this=this;
        var v;
        
        if (! _this.body) {
          return _this._vy;
        }
        v = _this.body.GetLinearVelocity();
        
        return v.y*_this.wscale/_this.getWorld().fps;
      },
      __setter__vy :function _trc_BodyActor___setter__vy(v) {
        "use strict";
        var _this=this;
        var ve;
        
        if (! _this.body) {
          return _this._vy=v;
        }
        ve = _this.body.GetLinearVelocity();
        
        ve.y=v/_this.wscale*_this.getWorld().fps;
        if (v) {
          _this.body.SetAwake(true);
        }
        _this.body.SetLinearVelocity(ve);
      },
      __getter__vrotation :function _trc_BodyActor___getter__vrotation() {
        "use strict";
        var _this=this;
        
        if (! _this.body) {
          return _this._vr;
        }
        return _this.deg(_this.body.GetAngularVelocity()/_this.getWorld().fps);
      },
      __setter__vrotation :function _trc_BodyActor___setter__vrotation(v) {
        "use strict";
        var _this=this;
        
        if (! _this.body) {
          return _this._vr=v;
        }
        v=v||0;
        if (v) {
          _this.body.SetAwake(true);
        }
        _this.body.SetAngularVelocity(_this.rad(v*_this.getWorld().fps));
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"getWorld":{"nowait":false},"update":{"nowait":false},"initBody":{"nowait":false},"allContactPoints":{"nowait":false},"contactPoint":{"nowait":false},"allContact":{"nowait":false},"allContacts":{"nowait":false},"applyForce":{"nowait":false},"applyImpulse":{"nowait":false},"applyTorque":{"nowait":false},"moveBy":{"nowait":false},"contactTo":{"nowait":false},"die":{"nowait":true},"addRevoluteJoint":{"nowait":false},"__getter__rotation":{"nowait":true},"__setter__rotation":{"nowait":true},"__getter__x":{"nowait":true},"__setter__x":{"nowait":true},"__getter__y":{"nowait":true},"__setter__y":{"nowait":true},"__getter__vx":{"nowait":true},"__setter__vx":{"nowait":true},"__getter__vy":{"nowait":true},"__setter__vy":{"nowait":true},"__getter__vrotation":{"nowait":true},"__setter__vrotation":{"nowait":true}},"fields":{"body":{},"wscale":{},"b2world":{},"world":{},"isStatic":{},"shape":{},"manualRotation":{},"density":{},"friction":{},"restitution":{},"radius":{},"width":{},"height":{},"_x":{},"_y":{},"_vx":{},"_vy":{},"_rotation":{},"_vr":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T2Body',
  shortName: 'T2Body',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.BodyActor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T2Body_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T2Body_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.T2World',
  shortName: 'T2World',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [Tonyu.classes.kernel.T2Mod],
  methods: function (__superClass) {
    return {
      main :function _trc_T2World_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T2World_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      onAppear :function _trc_T2World_onAppear() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$currentProject.requestPlugin("box2d");
        _this.initWorld();
        _this.parallel(Tonyu.bindFunc(_this,_this.loop));
      },
      fiber$onAppear :function _trc_T2World_f_onAppear(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$currentProject.requestPlugin("box2d");
        
        _thread.enter(function _trc_T2World_ent_onAppear(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initWorld(_thread);
              __pc=1;return;
            case 1:
              
              _this.parallel(Tonyu.bindFunc(_this,_this.loop));
              _thread.exit(_this);return;
            }
          }
        });
      },
      initWorld :function _trc_T2World_initWorld() {
        "use strict";
        var _this=this;
        var b2World;
        var b2Vec2;
        
        _this.gravity=_this.defv(_this.gravity,9.8);
        _this.gravityX=_this.defv(_this.gravityX,0);
        _this.fps=Tonyu.globals.$Boot.getFrameRate();
        b2World = Box2D.Dynamics.b2World;
        
        b2Vec2 = Box2D.Common.Math.b2Vec2;
        
        _this.scale=_this.scale||32;
        _this.world=new b2World(new b2Vec2(_this.gravityX,_this.gravity),true);
        if (_this.name!==null) {
          _this.name=_this.name||"$t2World";
          Tonyu.setGlobal(_this.name,_this);
          
        }
        Tonyu.globals.$Boot.on("stop",Tonyu.bindFunc(_this,_this.releaseWorld));
        _this.on("die",Tonyu.bindFunc(_this,_this.releaseWorld));
      },
      fiber$initWorld :function _trc_T2World_f_initWorld(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b2World;
        var b2Vec2;
        
        
        _thread.enter(function _trc_T2World_ent_initWorld(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$defv(_thread, _this.gravity, 9.8);
              __pc=1;return;
            case 1:
              _this.gravity=_thread.retVal;
              
              _this.fiber$defv(_thread, _this.gravityX, 0);
              __pc=2;return;
            case 2:
              _this.gravityX=_thread.retVal;
              
              _this.fps=Tonyu.globals.$Boot.getFrameRate();
              b2World = Box2D.Dynamics.b2World;
              
              b2Vec2 = Box2D.Common.Math.b2Vec2;
              
              _this.scale=_this.scale||32;
              _this.world=new b2World(new b2Vec2(_this.gravityX,_this.gravity),true);
              if (_this.name!==null) {
                _this.name=_this.name||"$t2World";
                Tonyu.setGlobal(_this.name,_this);
                
              }
              Tonyu.globals.$Boot.on("stop",Tonyu.bindFunc(_this,_this.releaseWorld));
              _this.on("die",Tonyu.bindFunc(_this,_this.releaseWorld));
              _thread.exit(_this);return;
            }
          }
        });
      },
      releaseWorld :function _trc_T2World_releaseWorld() {
        "use strict";
        var _this=this;
        
        if (Tonyu.globals.$t2World===_this) {
          Tonyu.globals.$t2World=null;
        }
      },
      fiber$releaseWorld :function _trc_T2World_f_releaseWorld(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (Tonyu.globals.$t2World===_this) {
          Tonyu.globals.$t2World=null;
        }
        
        _thread.retVal=_this;return;
      },
      loop :function _trc_T2World_loop() {
        "use strict";
        var _this=this;
        
        while (true) {
          _this.fps=Tonyu.globals.$Boot.getFrameRate();
          _this.world.Step(1/_this.fps,10,10);
          _this.world.ClearForces();
          _this.update();
          
        }
      },
      fiber$loop :function _trc_T2World_f_loop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_T2World_ent_loop(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              _this.fps=Tonyu.globals.$Boot.getFrameRate();
              _this.world.Step(1/_this.fps,10,10);
              _this.world.ClearForces();
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      updatePos :function _trc_T2World_updatePos() {
        "use strict";
        var _this=this;
        var b;
        var d;
        
        b = _this.world.GetBodyList();
        for (; b ; b=b.GetNext()) {
          {
            d = b.GetUserData();
            
            if (d) {
              d.updatePos();
            }
          }
        }
      },
      fiber$updatePos :function _trc_T2World_f_updatePos(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var b;
        var d;
        
        b = _this.world.GetBodyList();
        for (; b ; b=b.GetNext()) {
          {
            d = b.GetUserData();
            
            if (d) {
              d.updatePos();
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"onAppear":{"nowait":false},"initWorld":{"nowait":false},"releaseWorld":{"nowait":false},"loop":{"nowait":false},"updatePos":{"nowait":false}},"fields":{"gravity":{},"gravityX":{},"fps":{},"scale":{},"world":{},"name":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T2MediaPlayer',
  shortName: 'T2MediaPlayer',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T2MediaPlayer_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T2MediaPlayer_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_T2MediaPlayer_initialize() {
        "use strict";
        var _this=this;
        
        _this.initT2MediaPlayer();
      },
      initT2MediaPlayer :function _trc_T2MediaPlayer_initT2MediaPlayer() {
        "use strict";
        var _this=this;
        
        if (! Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib=new T2MediaLib();
          
        }
        _this.resetSEFrame();
        _this.bgmPlayerMax=Tonyu.globals.$t2MediaLib.bgmPlayerMax;
      },
      fiber$initT2MediaPlayer :function _trc_T2MediaPlayer_f_initT2MediaPlayer(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! Tonyu.globals.$t2MediaLib) {
          Tonyu.globals.$t2MediaLib=new T2MediaLib();
          
        }
        
        _thread.enter(function _trc_T2MediaPlayer_ent_initT2MediaPlayer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$resetSEFrame(_thread);
              __pc=1;return;
            case 1:
              
              _this.bgmPlayerMax=Tonyu.globals.$t2MediaLib.bgmPlayerMax;
              _thread.exit(_this);return;
            }
          }
        });
      },
      allClearSoundData :function _trc_T2MediaPlayer_allClearSoundData() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.allResetBGM();
        Tonyu.globals.$t2MediaLib.allClearSoundData();
      },
      fiber$allClearSoundData :function _trc_T2MediaPlayer_f_allClearSoundData(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.allResetBGM();
        Tonyu.globals.$t2MediaLib.allClearSoundData();
        
        _thread.retVal=_this;return;
      },
      clearSoundData :function _trc_T2MediaPlayer_clearSoundData(idx) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.clearSoundData(idx);
      },
      fiber$clearSoundData :function _trc_T2MediaPlayer_f_clearSoundData(_thread,idx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.clearSoundData(idx);
        
        _thread.retVal=_this;return;
      },
      allRemoveDecodedSoundData :function _trc_T2MediaPlayer_allRemoveDecodedSoundData() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.allRemoveDecodedSoundData();
      },
      fiber$allRemoveDecodedSoundData :function _trc_T2MediaPlayer_f_allRemoveDecodedSoundData(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.allRemoveDecodedSoundData();
        
        _thread.retVal=_this;return;
      },
      removeDecodedSoundData :function _trc_T2MediaPlayer_removeDecodedSoundData(idx) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.removeDecodedSoundData(idx);
      },
      fiber$removeDecodedSoundData :function _trc_T2MediaPlayer_f_removeDecodedSoundData(_thread,idx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.removeDecodedSoundData(idx);
        
        _thread.retVal=_this;return;
      },
      getMasterVolume :function _trc_T2MediaPlayer_getMasterVolume() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getMasterVolume()*128;
      },
      fiber$getMasterVolume :function _trc_T2MediaPlayer_f_getMasterVolume(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getMasterVolume()*128;return;
        
        
        _thread.retVal=_this;return;
      },
      setMasterVolume :function _trc_T2MediaPlayer_setMasterVolume(vol) {
        "use strict";
        var _this=this;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          return Tonyu.globals.$t2MediaLib.setMasterVolume(Tonyu.globals.$t2MediaLib.getMasterVolume());
          
        }
        return Tonyu.globals.$t2MediaLib.setMasterVolume(vol);
      },
      fiber$setMasterVolume :function _trc_T2MediaPlayer_f_setMasterVolume(_thread,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          _thread.retVal=Tonyu.globals.$t2MediaLib.setMasterVolume(Tonyu.globals.$t2MediaLib.getMasterVolume());return;
          
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setMasterVolume(vol);return;
        
        
        _thread.retVal=_this;return;
      },
      loadSound :function _trc_T2MediaPlayer_loadSound(idx,src,callbacks) {
        "use strict";
        var _this=this;
        var isLoadAndDecode;
        
        isLoadAndDecode = Tonyu.globals.$soundLoadAndDecode||false;
        
        Tonyu.globals.$t2MediaLib.loadSound(idx,src,callbacks,isLoadAndDecode);
      },
      fiber$loadSound :function _trc_T2MediaPlayer_f_loadSound(_thread,idx,src,callbacks) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var isLoadAndDecode;
        
        isLoadAndDecode = Tonyu.globals.$soundLoadAndDecode||false;
        
        Tonyu.globals.$t2MediaLib.loadSound(idx,src,callbacks,isLoadAndDecode);
        
        _thread.retVal=_this;return;
      },
      __getter__available :function _trc_T2MediaPlayer___getter__available() {
        "use strict";
        var _this=this;
        
        return ! ! Tonyu.globals.$t2MediaLib.context;
      },
      loadFromProject :function _trc_T2MediaPlayer_loadFromProject(prj) {
        "use strict";
        var _this=this;
        var r;
        var jobs;
        var cnt;
        var s;
        var name;
        var url;
        var func;
        var callbacks;
        var reqP;
        var _it_6570;
        var i;
        
        if (! _this.available) {
          return _this;
        }
        r = prj.getResource();
        
        if (! r||! r.sounds) {
          return _this;
        }
        if (r.sounds<=0) {
          return _this;
        }
        _this.progressNoLog("Loading sounds...[0/"+r.sounds.length+"]");
        jobs = 6;
        
        cnt = 0;
        
        
        func = (function anonymous_1544(seName,errorID) {
          var nextIdx;
          var s;
          var name;
          var url;
          
          if (errorID) {
            console.log(seName,errorID);
            Tonyu.setGlobal(seName,"ERROR");
            
          } else {
            Tonyu.setGlobal(seName,seName);
            
          }
          nextIdx = cnt+jobs;
          
          cnt++;
          _this.progressNoLog("Loading sounds...["+(cnt)+"/"+r.sounds.length+"]");
          if (nextIdx>=r.sounds.length) {
            return _this;
          }
          s = r.sounds[nextIdx];
          
          name = s.name;
          
          url = Tonyu.Assets.resolve(s.url,prj);
          
          _this.loadSound(name,url,callbacks);
        });
        
        callbacks = {};
        
        callbacks.succ=func;
        callbacks.err=func;
        
        _it_6570=Tonyu.iterator(r.sounds,1);
        while(_it_6570.next()) {
          s=_it_6570[0];
          
          url=s.url;
          if (url.match(/\.midi?$/)) {
            reqP=true;
          }
          url=Tonyu.Assets.resolve(url,prj);
          if (url.match(/\.midi?$/)) {
            reqP=true;
          }
          
        }
        if (reqP) {
          Tonyu.globals.$currentProject.requestPlugin("PicoAudio");
        }
        i = 0;
        for (; i<jobs ; i++) {
          {
            if (i>=r.sounds.length) {
              break;
              
            }
            s=r.sounds[i];
            name=s.name;
            url=Tonyu.Assets.resolve(s.url,prj);
            _this.loadSound(name,url,callbacks);
          }
        }
        while (cnt<r.sounds.length) {
          _this.update();
          
        }
      },
      fiber$loadFromProject :function _trc_T2MediaPlayer_f_loadFromProject(_thread,prj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var r;
        var jobs;
        var cnt;
        var s;
        var name;
        var url;
        var func;
        var callbacks;
        var reqP;
        var _it_6570;
        var i;
        
        if (! _this.available) {
          _thread.retVal=_this;return;
          
        }
        r = prj.getResource();
        
        if (! r||! r.sounds) {
          _thread.retVal=_this;return;
          
        }
        if (r.sounds<=0) {
          _thread.retVal=_this;return;
          
        }
        _this.progressNoLog("Loading sounds...[0/"+r.sounds.length+"]");
        jobs = 6;
        
        cnt = 0;
        
        
        
        _thread.enter(function _trc_T2MediaPlayer_ent_loadFromProject(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              func = (function anonymous_1544(seName,errorID) {
                var nextIdx;
                var s;
                var name;
                var url;
                
                if (errorID) {
                  console.log(seName,errorID);
                  Tonyu.setGlobal(seName,"ERROR");
                  
                } else {
                  Tonyu.setGlobal(seName,seName);
                  
                }
                nextIdx = cnt+jobs;
                
                cnt++;
                _this.progressNoLog("Loading sounds...["+(cnt)+"/"+r.sounds.length+"]");
                if (nextIdx>=r.sounds.length) {
                  return _this;
                }
                s = r.sounds[nextIdx];
                
                name = s.name;
                
                url = Tonyu.Assets.resolve(s.url,prj);
                
                _this.loadSound(name,url,callbacks);
              });
              
              callbacks = {};
              
              callbacks.succ=func;
              callbacks.err=func;
              
              _it_6570=Tonyu.iterator(r.sounds,1);
              while(_it_6570.next()) {
                s=_it_6570[0];
                
                url=s.url;
                if (url.match(/\.midi?$/)) {
                  reqP=true;
                }
                url=Tonyu.Assets.resolve(url,prj);
                if (url.match(/\.midi?$/)) {
                  reqP=true;
                }
                
              }
              if (reqP) {
                Tonyu.globals.$currentProject.requestPlugin("PicoAudio");
              }
              i = 0;
              
            case 1:
              if (!(i<jobs)) { __pc=5     ; break; }
              if (!(i>=r.sounds.length)) { __pc=2     ; break; }
              __pc=5     ; break;
              
            case 2     :
              
              s=r.sounds[i];
              name=s.name;
              url=Tonyu.Assets.resolve(s.url,prj);
              _this.fiber$loadSound(_thread, name, url, callbacks);
              __pc=3;return;
            case 3:
              
            case 4     :
              i++;
              __pc=1;break;
            case 5     :
              
            case 6:
              if (!(cnt<r.sounds.length)) { __pc=8     ; break; }
              _this.fiber$update(_thread);
              __pc=7;return;
            case 7:
              
              __pc=6;break;
            case 8     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      decodeSound :function _trc_T2MediaPlayer_decodeSound(idx,callbacks) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.decodeSound(idx,callbacks);
      },
      fiber$decodeSound :function _trc_T2MediaPlayer_f_decodeSound(_thread,idx,callbacks) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.decodeSound(idx,callbacks);
        
        _thread.retVal=_this;return;
      },
      getSoundFileData :function _trc_T2MediaPlayer_getSoundFileData(idx) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSoundFileData(idx);
      },
      fiber$getSoundFileData :function _trc_T2MediaPlayer_f_getSoundFileData(_thread,idx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSoundFileData(idx);return;
        
        
        _thread.retVal=_this;return;
      },
      getSoundDecodedData :function _trc_T2MediaPlayer_getSoundDecodedData(idx) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSoundDecodedData(idx);
      },
      fiber$getSoundDecodedData :function _trc_T2MediaPlayer_f_getSoundDecodedData(_thread,idx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSoundDecodedData(idx);return;
        
        
        _thread.retVal=_this;return;
      },
      getCurrentTime :function _trc_T2MediaPlayer_getCurrentTime() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getCurrentTime();
      },
      fiber$getCurrentTime :function _trc_T2MediaPlayer_f_getCurrentTime(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getCurrentTime();return;
        
        
        _thread.retVal=_this;return;
      },
      getContext :function _trc_T2MediaPlayer_getContext() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.context;
      },
      fiber$getContext :function _trc_T2MediaPlayer_f_getContext(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.context;return;
        
        
        _thread.retVal=_this;return;
      },
      playSE :function _trc_T2MediaPlayer_playSE(idx,vol,pan,rate,offset,loop,loopStart,loopEnd,start,duration) {
        "use strict";
        var _this=this;
        var o;
        
        if (_this.mute) {
          return null;
        }
        if (vol&&typeof  vol==="object") {
          o = vol;
          
          vol=o.vol;
          pan=o.pan;
          rate=o.rate;
          offset=o.offset;
          loop=o.loop;
          loopStart=o.loopStart;
          loopEnd=o.loopEnd;
          start=o.start;
          duration=o.duration;
          
        }
        if (vol==null) {
          vol=128;
        }
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          vol=1;
          
        }
        if (! start&&_this.seStaredAtThisFrame[idx]) {
          return null;
        }
        _this.seStaredAtThisFrame[idx]=true;
        return Tonyu.globals.$t2MediaLib.playSE(idx,vol,pan,rate,offset,loop,loopStart,loopEnd,start,duration);
      },
      stopSE :function _trc_T2MediaPlayer_stopSE(sourceObj) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.stopSE(sourceObj);
      },
      fiber$stopSE :function _trc_T2MediaPlayer_f_stopSE(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.stopSE(sourceObj);return;
        
        
        _thread.retVal=_this;return;
      },
      stopAllSE :function _trc_T2MediaPlayer_stopAllSE() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.stopAllSE();
      },
      fiber$stopAllSE :function _trc_T2MediaPlayer_f_stopAllSE(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.stopAllSE();return;
        
        
        _thread.retVal=_this;return;
      },
      getSEMasterVolume :function _trc_T2MediaPlayer_getSEMasterVolume() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSEMasterVolume()*128;
      },
      fiber$getSEMasterVolume :function _trc_T2MediaPlayer_f_getSEMasterVolume(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSEMasterVolume()*128;return;
        
        
        _thread.retVal=_this;return;
      },
      setSEMasterVolume :function _trc_T2MediaPlayer_setSEMasterVolume(vol) {
        "use strict";
        var _this=this;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          return Tonyu.globals.$t2MediaLib.setSEMasterVolume(Tonyu.globals.$t2MediaLib.getSEMasterVolume());
          
        }
        return Tonyu.globals.$t2MediaLib.setSEMasterVolume(vol);
      },
      fiber$setSEMasterVolume :function _trc_T2MediaPlayer_f_setSEMasterVolume(_thread,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          _thread.retVal=Tonyu.globals.$t2MediaLib.setSEMasterVolume(Tonyu.globals.$t2MediaLib.getSEMasterVolume());return;
          
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSEMasterVolume(vol);return;
        
        
        _thread.retVal=_this;return;
      },
      getSEVolume :function _trc_T2MediaPlayer_getSEVolume(sourceObj) {
        "use strict";
        var _this=this;
        var vol;
        
        vol = Tonyu.globals.$t2MediaLib.getSEVolume(sourceObj);
        
        return typeof  vol==="number"?vol*128:vol;
      },
      fiber$getSEVolume :function _trc_T2MediaPlayer_f_getSEVolume(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var vol;
        
        vol = Tonyu.globals.$t2MediaLib.getSEVolume(sourceObj);
        
        _thread.retVal=typeof  vol==="number"?vol*128:vol;return;
        
        
        _thread.retVal=_this;return;
      },
      setSEVolume :function _trc_T2MediaPlayer_setSEVolume(sourceObj,vol) {
        "use strict";
        var _this=this;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          return Tonyu.globals.$t2MediaLib.setSEVolume(sourceObj,Tonyu.globals.$t2MediaLib.getSEVolume(sourceObj));
          
        }
        return Tonyu.globals.$t2MediaLib.setSEVolume(sourceObj,vol);
      },
      fiber$setSEVolume :function _trc_T2MediaPlayer_f_setSEVolume(_thread,sourceObj,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          _thread.retVal=Tonyu.globals.$t2MediaLib.setSEVolume(sourceObj,Tonyu.globals.$t2MediaLib.getSEVolume(sourceObj));return;
          
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSEVolume(sourceObj,vol);return;
        
        
        _thread.retVal=_this;return;
      },
      getSERate :function _trc_T2MediaPlayer_getSERate(sourceObj) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSERate(sourceObj);
      },
      fiber$getSERate :function _trc_T2MediaPlayer_f_getSERate(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSERate(sourceObj);return;
        
        
        _thread.retVal=_this;return;
      },
      setSERate :function _trc_T2MediaPlayer_setSERate(sourceObj,rate) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setSERate(sourceObj,rate);
      },
      fiber$setSERate :function _trc_T2MediaPlayer_f_setSERate(_thread,sourceObj,rate) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSERate(sourceObj,rate);return;
        
        
        _thread.retVal=_this;return;
      },
      getSEPan :function _trc_T2MediaPlayer_getSEPan(sourceObj) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSEPan(sourceObj);
      },
      fiber$getSEPan :function _trc_T2MediaPlayer_f_getSEPan(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSEPan(sourceObj);return;
        
        
        _thread.retVal=_this;return;
      },
      setSEPan :function _trc_T2MediaPlayer_setSEPan(sourceObj,pan) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setSEPan(sourceObj,pan);
      },
      fiber$setSEPan :function _trc_T2MediaPlayer_f_setSEPan(_thread,sourceObj,pan) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSEPan(sourceObj,pan);return;
        
        
        _thread.retVal=_this;return;
      },
      isSELoop :function _trc_T2MediaPlayer_isSELoop(sourceObj) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.isSELoop(sourceObj);
      },
      fiber$isSELoop :function _trc_T2MediaPlayer_f_isSELoop(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.isSELoop(sourceObj);return;
        
        
        _thread.retVal=_this;return;
      },
      setSELoop :function _trc_T2MediaPlayer_setSELoop(sourceObj,loop) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setSELoop(sourceObj,loop);
      },
      fiber$setSELoop :function _trc_T2MediaPlayer_f_setSELoop(_thread,sourceObj,loop) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSELoop(sourceObj,loop);return;
        
        
        _thread.retVal=_this;return;
      },
      getSELoopStartTime :function _trc_T2MediaPlayer_getSELoopStartTime(sourceObj) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSELoopStartTime(sourceObj);
      },
      fiber$getSELoopStartTime :function _trc_T2MediaPlayer_f_getSELoopStartTime(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSELoopStartTime(sourceObj);return;
        
        
        _thread.retVal=_this;return;
      },
      setSELoopStartTime :function _trc_T2MediaPlayer_setSELoopStartTime(sourceObj,loopStart) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setSELoopStartTime(sourceObj,loopStart);
      },
      fiber$setSELoopStartTime :function _trc_T2MediaPlayer_f_setSELoopStartTime(_thread,sourceObj,loopStart) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSELoopStartTime(sourceObj,loopStart);return;
        
        
        _thread.retVal=_this;return;
      },
      getSELoopEndTime :function _trc_T2MediaPlayer_getSELoopEndTime(sourceObj) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getSELoopEndTime(sourceObj);
      },
      fiber$getSELoopEndTime :function _trc_T2MediaPlayer_f_getSELoopEndTime(_thread,sourceObj) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getSELoopEndTime(sourceObj);return;
        
        
        _thread.retVal=_this;return;
      },
      setSELoopEndTime :function _trc_T2MediaPlayer_setSELoopEndTime(sourceObj,loopEnd) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setSELoopEndTime(sourceObj,loopEnd);
      },
      fiber$setSELoopEndTime :function _trc_T2MediaPlayer_f_setSELoopEndTime(_thread,sourceObj,loopEnd) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setSELoopEndTime(sourceObj,loopEnd);return;
        
        
        _thread.retVal=_this;return;
      },
      playBGM :function _trc_T2MediaPlayer_playBGM(idx,loop,offset,loopStart,loopEnd) {
        "use strict";
        var _this=this;
        
        if (_this.mute) {
          return _this;
        }
        if (loop==null) {
          loop=false;
        }
        if (offset==null) {
          offset=0;
        }
        return Tonyu.globals.$t2MediaLib.playBGM(0,idx,loop,offset,loopStart,loopEnd);
      },
      fiber$playBGM :function _trc_T2MediaPlayer_f_playBGM(_thread,idx,loop,offset,loopStart,loopEnd) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.mute) {
          _thread.retVal=_this;return;
          
        }
        if (loop==null) {
          loop=false;
        }
        if (offset==null) {
          offset=0;
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.playBGM(0,idx,loop,offset,loopStart,loopEnd);return;
        
        
        _thread.retVal=_this;return;
      },
      stopBGM :function _trc_T2MediaPlayer_stopBGM() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.stopBGM(0);
      },
      fiber$stopBGM :function _trc_T2MediaPlayer_f_stopBGM(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.stopBGM(0);return;
        
        
        _thread.retVal=_this;return;
      },
      pauseBGM :function _trc_T2MediaPlayer_pauseBGM() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.pauseBGM(0);
      },
      fiber$pauseBGM :function _trc_T2MediaPlayer_f_pauseBGM(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.pauseBGM(0);return;
        
        
        _thread.retVal=_this;return;
      },
      resumeBGM :function _trc_T2MediaPlayer_resumeBGM() {
        "use strict";
        var _this=this;
        
        if (_this.mute) {
          return _this;
        }
        return Tonyu.globals.$t2MediaLib.resumeBGM(0);
      },
      fiber$resumeBGM :function _trc_T2MediaPlayer_f_resumeBGM(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.mute) {
          _thread.retVal=_this;return;
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.resumeBGM(0);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMMasterVolume :function _trc_T2MediaPlayer_getBGMMasterVolume() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMMasterVolume()*128;
      },
      fiber$getBGMMasterVolume :function _trc_T2MediaPlayer_f_getBGMMasterVolume(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMMasterVolume()*128;return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMMasterVolume :function _trc_T2MediaPlayer_setBGMMasterVolume(vol) {
        "use strict";
        var _this=this;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          return Tonyu.globals.$t2MediaLib.setBGMMasterVolume(Tonyu.globals.$t2MediaLib.getBGMMasterVolume());
          
        }
        return Tonyu.globals.$t2MediaLib.setBGMMasterVolume(vol);
      },
      fiber$setBGMMasterVolume :function _trc_T2MediaPlayer_f_setBGMMasterVolume(_thread,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMMasterVolume(Tonyu.globals.$t2MediaLib.getBGMMasterVolume());return;
          
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMMasterVolume(vol);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMVolume :function _trc_T2MediaPlayer_getBGMVolume() {
        "use strict";
        var _this=this;
        var vol;
        
        vol = Tonyu.globals.$t2MediaLib.getBGMVolume(0);
        
        return typeof  vol==="number"?vol*128:vol;
      },
      fiber$getBGMVolume :function _trc_T2MediaPlayer_f_getBGMVolume(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var vol;
        
        vol = Tonyu.globals.$t2MediaLib.getBGMVolume(0);
        
        _thread.retVal=typeof  vol==="number"?vol*128:vol;return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMVolume :function _trc_T2MediaPlayer_setBGMVolume(vol) {
        "use strict";
        var _this=this;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          return Tonyu.globals.$t2MediaLib.setBGMVolume(0,Tonyu.globals.$t2MediaLib.getBGMVolume(0));
          
        }
        return Tonyu.globals.$t2MediaLib.setBGMVolume(0,vol);
      },
      fiber$setBGMVolume :function _trc_T2MediaPlayer_f_setBGMVolume(_thread,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMVolume(0,Tonyu.globals.$t2MediaLib.getBGMVolume(0));return;
          
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMVolume(0,vol);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMTempo :function _trc_T2MediaPlayer_getBGMTempo() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMTempo(0);
      },
      fiber$getBGMTempo :function _trc_T2MediaPlayer_f_getBGMTempo(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMTempo(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMTempo :function _trc_T2MediaPlayer_setBGMTempo(tempo) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMTempo(0,tempo);
      },
      fiber$setBGMTempo :function _trc_T2MediaPlayer_f_setBGMTempo(_thread,tempo) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMTempo(0,tempo);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMPan :function _trc_T2MediaPlayer_getBGMPan() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMPan(0);
      },
      fiber$getBGMPan :function _trc_T2MediaPlayer_f_getBGMPan(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMPan(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMPan :function _trc_T2MediaPlayer_setBGMPan(pan) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMPan(0,pan);
      },
      fiber$setBGMPan :function _trc_T2MediaPlayer_f_setBGMPan(_thread,pan) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMPan(0,pan);return;
        
        
        _thread.retVal=_this;return;
      },
      isBGMLoop :function _trc_T2MediaPlayer_isBGMLoop() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.isBGMLoop(0);
      },
      fiber$isBGMLoop :function _trc_T2MediaPlayer_f_isBGMLoop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.isBGMLoop(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMLoop :function _trc_T2MediaPlayer_setBGMLoop(loop) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMLoop(0,loop);
      },
      fiber$setBGMLoop :function _trc_T2MediaPlayer_f_setBGMLoop(_thread,loop) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMLoop(0,loop);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMLoopStartTime :function _trc_T2MediaPlayer_getBGMLoopStartTime() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMLoopStartTime(0);
      },
      fiber$getBGMLoopStartTime :function _trc_T2MediaPlayer_f_getBGMLoopStartTime(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMLoopStartTime(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMLoopStartTime :function _trc_T2MediaPlayer_setBGMLoopStartTime(loopStart) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMLoopStartTime(0,loopStart);
      },
      fiber$setBGMLoopStartTime :function _trc_T2MediaPlayer_f_setBGMLoopStartTime(_thread,loopStart) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMLoopStartTime(0,loopStart);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMLoopEndTime :function _trc_T2MediaPlayer_getBGMLoopEndTime() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMLoopEndTime(0);
      },
      fiber$getBGMLoopEndTime :function _trc_T2MediaPlayer_f_getBGMLoopEndTime(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMLoopEndTime(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMLoopEndTime :function _trc_T2MediaPlayer_setBGMLoopEndTime(loopEnd) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMLoopEndTime(0,loopEnd);
      },
      fiber$setBGMLoopEndTime :function _trc_T2MediaPlayer_f_setBGMLoopEndTime(_thread,loopEnd) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMLoopEndTime(0,loopEnd);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMCurrentTime :function _trc_T2MediaPlayer_getBGMCurrentTime() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMCurrentTime(0);
      },
      fiber$getBGMCurrentTime :function _trc_T2MediaPlayer_f_getBGMCurrentTime(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMCurrentTime(0);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMLength :function _trc_T2MediaPlayer_getBGMLength() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMLength(0);
      },
      fiber$getBGMLength :function _trc_T2MediaPlayer_f_getBGMLength(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMLength(0);return;
        
        
        _thread.retVal=_this;return;
      },
      getPlayingBGMName :function _trc_T2MediaPlayer_getPlayingBGMName() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getPlayingBGMName(0);
      },
      fiber$getPlayingBGMName :function _trc_T2MediaPlayer_f_getPlayingBGMName(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getPlayingBGMName(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setOnBGMEndListener :function _trc_T2MediaPlayer_setOnBGMEndListener() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setOnBGMEndListener(0);
      },
      fiber$setOnBGMEndListener :function _trc_T2MediaPlayer_f_setOnBGMEndListener(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setOnBGMEndListener(0);return;
        
        
        _thread.retVal=_this;return;
      },
      getPlayingBGMState :function _trc_T2MediaPlayer_getPlayingBGMState() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getPlayingBGMState(0);
      },
      fiber$getPlayingBGMState :function _trc_T2MediaPlayer_f_getPlayingBGMState(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getPlayingBGMState(0);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMPicoAudio :function _trc_T2MediaPlayer_getBGMPicoAudio() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMPicoAudio(0);
      },
      fiber$getBGMPicoAudio :function _trc_T2MediaPlayer_f_getBGMPicoAudio(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMPicoAudio(0);return;
        
        
        _thread.retVal=_this;return;
      },
      isTagLoop :function _trc_T2MediaPlayer_isTagLoop() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.isTagLoop(0);
      },
      fiber$isTagLoop :function _trc_T2MediaPlayer_f_isTagLoop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.isTagLoop(0);return;
        
        
        _thread.retVal=_this;return;
      },
      setTagLoop :function _trc_T2MediaPlayer_setTagLoop(isTagLoop) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setTagLoop(0,isTagLoop);
      },
      fiber$setTagLoop :function _trc_T2MediaPlayer_f_setTagLoop(_thread,isTagLoop) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setTagLoop(0,isTagLoop);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMPlayerMax :function _trc_T2MediaPlayer_getBGMPlayerMax() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMPlayerMax();
      },
      fiber$getBGMPlayerMax :function _trc_T2MediaPlayer_f_getBGMPlayerMax(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMPlayerMax();return;
        
        
        _thread.retVal=_this;return;
      },
      allStopBGM :function _trc_T2MediaPlayer_allStopBGM() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.allStopBGM();
      },
      fiber$allStopBGM :function _trc_T2MediaPlayer_f_allStopBGM(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.allStopBGM();
        
        _thread.retVal=_this;return;
      },
      allResetBGM :function _trc_T2MediaPlayer_allResetBGM() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.allResetBGM();
      },
      fiber$allResetBGM :function _trc_T2MediaPlayer_f_allResetBGM(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.allResetBGM();
        
        _thread.retVal=_this;return;
      },
      playBGMID :function _trc_T2MediaPlayer_playBGMID(id,idx,loop,offset,loopStart,loopEnd) {
        "use strict";
        var _this=this;
        
        if (_this.mute) {
          return _this;
        }
        if (loop==null) {
          loop=false;
        }
        if (offset==null) {
          offset=0;
        }
        return Tonyu.globals.$t2MediaLib.playBGM(id,idx,loop,offset,loopStart,loopEnd);
      },
      fiber$playBGMID :function _trc_T2MediaPlayer_f_playBGMID(_thread,id,idx,loop,offset,loopStart,loopEnd) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.mute) {
          _thread.retVal=_this;return;
          
        }
        if (loop==null) {
          loop=false;
        }
        if (offset==null) {
          offset=0;
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.playBGM(id,idx,loop,offset,loopStart,loopEnd);return;
        
        
        _thread.retVal=_this;return;
      },
      stopBGMID :function _trc_T2MediaPlayer_stopBGMID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.stopBGM(id);
      },
      fiber$stopBGMID :function _trc_T2MediaPlayer_f_stopBGMID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.stopBGM(id);return;
        
        
        _thread.retVal=_this;return;
      },
      pauseBGMID :function _trc_T2MediaPlayer_pauseBGMID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.pauseBGM(id);
      },
      fiber$pauseBGMID :function _trc_T2MediaPlayer_f_pauseBGMID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.pauseBGM(id);return;
        
        
        _thread.retVal=_this;return;
      },
      resumeBGMID :function _trc_T2MediaPlayer_resumeBGMID(id) {
        "use strict";
        var _this=this;
        
        if (_this.mute) {
          return _this;
        }
        return Tonyu.globals.$t2MediaLib.resumeBGM(id);
      },
      fiber$resumeBGMID :function _trc_T2MediaPlayer_f_resumeBGMID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.mute) {
          _thread.retVal=_this;return;
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.resumeBGM(id);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMVolumeID :function _trc_T2MediaPlayer_getBGMVolumeID(id) {
        "use strict";
        var _this=this;
        var vol;
        
        vol = Tonyu.globals.$t2MediaLib.getBGMVolume(id);
        
        return typeof  vol==="number"?vol*128:vol;
      },
      fiber$getBGMVolumeID :function _trc_T2MediaPlayer_f_getBGMVolumeID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var vol;
        
        vol = Tonyu.globals.$t2MediaLib.getBGMVolume(id);
        
        _thread.retVal=typeof  vol==="number"?vol*128:vol;return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMVolumeID :function _trc_T2MediaPlayer_setBGMVolumeID(id,vol) {
        "use strict";
        var _this=this;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          return Tonyu.globals.$t2MediaLib.setBGMVolume(id,Tonyu.globals.$t2MediaLib.getBGMVolume(id));
          
        }
        return Tonyu.globals.$t2MediaLib.setBGMVolume(id,vol);
      },
      fiber$setBGMVolumeID :function _trc_T2MediaPlayer_f_setBGMVolumeID(_thread,id,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  vol==="number") {
          vol/=128;
          if (vol<0) {
            vol=0;
          }
          
        } else {
          _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMVolume(id,Tonyu.globals.$t2MediaLib.getBGMVolume(id));return;
          
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMVolume(id,vol);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMTempoID :function _trc_T2MediaPlayer_getBGMTempoID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMTempo(id);
      },
      fiber$getBGMTempoID :function _trc_T2MediaPlayer_f_getBGMTempoID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMTempo(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMTempoID :function _trc_T2MediaPlayer_setBGMTempoID(id,tempo) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMTempo(id,tempo);
      },
      fiber$setBGMTempoID :function _trc_T2MediaPlayer_f_setBGMTempoID(_thread,id,tempo) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMTempo(id,tempo);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMPanID :function _trc_T2MediaPlayer_getBGMPanID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMPan(id);
      },
      fiber$getBGMPanID :function _trc_T2MediaPlayer_f_getBGMPanID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMPan(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMPanID :function _trc_T2MediaPlayer_setBGMPanID(id,pan) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMPan(id,pan);
      },
      fiber$setBGMPanID :function _trc_T2MediaPlayer_f_setBGMPanID(_thread,id,pan) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMPan(id,pan);return;
        
        
        _thread.retVal=_this;return;
      },
      isBGMLoopID :function _trc_T2MediaPlayer_isBGMLoopID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.isBGMLoop(id);
      },
      fiber$isBGMLoopID :function _trc_T2MediaPlayer_f_isBGMLoopID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.isBGMLoop(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMLoopID :function _trc_T2MediaPlayer_setBGMLoopID(id,loop) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMLoop(id,loop);
      },
      fiber$setBGMLoopID :function _trc_T2MediaPlayer_f_setBGMLoopID(_thread,id,loop) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMLoop(id,loop);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMLoopStartTimeID :function _trc_T2MediaPlayer_getBGMLoopStartTimeID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMLoopStartTime(id);
      },
      fiber$getBGMLoopStartTimeID :function _trc_T2MediaPlayer_f_getBGMLoopStartTimeID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMLoopStartTime(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMLoopStartTimeID :function _trc_T2MediaPlayer_setBGMLoopStartTimeID(id,loopStart) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMLoopStartTime(id,loopStart);
      },
      fiber$setBGMLoopStartTimeID :function _trc_T2MediaPlayer_f_setBGMLoopStartTimeID(_thread,id,loopStart) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMLoopStartTime(id,loopStart);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMLoopEndTimeID :function _trc_T2MediaPlayer_getBGMLoopEndTimeID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMLoopEndTime(id);
      },
      fiber$getBGMLoopEndTimeID :function _trc_T2MediaPlayer_f_getBGMLoopEndTimeID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMLoopEndTime(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setBGMLoopEndTimeID :function _trc_T2MediaPlayer_setBGMLoopEndTimeID(id,loopEnd) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setBGMLoopEndTime(id,loopEnd);
      },
      fiber$setBGMLoopEndTimeID :function _trc_T2MediaPlayer_f_setBGMLoopEndTimeID(_thread,id,loopEnd) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setBGMLoopEndTime(id,loopEnd);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMCurrentTimeID :function _trc_T2MediaPlayer_getBGMCurrentTimeID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMCurrentTime(id);
      },
      fiber$getBGMCurrentTimeID :function _trc_T2MediaPlayer_f_getBGMCurrentTimeID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMCurrentTime(id);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMLengthID :function _trc_T2MediaPlayer_getBGMLengthID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMLength(id);
      },
      fiber$getBGMLengthID :function _trc_T2MediaPlayer_f_getBGMLengthID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMLength(id);return;
        
        
        _thread.retVal=_this;return;
      },
      getPlayingBGMNameID :function _trc_T2MediaPlayer_getPlayingBGMNameID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getPlayingBGMName(id);
      },
      fiber$getPlayingBGMNameID :function _trc_T2MediaPlayer_f_getPlayingBGMNameID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getPlayingBGMName(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setOnBGMEndListenerID :function _trc_T2MediaPlayer_setOnBGMEndListenerID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setOnBGMEndListener(id);
      },
      fiber$setOnBGMEndListenerID :function _trc_T2MediaPlayer_f_setOnBGMEndListenerID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setOnBGMEndListener(id);return;
        
        
        _thread.retVal=_this;return;
      },
      getPlayingBGMStateID :function _trc_T2MediaPlayer_getPlayingBGMStateID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getPlayingBGMState(id);
      },
      fiber$getPlayingBGMStateID :function _trc_T2MediaPlayer_f_getPlayingBGMStateID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getPlayingBGMState(id);return;
        
        
        _thread.retVal=_this;return;
      },
      getBGMPicoAudioID :function _trc_T2MediaPlayer_getBGMPicoAudioID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getBGMPicoAudio(id);
      },
      fiber$getBGMPicoAudioID :function _trc_T2MediaPlayer_f_getBGMPicoAudioID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getBGMPicoAudio(id);return;
        
        
        _thread.retVal=_this;return;
      },
      isTagLoopID :function _trc_T2MediaPlayer_isTagLoopID(id) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.isTagLoop(id);
      },
      fiber$isTagLoopID :function _trc_T2MediaPlayer_f_isTagLoopID(_thread,id) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.isTagLoop(id);return;
        
        
        _thread.retVal=_this;return;
      },
      setTagLoopID :function _trc_T2MediaPlayer_setTagLoopID(id,isTagLoop) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setTagLoop(id,isTagLoop);
      },
      fiber$setTagLoopID :function _trc_T2MediaPlayer_f_setTagLoopID(_thread,id,isTagLoop) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setTagLoop(id,isTagLoop);return;
        
        
        _thread.retVal=_this;return;
      },
      loadAudio :function _trc_T2MediaPlayer_loadAudio(idx,src) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$t2MediaLib.loadAudio(idx,src);
        while (Tonyu.globals.$t2MediaLib.getAudioData(idx)==null) {
          _this.update();
        }
      },
      fiber$loadAudio :function _trc_T2MediaPlayer_f_loadAudio(_thread,idx,src) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$t2MediaLib.loadAudio(idx,src);
        
        _thread.enter(function _trc_T2MediaPlayer_ent_loadAudio(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(Tonyu.globals.$t2MediaLib.getAudioData(idx)==null)) { __pc=3     ; break; }
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      playAudio :function _trc_T2MediaPlayer_playAudio(idx,loop,startTime) {
        "use strict";
        var _this=this;
        
        if (_this.mute) {
          return _this;
        }
        if (loop==null) {
          loop=false;
        }
        if (startTime==null) {
          startTime=0;
        }
        return Tonyu.globals.$t2MediaLib.playAudio(idx,loop,startTime);
      },
      fiber$playAudio :function _trc_T2MediaPlayer_f_playAudio(_thread,idx,loop,startTime) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.mute) {
          _thread.retVal=_this;return;
          
        }
        if (loop==null) {
          loop=false;
        }
        if (startTime==null) {
          startTime=0;
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.playAudio(idx,loop,startTime);return;
        
        
        _thread.retVal=_this;return;
      },
      stopAudio :function _trc_T2MediaPlayer_stopAudio() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.stopAudio();
      },
      fiber$stopAudio :function _trc_T2MediaPlayer_f_stopAudio(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.stopAudio();return;
        
        
        _thread.retVal=_this;return;
      },
      pauseAudio :function _trc_T2MediaPlayer_pauseAudio() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.pauseAudio();
      },
      fiber$pauseAudio :function _trc_T2MediaPlayer_f_pauseAudio(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.pauseAudio();return;
        
        
        _thread.retVal=_this;return;
      },
      resumeAudio :function _trc_T2MediaPlayer_resumeAudio() {
        "use strict";
        var _this=this;
        
        if (_this.mute) {
          return _this;
        }
        return Tonyu.globals.$t2MediaLib.resumeAudio();
      },
      fiber$resumeAudio :function _trc_T2MediaPlayer_f_resumeAudio(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.mute) {
          _thread.retVal=_this;return;
          
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.resumeAudio();return;
        
        
        _thread.retVal=_this;return;
      },
      setAudioVolume :function _trc_T2MediaPlayer_setAudioVolume(vol) {
        "use strict";
        var _this=this;
        
        vol=vol/128;
        if (vol>1) {
          vol=1;
        } else {
          if (vol<0) {
            vol=0;
          }
        }
        return Tonyu.globals.$t2MediaLib.setAudioVolume(vol);
      },
      fiber$setAudioVolume :function _trc_T2MediaPlayer_f_setAudioVolume(_thread,vol) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        vol=vol/128;
        if (vol>1) {
          vol=1;
        } else {
          if (vol<0) {
            vol=0;
          }
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setAudioVolume(vol);return;
        
        
        _thread.retVal=_this;return;
      },
      setAudioTempo :function _trc_T2MediaPlayer_setAudioTempo(tempo) {
        "use strict";
        var _this=this;
        
        if (tempo>4) {
          tempo=4;
        } else {
          if (tempo<0.5) {
            tempo=0.5;
          }
        }
        return Tonyu.globals.$t2MediaLib.setAudioTempo(tempo);
      },
      fiber$setAudioTempo :function _trc_T2MediaPlayer_f_setAudioTempo(_thread,tempo) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (tempo>4) {
          tempo=4;
        } else {
          if (tempo<0.5) {
            tempo=0.5;
          }
        }
        _thread.retVal=Tonyu.globals.$t2MediaLib.setAudioTempo(tempo);return;
        
        
        _thread.retVal=_this;return;
      },
      setAudioPosition :function _trc_T2MediaPlayer_setAudioPosition(time) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.setAudioPosition(time);
      },
      fiber$setAudioPosition :function _trc_T2MediaPlayer_f_setAudioPosition(_thread,time) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.setAudioPosition(time);return;
        
        
        _thread.retVal=_this;return;
      },
      getAudioCurrentTime :function _trc_T2MediaPlayer_getAudioCurrentTime() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getAudioCurrentTime();
      },
      fiber$getAudioCurrentTime :function _trc_T2MediaPlayer_f_getAudioCurrentTime(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getAudioCurrentTime();return;
        
        
        _thread.retVal=_this;return;
      },
      getAudioLength :function _trc_T2MediaPlayer_getAudioLength() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getAudioLength();
      },
      fiber$getAudioLength :function _trc_T2MediaPlayer_f_getAudioLength(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getAudioLength();return;
        
        
        _thread.retVal=_this;return;
      },
      getAudioData :function _trc_T2MediaPlayer_getAudioData(idx) {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$t2MediaLib.getAudioData(idx);
      },
      fiber$getAudioData :function _trc_T2MediaPlayer_f_getAudioData(_thread,idx) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$t2MediaLib.getAudioData(idx);return;
        
        
        _thread.retVal=_this;return;
      },
      resetSEFrame :function _trc_T2MediaPlayer_resetSEFrame() {
        "use strict";
        var _this=this;
        
        _this.seStaredAtThisFrame={};
      },
      fiber$resetSEFrame :function _trc_T2MediaPlayer_f_resetSEFrame(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.seStaredAtThisFrame={};
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"initT2MediaPlayer":{"nowait":false},"allClearSoundData":{"nowait":false},"clearSoundData":{"nowait":false},"allRemoveDecodedSoundData":{"nowait":false},"removeDecodedSoundData":{"nowait":false},"getMasterVolume":{"nowait":false},"setMasterVolume":{"nowait":false},"loadSound":{"nowait":false},"__getter__available":{"nowait":true},"loadFromProject":{"nowait":false},"decodeSound":{"nowait":false},"getSoundFileData":{"nowait":false},"getSoundDecodedData":{"nowait":false},"getCurrentTime":{"nowait":false},"getContext":{"nowait":false},"playSE":{"nowait":true},"stopSE":{"nowait":false},"stopAllSE":{"nowait":false},"getSEMasterVolume":{"nowait":false},"setSEMasterVolume":{"nowait":false},"getSEVolume":{"nowait":false},"setSEVolume":{"nowait":false},"getSERate":{"nowait":false},"setSERate":{"nowait":false},"getSEPan":{"nowait":false},"setSEPan":{"nowait":false},"isSELoop":{"nowait":false},"setSELoop":{"nowait":false},"getSELoopStartTime":{"nowait":false},"setSELoopStartTime":{"nowait":false},"getSELoopEndTime":{"nowait":false},"setSELoopEndTime":{"nowait":false},"playBGM":{"nowait":false},"stopBGM":{"nowait":false},"pauseBGM":{"nowait":false},"resumeBGM":{"nowait":false},"getBGMMasterVolume":{"nowait":false},"setBGMMasterVolume":{"nowait":false},"getBGMVolume":{"nowait":false},"setBGMVolume":{"nowait":false},"getBGMTempo":{"nowait":false},"setBGMTempo":{"nowait":false},"getBGMPan":{"nowait":false},"setBGMPan":{"nowait":false},"isBGMLoop":{"nowait":false},"setBGMLoop":{"nowait":false},"getBGMLoopStartTime":{"nowait":false},"setBGMLoopStartTime":{"nowait":false},"getBGMLoopEndTime":{"nowait":false},"setBGMLoopEndTime":{"nowait":false},"getBGMCurrentTime":{"nowait":false},"getBGMLength":{"nowait":false},"getPlayingBGMName":{"nowait":false},"setOnBGMEndListener":{"nowait":false},"getPlayingBGMState":{"nowait":false},"getBGMPicoAudio":{"nowait":false},"isTagLoop":{"nowait":false},"setTagLoop":{"nowait":false},"getBGMPlayerMax":{"nowait":false},"allStopBGM":{"nowait":false},"allResetBGM":{"nowait":false},"playBGMID":{"nowait":false},"stopBGMID":{"nowait":false},"pauseBGMID":{"nowait":false},"resumeBGMID":{"nowait":false},"getBGMVolumeID":{"nowait":false},"setBGMVolumeID":{"nowait":false},"getBGMTempoID":{"nowait":false},"setBGMTempoID":{"nowait":false},"getBGMPanID":{"nowait":false},"setBGMPanID":{"nowait":false},"isBGMLoopID":{"nowait":false},"setBGMLoopID":{"nowait":false},"getBGMLoopStartTimeID":{"nowait":false},"setBGMLoopStartTimeID":{"nowait":false},"getBGMLoopEndTimeID":{"nowait":false},"setBGMLoopEndTimeID":{"nowait":false},"getBGMCurrentTimeID":{"nowait":false},"getBGMLengthID":{"nowait":false},"getPlayingBGMNameID":{"nowait":false},"setOnBGMEndListenerID":{"nowait":false},"getPlayingBGMStateID":{"nowait":false},"getBGMPicoAudioID":{"nowait":false},"isTagLoopID":{"nowait":false},"setTagLoopID":{"nowait":false},"loadAudio":{"nowait":false},"playAudio":{"nowait":false},"stopAudio":{"nowait":false},"pauseAudio":{"nowait":false},"resumeAudio":{"nowait":false},"setAudioVolume":{"nowait":false},"setAudioTempo":{"nowait":false},"setAudioPosition":{"nowait":false},"getAudioCurrentTime":{"nowait":false},"getAudioLength":{"nowait":false},"getAudioData":{"nowait":false},"resetSEFrame":{"nowait":false}},"fields":{"bgmPlayerMax":{},"progressNoLog":{},"mute":{},"seStaredAtThisFrame":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PlainChar',
  shortName: 'PlainChar',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_PlainChar_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_PlainChar_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_PlainChar_initialize(x,y,p) {
        "use strict";
        var _this=this;
        
        _this.layer=_this.layer||Tonyu.globals.$mainLayer;
        _this._th=Tonyu.globals.$Boot.schedule(_this,"tMain",[]);
        _this.addToLayer();
        _this._scheduler=_this._scheduler||Tonyu.globals.$Scheduler;
        _this.crashScale=1;
        if (typeof  x=="object") {
          Tonyu.extend(_this,x);
        } else {
          if (typeof  x=="number") {
            _this.x=x;
            _this.y=y;
            _this.p=p;
            
          }
        }
      },
      draw :function _trc_PlainChar_draw(c) {
        "use strict";
        var _this=this;
        
        _this.onDraw();
        if (_this._isInvisible) {
          return _this;
        }
      },
      setVisible :function _trc_PlainChar_setVisible(v) {
        "use strict";
        var _this=this;
        
        _this._isInvisible=! v;
      },
      fiber$setVisible :function _trc_PlainChar_f_setVisible(_thread,v) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._isInvisible=! v;
        
        _thread.retVal=_this;return;
      },
      onDraw :function _trc_PlainChar_onDraw() {
        "use strict";
        var _this=this;
        
      },
      fiber$onDraw :function _trc_PlainChar_f_onDraw(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      update :function _trc_PlainChar_update() {
        "use strict";
        var _this=this;
        
        _this.onUpdate();
        __superClass.prototype.update.apply( _this, []);
      },
      fiber$update :function _trc_PlainChar_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.onUpdate();
        
        _thread.enter(function _trc_PlainChar_ent_update(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              __superClass.prototype.fiber$update.apply( _this, [_thread]);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      onUpdate :function _trc_PlainChar_onUpdate() {
        "use strict";
        var _this=this;
        
      },
      tMain :function _trc_PlainChar_tMain() {
        "use strict";
        var _this=this;
        
        _this.main();
        _this.die();
      },
      fiber$tMain :function _trc_PlainChar_f_tMain(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_PlainChar_ent_tMain(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$main(_thread);
              __pc=1;return;
            case 1:
              
              _this.die();
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"draw":{"nowait":true},"setVisible":{"nowait":false},"onDraw":{"nowait":false},"update":{"nowait":false},"onUpdate":{"nowait":true},"tMain":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.SecretChar',
  shortName: 'SecretChar',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.PlainChar,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_SecretChar_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_SecretChar_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_SecretChar_draw(c) {
        "use strict";
        var _this=this;
        
        _this.onDraw();
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"draw":{"nowait":true}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.SpriteChar',
  shortName: 'SpriteChar',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.PlainChar,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_SpriteChar_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_SpriteChar_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_SpriteChar_initialize(x,y,p,f) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [x,y,p]);
        _this.f=f;
        if (! _this.x) {
          _this.x=0;
        }
        if (! _this.y) {
          _this.y=0;
        }
        if (! _this.p) {
          _this.p=0;
        }
        if (typeof  _this.scaleX!="number") {
          _this.scaleX=1;
        }
      },
      draw :function _trc_SpriteChar_draw(c) {
        "use strict";
        var _this=this;
        
        if (_this._isInvisible) {
          return _this;
        }
        _this.onDraw();
        _this.prepareImage();
        _this.drawSprite(_this.x,_this.y,_this.p,_this.f,_this.zOrder);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"draw":{"nowait":true}},"fields":{"f":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Map',
  shortName: 'T1Map',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Map,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Map_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Map_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      setBGColor :function _trc_T1Map_setBGColor(c) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Screen.setBGColor(c);
      },
      fiber$setBGColor :function _trc_T1Map_f_setBGColor(_thread,c) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$Screen.setBGColor(c);
        
        _thread.retVal=_this;return;
      },
      load :function _trc_T1Map_load(fileName) {
        "use strict";
        var _this=this;
        var f;
        var o;
        
        f = _this.file("../maps/").rel(fileName);
        
        o = f.obj();
        
        _this.chipWidth=o.chipWidth;
        _this.chipHeight=o.chipHeight;
        _this.baseData=o.baseData;
        _this.mapTable=_this.conv(_this.baseData[0],o.pTable);
        _this.mapData=_this.mapTable;
        _this.row=_this.mapTable.length;
        _this.col=_this.mapTable[0].length;
        _this.mapOnTable=_this.conv(_this.baseData[1],o.pTable);
        _this.mapOnData=_this.mapOnTable;
        _this.buf=$("<canvas>").attr({width: _this.col*_this.chipWidth,height: _this.row*_this.chipHeight});
        _this.initMap();
      },
      fiber$load :function _trc_T1Map_f_load(_thread,fileName) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var f;
        var o;
        
        f = _this.file("../maps/").rel(fileName);
        
        o = f.obj();
        
        _this.chipWidth=o.chipWidth;
        _this.chipHeight=o.chipHeight;
        _this.baseData=o.baseData;
        
        _thread.enter(function _trc_T1Map_ent_load(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$conv(_thread, _this.baseData[0], o.pTable);
              __pc=1;return;
            case 1:
              _this.mapTable=_thread.retVal;
              
              _this.mapData=_this.mapTable;
              _this.row=_this.mapTable.length;
              _this.col=_this.mapTable[0].length;
              _this.fiber$conv(_thread, _this.baseData[1], o.pTable);
              __pc=2;return;
            case 2:
              _this.mapOnTable=_thread.retVal;
              
              _this.mapOnData=_this.mapOnTable;
              _this.buf=$("<canvas>").attr({width: _this.col*_this.chipWidth,height: _this.row*_this.chipHeight});
              _this.fiber$initMap(_thread);
              __pc=3;return;
            case 3:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      conv :function _trc_T1Map_conv(mat,tbl) {
        "use strict";
        var _this=this;
        var res;
        
        res = [];
        
        mat.forEach((function anonymous_955(row) {
          var rrow;
          
          rrow = [];
          
          res.push(rrow);
          row.forEach((function anonymous_1032(dat) {
            var t;
            
            t = tbl[dat[0]];
            
            if (t) {
              rrow.push(Tonyu.globals[t.name]+dat[1]);
            } else {
              rrow.push(dat[1]);
            }
          }));
        }));
        return res;
      },
      fiber$conv :function _trc_T1Map_f_conv(_thread,mat,tbl) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        
        res = [];
        
        mat.forEach((function anonymous_955(row) {
          var rrow;
          
          rrow = [];
          
          res.push(rrow);
          row.forEach((function anonymous_1032(dat) {
            var t;
            
            t = tbl[dat[0]];
            
            if (t) {
              rrow.push(Tonyu.globals[t.name]+dat[1]);
            } else {
              rrow.push(dat[1]);
            }
          }));
        }));
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"setBGColor":{"nowait":false},"load":{"nowait":false},"conv":{"nowait":false}},"fields":{"buf":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.T1Page',
  shortName: 'T1Page',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.PlainChar,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_T1Page_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_T1Page_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initGlobals :function _trc_T1Page_initGlobals() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$chars=Tonyu.globals.$Sprites.sprites;
        Tonyu.globals.$Boot.setFrameRate(60);
        Tonyu.globals.$clBlack=_this.color(0,0,0);
        Tonyu.globals.$clRed=_this.color(255,0,0);
        Tonyu.globals.$clGreen=_this.color(0,255,0);
        Tonyu.globals.$clYellow=_this.color(255,255,0);
        Tonyu.globals.$clBlue=_this.color(0,0,255);
        Tonyu.globals.$clPink=_this.color(255,0,255);
        Tonyu.globals.$clAqua=_this.color(0,255,255);
        Tonyu.globals.$clWhite=_this.color(255,255,255);
        Tonyu.globals.$mplayer=new Tonyu.classes.kernel.MediaPlayer;
      },
      fiber$initGlobals :function _trc_T1Page_f_initGlobals(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$chars=Tonyu.globals.$Sprites.sprites;
        Tonyu.globals.$Boot.setFrameRate(60);
        Tonyu.globals.$clBlack=_this.color(0,0,0);
        Tonyu.globals.$clRed=_this.color(255,0,0);
        Tonyu.globals.$clGreen=_this.color(0,255,0);
        Tonyu.globals.$clYellow=_this.color(255,255,0);
        Tonyu.globals.$clBlue=_this.color(0,0,255);
        Tonyu.globals.$clPink=_this.color(255,0,255);
        Tonyu.globals.$clAqua=_this.color(0,255,255);
        Tonyu.globals.$clWhite=_this.color(255,255,255);
        Tonyu.globals.$mplayer=new Tonyu.classes.kernel.MediaPlayer;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"initGlobals":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.TextChar',
  shortName: 'TextChar',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.PlainChar,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_TextChar_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_TextChar_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_TextChar_initialize(xx,yy,t,c,s) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [xx,yy]);
        _this.text=_this.text||"";
        _this.col=Tonyu.globals.$clWhite;
        _this.size=20;
        if (! _this.x) {
          _this.x=0;
        }
        if (! _this.y) {
          _this.y=0;
        }
        if (t) {
          _this.text=t;
        }
        if (c) {
          _this.fillStyle=c;
        }
        if (s) {
          _this.size=s;
        }
      },
      draw :function _trc_TextChar_draw(ctx) {
        "use strict";
        var _this=this;
        
        if (_this._isInvisible) {
          return _this;
        }
        _this.onDraw();
        _this.drawText(_this.x,_this.y,_this.text,_this.col,_this.size);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"draw":{"nowait":true}},"fields":{"col":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.APad',
  shortName: 'APad',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_APad_main() {
        "use strict";
        var _this=this;
        
        if (! _this.auto) {
          _this.loop();
        }
      },
      fiber$main :function _trc_APad_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_APad_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! _this.auto)) { __pc=2     ; break; }
              _this.fiber$loop(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initialize :function _trc_APad_initialize(p) {
        "use strict";
        var _this=this;
        
        p=p||{};
        if (! p.alpha) {
          p.alpha=128;
        }
        __superClass.apply( _this, [p]);
        _this.vx=0;
        _this.vy=0;
        _this.outerRadius=_this.outerRadius||50;
        _this.fillStyle=_this.fillStyle||"white";
        _this.strokeStyle=_this.strokeStyle||"white";
        _this.innerRadius=_this.innerRadius||10;
        if (typeof  _this.keys==="object") {
          _this.leftKey=_this.keys.left;
          _this.rightKey=_this.keys.right;
          _this.upKey=_this.keys.up;
          _this.downKey=_this.keys.down;
          
        }
        _this.keySpeed=_this.keySpeed||15/50;
        _this.leftKey=_this.leftKey||"left";
        _this.rightKey=_this.rightKey||"right";
        _this.upKey=_this.upKey||"up";
        _this.downKey=_this.downKey||"down";
        _this.decay=(typeof  _this.decay)==="number"?_this.decay:0.8;
        _this.velocity=new Tonyu.classes.kernel.Vec3View(_this,{x: "vx",y: "vy",z: "vz"});
        if ((typeof  _this.x!=="number")||_this.x!==_this.x) {
          _this.x=Tonyu.globals.$screenWidth/2;
          
        }
        if ((typeof  _this.y!=="number")||_this.y!==_this.y) {
          _this.y=Tonyu.globals.$screenHeight-_this.outerRadius-_this.innerRadius;
          
        }
        _this.ix=_this.x;
        _this.iy=_this.y;
      },
      __getter__defaultLayer :function _trc_APad___getter__defaultLayer() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$frontLayer;
      },
      draw :function _trc_APad_draw(ctx) {
        "use strict";
        var _this=this;
        
        if (_this.auto) {
          _this.ix=_this.x+_this.vx*_this.outerRadius;
          _this.iy=_this.y+_this.vy*_this.outerRadius;
          
        }
        ctx.save();
        ctx.globalAlpha=_this.alpha/255;
        ctx.fillStyle=_this.fillStyle+"";
        ctx.beginPath();
        ctx.arc(_this.ix,_this.iy,_this.innerRadius,0,Tonyu.globals.$Math.PI*2);
        ctx.closePath();
        ctx.fill();
        ctx.strokeStyle=_this.strokeStyle;
        ctx.beginPath();
        ctx.arc(_this.x,_this.y,_this.outerRadius,0,Tonyu.globals.$Math.PI*2);
        ctx.closePath();
        ctx.stroke();
        ctx.restore();
      },
      findTouch :function _trc_APad_findTouch() {
        "use strict";
        var _this=this;
        var t;
        var _it_6599;
        
        _it_6599=Tonyu.iterator(Tonyu.globals.$touches,1);
        while(_it_6599.next()) {
          t=_it_6599[0];
          
          if ((! _this.touchRadius||_this.dist(t)<_this.touchRadius)&&t.touched==1) {
            return t;
            
          }
          
        }
      },
      loop :function _trc_APad_loop() {
        "use strict";
        var _this=this;
        var vx;
        var vy;
        
        vx = 0;
        vy = 0;
        
        while (true) {
          if (! _this.t||_this.t.ended) {
            _this.t=_this.findTouch();
          }
          if (_this.t) {
            vx+=_this.t.vx;
            vy+=_this.t.vy;
            
          } else {
            vx*=_this.decay;
            vy*=_this.decay;
            
          }
          if (_this.getkey(_this.leftKey)) {
            vx-=_this.keySpeed*_this.outerRadius;
          }
          if (_this.getkey(_this.rightKey)) {
            vx+=_this.keySpeed*_this.outerRadius;
          }
          if (_this.getkey(_this.upKey)) {
            vy-=_this.keySpeed*_this.outerRadius;
          }
          if (_this.getkey(_this.downKey)) {
            vy+=_this.keySpeed*_this.outerRadius;
          }
          _this.d=_this.dist(vx,vy);
          if (_this.d>_this.outerRadius) {
            vx=vx/_this.d*_this.outerRadius;
            vy=vy/_this.d*_this.outerRadius;
            
          }
          _this.ix=_this.x+vx;
          _this.iy=_this.y+vy;
          _this.vx=_this.clamp(vx/_this.outerRadius,- 1,1);
          _this.vy=_this.clamp(vy/_this.outerRadius,- 1,1);
          _this.update();
          
        }
      },
      fiber$loop :function _trc_APad_f_loop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var vx;
        var vy;
        
        vx = 0;
        vy = 0;
        
        
        _thread.enter(function _trc_APad_ent_loop(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (! _this.t||_this.t.ended) {
                _this.t=_this.findTouch();
              }
              if (_this.t) {
                vx+=_this.t.vx;
                vy+=_this.t.vy;
                
              } else {
                vx*=_this.decay;
                vy*=_this.decay;
                
              }
              if (_this.getkey(_this.leftKey)) {
                vx-=_this.keySpeed*_this.outerRadius;
              }
              if (_this.getkey(_this.rightKey)) {
                vx+=_this.keySpeed*_this.outerRadius;
              }
              if (_this.getkey(_this.upKey)) {
                vy-=_this.keySpeed*_this.outerRadius;
              }
              if (_this.getkey(_this.downKey)) {
                vy+=_this.keySpeed*_this.outerRadius;
              }
              _this.d=_this.dist(vx,vy);
              if (_this.d>_this.outerRadius) {
                vx=vx/_this.d*_this.outerRadius;
                vy=vy/_this.d*_this.outerRadius;
                
              }
              _this.ix=_this.x+vx;
              _this.iy=_this.y+vy;
              _this.vx=_this.clamp(vx/_this.outerRadius,- 1,1);
              _this.vy=_this.clamp(vy/_this.outerRadius,- 1,1);
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__speed :function _trc_APad___getter__speed() {
        "use strict";
        var _this=this;
        
        return _this.sqrt(_this.vx*_this.vx+_this.vy*_this.vy);
      },
      __getter__direction :function _trc_APad___getter__direction() {
        "use strict";
        var _this=this;
        
        return _this.atanxy(_this.vx,_this.vy);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"__getter__defaultLayer":{"nowait":true},"draw":{"nowait":true},"findTouch":{"nowait":true},"loop":{"nowait":false},"__getter__speed":{"nowait":true},"__getter__direction":{"nowait":true}},"fields":{"auto":{},"vx":{},"vy":{},"outerRadius":{},"strokeStyle":{},"innerRadius":{},"keys":{},"leftKey":{},"rightKey":{},"upKey":{},"downKey":{},"keySpeed":{},"decay":{},"velocity":{},"ix":{},"iy":{},"touchRadius":{},"t":{},"d":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Button',
  shortName: 'Button',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Button_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        
        
        
        
        
        if (_this.key) {
          _this.on("keyDown",_this.key,(function anonymous_1776(keyEvent) {
            
            if (_this.disabled) {
              return _this;
            }
            _this.doStartClick();
            keyEvent.on("up",Tonyu.bindFunc(_this,_this.doEndClick));
          }));
          
        }
        _this.on("touch",(function anonymous_1909(touchEvent) {
          var f;
          
          if (_this.disabled) {
            return _this;
          }
          f = touchEvent.finger;
          
          _this.doStartClick();
          f.on("end",Tonyu.bindFunc(_this,_this.doEndClick));
        }));
      },
      fiber$main :function _trc_Button_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        
        
        
        
        
        
        _thread.enter(function _trc_Button_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.key)) { __pc=1     ; break; }
              _this.on("keyDown",_this.key,(function anonymous_1776(keyEvent) {
                
                if (_this.disabled) {
                  return _this;
                }
                _this.doStartClick();
                keyEvent.on("up",Tonyu.bindFunc(_this,_this.doEndClick));
              }));
            case 1     :
              
              _this.on("touch",(function anonymous_1909(touchEvent) {
                var f;
                
                if (_this.disabled) {
                  return _this;
                }
                f = touchEvent.finger;
                
                _this.doStartClick();
                f.on("end",Tonyu.bindFunc(_this,_this.doEndClick));
              }));
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__clickedStyle :function _trc_Button___getter__clickedStyle() {
        "use strict";
        var _this=this;
        
        return (_this.clickedEffect&&_this.clickedEffect.strokeStyle);
      },
      __setter__clickedStyle :function _trc_Button___setter__clickedStyle(v) {
        "use strict";
        var _this=this;
        
        _this.clickedEffect=_this.clickedEffect||{};
        _this.clickedEffect.strokeStyle=v;
      },
      __getter__effect :function _trc_Button___getter__effect() {
        "use strict";
        var _this=this;
        
        return _this.clickedEffect;
      },
      __setter__effect :function _trc_Button___setter__effect(v) {
        "use strict";
        var _this=this;
        
        _this.clickedEffect=v;
      },
      __getter__disabledStrokeStyle :function _trc_Button___getter__disabledStrokeStyle() {
        "use strict";
        var _this=this;
        
        return (_this.disabledEffect&&_this.disabledEffect.strokeStyle);
      },
      __setter__disabledStrokeStyle :function _trc_Button___setter__disabledStrokeStyle(v) {
        "use strict";
        var _this=this;
        
        _this.disabledEffect=_this.disabledEffect||{};
        _this.disabledEffect.strokeStyle=v;
      },
      initialize :function _trc_Button_initialize(options) {
        "use strict";
        var _this=this;
        
        options=options||{};
        options.layer=options.layer||Tonyu.globals.$frontLayer;
        __superClass.apply( _this, [options]);
        _this.fillStyle=_this.fillStyle||"rgb(179,255,142)";
        _this.strokeStyle=_this.strokeStyle||"black";
        _this.alpha=typeof  (_this.alpha)=="number"?_this.alpha:255;
        _this.padding=typeof  (_this.padding)=="number"?_this.padding:5;
        _this.width=_this.width||Tonyu.globals.$screenWidth-100;
        _this.height=_this.height||50;
        _this.left=typeof  (_this.left)=="number"?_this.left:typeof  (_this.x)=="number"?_this.x-_this.width/2:50;
        _this.top=typeof  (_this.top)=="number"?_this.top:typeof  (_this.y)=="number"?_this.y-_this.height/2:50;
        _this.x=_this.left+_this.width/2;
        _this.y=_this.top+_this.height/2;
        _this.clickedEffect=_this.clickedEffect||{strokeStyle: "white"};
        _this.disabledEffect=_this.disabledEffect||{strokeStyle: "#ddd"};
        _this.__binited=true;
      },
      __getter__curEffect :function _trc_Button___getter__curEffect() {
        "use strict";
        var _this=this;
        var base;
        
        base = {fillStyle: _this.fillStyle,strokeStyle: _this.strokeStyle,alpha: _this.alpha,padding: _this.padding,width: _this.width,height: _this.height};
        
        if (_this.disabled) {
          Tonyu.extend(base,_this.disabledEffect);
          
        } else {
          if (_this.clicked) {
            Tonyu.extend(base,_this.clickedEffect);
            
          }
        }
        return base;
      },
      handleClickEvent :function _trc_Button_handleClickEvent() {
        "use strict";
        var _this=this;
        
        _this.fireEvent("click");
        if (typeof  _this.onClick==="function") {
          _this.onClick(_this);
        }
      },
      fiber$handleClickEvent :function _trc_Button_f_handleClickEvent(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.fireEvent("click");
        if (typeof  _this.onClick==="function") {
          _this.onClick(_this);
        }
        
        _thread.retVal=_this;return;
      },
      doStartClick :function _trc_Button_doStartClick() {
        "use strict";
        var _this=this;
        
        _this._clicked=Tonyu.globals.$frameCount;
        Tonyu.classes.kernel.Button.last=_this;
        if (_this.clickTiming!=="release") {
          _this.handleClickEvent();
        }
        if (_this.autoRepeat) {
          if (_this._arth) {
            _this._arth.kill();
          }
          _this._arth=_this.parallel("procAR");
          
        }
      },
      fiber$doStartClick :function _trc_Button_f_doStartClick(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._clicked=Tonyu.globals.$frameCount;
        Tonyu.classes.kernel.Button.last=_this;
        
        _thread.enter(function _trc_Button_ent_doStartClick(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.clickTiming!=="release")) { __pc=2     ; break; }
              _this.fiber$handleClickEvent(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              if (_this.autoRepeat) {
                if (_this._arth) {
                  _this._arth.kill();
                }
                _this._arth=_this.parallel("procAR");
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      doEndClick :function _trc_Button_doEndClick() {
        "use strict";
        var _this=this;
        
        _this.fireEvent("release");
        if (_this.clickTiming==="release") {
          _this.handleClickEvent();
        }
        _this._clicked=0;
        if (_this._arth) {
          _this._arth.kill();
        }
      },
      fiber$doEndClick :function _trc_Button_f_doEndClick(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.fireEvent("release");
        
        _thread.enter(function _trc_Button_ent_doEndClick(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.clickTiming==="release")) { __pc=2     ; break; }
              _this.fiber$handleClickEvent(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _this._clicked=0;
              if (_this._arth) {
                _this._arth.kill();
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      procAR :function _trc_Button_procAR() {
        "use strict";
        var _this=this;
        
        _this.updateEx(_this.autoRepeat);
        while (true) {
          _this.handleClickEvent();
          _this.update();
          
        }
      },
      fiber$procAR :function _trc_Button_f_procAR(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Button_ent_procAR(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$updateEx(_thread, _this.autoRepeat);
              __pc=1;return;
            case 1:
              
            case 2:
              _this.fiber$handleClickEvent(_thread);
              __pc=3;return;
            case 3:
              
              _this.fiber$update(_thread);
              __pc=4;return;
            case 4:
              
              __pc=2;break;
            case 5     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getCrashRect :function _trc_Button_getCrashRect() {
        "use strict";
        var _this=this;
        
        return {x: _this.left+_this.width/2,y: _this.top+_this.height/2,width: _this.width,height: _this.height};
      },
      draw :function _trc_Button_draw(c) {
        "use strict";
        var _this=this;
        var e;
        var eleft;
        var etop;
        var size;
        var f;
        var r;
        
        e = _this.curEffect;
        
        c.globalAlpha=e.alpha/255;
        c.fillStyle=e.fillStyle?e.fillStyle+"":"gray";
        c.strokeStyle=e.strokeStyle?e.strokeStyle+"":"black";
        eleft = _this.left;
        etop = _this.top;
        
        if (e.move) {
          eleft+=e.move.x||0;
          etop+=e.move.y||0;
          
        }
        c.fillRect(eleft,etop,e.width,e.height);
        c.strokeRect(eleft,etop,e.width,e.height);
        size = e.height-e.padding*2;
        
        f = c.font.replace(/^[0-9]+px /,"");
        
        c.font=size+"px "+f;
        c.textBaseline="top";
        c.fillStyle=e.strokeStyle;
        r = c.measureText(_this.text);
        
        c.fillText(_this.text,eleft+e.width/2-r.width/2,etop+e.padding);
      },
      __getter__clicked :function _trc_Button___getter__clicked() {
        "use strict";
        var _this=this;
        
        if (! _this._clicked) {
          return 0;
        }
        return Tonyu.globals.$frameCount-_this._clicked+1;
      },
      __getter__x :function _trc_Button___getter__x() {
        "use strict";
        var _this=this;
        
        if (_this.__binited) {
          _this._x=_this.left+_this.width/2;
        }
        return _this._x;
      },
      __setter__x :function _trc_Button___setter__x(val) {
        "use strict";
        var _this=this;
        
        if (_this.__binited) {
          _this.left+=(val-_this.x);
        }
        _this._x=val;
      },
      __getter__y :function _trc_Button___getter__y() {
        "use strict";
        var _this=this;
        
        if (_this.__binited) {
          _this._y=_this.top+_this.height/2;
        }
        return _this._y;
      },
      __setter__y :function _trc_Button___setter__y(val) {
        "use strict";
        var _this=this;
        
        if (_this.__binited) {
          _this.top+=val-_this.y;
        }
        _this._y=val;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"__getter__clickedStyle":{"nowait":true},"__setter__clickedStyle":{"nowait":true},"__getter__effect":{"nowait":true},"__setter__effect":{"nowait":true},"__getter__disabledStrokeStyle":{"nowait":true},"__setter__disabledStrokeStyle":{"nowait":true},"new":{"nowait":false},"__getter__curEffect":{"nowait":true},"handleClickEvent":{"nowait":false},"doStartClick":{"nowait":false},"doEndClick":{"nowait":false},"procAR":{"nowait":false},"getCrashRect":{"nowait":true},"draw":{"nowait":true},"__getter__clicked":{"nowait":true},"__getter__x":{"nowait":true},"__setter__x":{"nowait":true},"__getter__y":{"nowait":true},"__setter__y":{"nowait":true}},"fields":{"padding":{},"left":{},"top":{},"width":{},"height":{},"text":{},"fillStyle":{},"strokeStyle":{},"clickedEffect":{},"disabledEffect":{},"disabled":{},"key":{},"autoRepeat":{},"onClick":{},"clickTiming":{},"_clicked":{},"_arth":{},"__binited":{},"_x":{},"_y":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.GameConsole',
  shortName: 'GameConsole',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_GameConsole_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_GameConsole_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_GameConsole_initialize(opt) {
        "use strict";
        var _this=this;
        
        _this.extend(opt);
        _this.cw=_this.canvas.width();
        _this.ch=_this.canvas.height();
        Tonyu.globals.$Sprites=new Tonyu.classes.kernel.Sprites;
        Tonyu.globals.$Screen=_this.gameScreen=new Tonyu.classes.kernel.GameScreen({width: 465,height: 465,sprites: Tonyu.globals.$Sprites});
        Tonyu.globals.$FrontSprites=_this.sprites=new Tonyu.classes.kernel.Sprites;
        _this.sprites.add(_this.gameScreen);
        _this.cctx=_this.canvas[0].getContext("2d");
      },
      shouldDraw1x1 :function _trc_GameConsole_shouldDraw1x1(srcw,srch,dstw,dsth) {
        "use strict";
        var _this=this;
        var larger;
        var smaller;
        
        larger = 200;
        
        smaller = 5;
        
        return srcw-smaller<=dstw&&dstw<=srcw+larger&&srch-smaller<=dsth&&dsth<=srch+larger;
      },
      fiber$shouldDraw1x1 :function _trc_GameConsole_f_shouldDraw1x1(_thread,srcw,srch,dstw,dsth) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var larger;
        var smaller;
        
        larger = 200;
        
        smaller = 5;
        
        _thread.retVal=srcw-smaller<=dstw&&dstw<=srcw+larger&&srch-smaller<=dsth&&dsth<=srch+larger;return;
        
        
        _thread.retVal=_this;return;
      },
      layout :function _trc_GameConsole_layout() {
        "use strict";
        var _this=this;
        var width;
        var height;
        var calcw;
        var calch;
        var marginw;
        var marginh;
        
        _this.cw=_this.canvas.width();
        _this.ch=_this.canvas.height();
        width = _this.gameScreen.width;
        
        height = _this.gameScreen.height;
        
        calcw = _this.ch/height*width;
        
        calch = _this.cw/width*height;
        
        if (calch>_this.ch) {
          calch=_this.ch;
        }
        if (calcw>_this.cw) {
          calcw=_this.cw;
        }
        if (_this.shouldDraw1x1(width,height,calcw,calch)) {
          calcw=width;
          calch=height;
          
        }
        marginw = Math.floor((_this.cw-calcw)/2);
        
        marginh = Math.floor((_this.ch-calch)/2);
        
        _this.gameScreen.setBounds({left: marginw,top: marginh,width: calcw,height: calch});
      },
      fiber$layout :function _trc_GameConsole_f_layout(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var width;
        var height;
        var calcw;
        var calch;
        var marginw;
        var marginh;
        
        _this.cw=_this.canvas.width();
        _this.ch=_this.canvas.height();
        width = _this.gameScreen.width;
        
        height = _this.gameScreen.height;
        
        calcw = _this.ch/height*width;
        
        calch = _this.cw/width*height;
        
        if (calch>_this.ch) {
          calch=_this.ch;
        }
        if (calcw>_this.cw) {
          calcw=_this.cw;
        }
        if (_this.shouldDraw1x1(width,height,calcw,calch)) {
          calcw=width;
          calch=height;
          
        }
        marginw = Math.floor((_this.cw-calcw)/2);
        
        marginh = Math.floor((_this.ch-calch)/2);
        
        _this.gameScreen.setBounds({left: marginw,top: marginh,width: calcw,height: calch});
        
        _thread.retVal=_this;return;
      },
      draw :function _trc_GameConsole_draw() {
        "use strict";
        var _this=this;
        
        _this.layout();
        _this.sprites.draw(_this.canvas[0]);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"shouldDraw1x1":{"nowait":false},"layout":{"nowait":false},"draw":{"nowait":true}},"fields":{"cw":{},"canvas":{},"ch":{},"gameScreen":{},"sprites":{},"cctx":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Label',
  shortName: 'Label',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Label_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_Label_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_Label_initialize(x,y,f) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [x,y,- 1]);
        if (x==null) {
          x=50;
        }
        if (y==null) {
          y=50;
        }
        if (typeof  _this.template!=="string"&&_this._text==null) {
          _this.text="text";
          
        }
      },
      __getter__defaultLayer :function _trc_Label___getter__defaultLayer() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$frontLayer;
      },
      __getter__text :function _trc_Label___getter__text() {
        "use strict";
        var _this=this;
        
        if (typeof  _this.template!=="string") {
          return _this._text;
        }
        return _this.template.replace(/[\$\@][A-Za-z0-9\.]* ?/g,(function anonymous_439(v) {
          
          v=v.replace(/ $/,"");
          if (v=="") {
            return "$";
          }
          if (v.match(/^@/)) {
            return _this.exapndVal(_this.target,v.substring(1).split("."));
            
          } else {
            return _this.expandVal(Tonyu.globals,v.split("."));
            
          }
        }));
      },
      expandVal :function _trc_Label_expandVal(obj,flds) {
        "use strict";
        var _this=this;
        
        while (flds.length>0) {
          if (! obj) {
            return "";
          }
          obj=obj[flds.shift()];
          
        }
        return obj;
      },
      fiber$expandVal :function _trc_Label_f_expandVal(_thread,obj,flds) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Label_ent_expandVal(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(flds.length>0)) { __pc=3     ; break; }
              if (!(! obj)) { __pc=2     ; break; }
              _thread.exit("");return;
            case 2     :
              
              obj=obj[flds.shift()];
              __pc=1;break;
            case 3     :
              
              _thread.exit(obj);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __setter__text :function _trc_Label___setter__text(v) {
        "use strict";
        var _this=this;
        
        delete _this.template;
        _this._text=v;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"__getter__defaultLayer":{"nowait":true},"__getter__text":{"nowait":true},"expandVal":{"nowait":false},"__setter__text":{"nowait":true}},"fields":{"template":{},"_text":{},"exapndVal":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MapEditor',
  shortName: 'MapEditor',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MapEditor_main() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Screen.resize(480,640);
        _this.loadMode=false;
        _this.fileExist=false;
        Tonyu.globals.$Boot.on("stop",(function anonymous_127(e) {
          
          if (_this.modified) {
            e.preventDefault();
            _this.parallel(Tonyu.bindFunc(_this,_this.st),e);
            
          }
        }));
        _this.print("map file(s)");
        _this.fileList=_this.file("../maps/");
        if (_this.fileList.exists()) {
          _this.fileList.recursive((function a(f) {
            
            _this.print(f.name());
            _this.fileExist=true;
          }));
          
        }
        if (_this.fileExist) {
          _this.print("Load Data?: Y or N");
          while (true) {
            if (_this.getkey("y")>0) {
              _this.loadMode=true;
              break;
              
              
            }
            if (_this.getkey("n")>0) {
              _this.loadMode=false;
              break;
              
              
            }
            _this.update();
            
          }
          if (_this.loadMode) {
            _this.fileName=_this.prompt("Input json file (*.json)","map.json");
            if (_this.fileName) {
              _this.mapDataFile=_this.file("../maps/").rel(_this.fileName);
              
            }
            if (_this.mapDataFile.obj()) {
              _this.baseData=_this.mapDataFile.obj();
              _this.loadedFile=_this.fileName;
              
            } else {
              _this.mapDataFile=_this.file(_this.fileName);
              if (_this.mapDataFile.obj()) {
                _this.baseData=_this.mapDataFile.obj();
                _this.loadedFile=_this.fileName;
                
              }
              
            }
            if (_this.baseData==undefined) {
              _this.print("Load failed");
              _this.loadMode=false;
              
            } else {
              if (_this.baseData[0]&&_this.baseData[1]) {
                _this.modified=false;
                _this.mapData=_this.baseData[0];
                _this.mapOnData=_this.baseData[1];
                if (_this.baseData.length>2) {
                  _this.chipWidth=_this.baseData[_this.baseData.length-2];
                  _this.chipHeight=_this.baseData[_this.baseData.length-1];
                  
                } else {
                  _this.chipWidth=32;
                  _this.chipHeight=32;
                  
                }
                
              }
            }
            
          }
          
        }
        _this.update();
        if (! _this.loadMode) {
          _this.row=_this.prompt("input row");
          _this.row=(_this.row-0)||50;
          _this.col=_this.prompt("input col");
          _this.col=(_this.col-0)||50;
          _this.chipWidth=_this.prompt("input chipWidth");
          _this.chipHeight=_this.prompt("input chipHeight");
          _this.chipWidth=(_this.chipWidth-0)||32;
          _this.chipHeight=(_this.chipHeight-0)||32;
          _this.panel=new Tonyu.classes.kernel.Panel({width: _this.col*_this.chipWidth,height: _this.row*_this.chipHeight});
          _this.panel.x=_this.panel.width/2+40;
          _this.panel.y=_this.panel.height/2+40;
          _this.panel.setFillStyle("cyan");
          _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
          Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.row,col: _this.col,chipWidth: _this.chipWidth,chipHeight: _this.chipHeight});
          
        } else {
          Tonyu.globals.$map=new Tonyu.classes.kernel.Map({chipWidth: _this.chipWidth,chipHeight: _this.chipHeight});
          Tonyu.globals.$map.load(_this.fileName);
          _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
          _this.panel.x=_this.panel.width/2+40;
          _this.panel.y=_this.panel.height/2+40;
          _this.panel.setFillStyle("cyan");
          _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
          
        }
        _this.mIW=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip].image.width;
        _this.mIH=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip].image.height;
        _this.mCW=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip+0].width;
        _this.mCH=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip+0].height;
        Tonyu.globals.$mp=new Tonyu.classes.kernel.Map({row: _this.floor(_this.mIH/_this.mCH),col: _this.floor(_this.mIW/_this.mCW),chipWidth: _this.mCW,chipHeight: _this.mCH});
        _this.counter=0;
        _this.i = 0;
        for (; _this.i<Tonyu.globals.$mp.row ; _this.i++) {
          {
            _this.j = 0;
            for (; _this.j<Tonyu.globals.$mp.col ; _this.j++) {
              {
                Tonyu.globals.$mp.set(_this.j,_this.i,Tonyu.globals.$pat_mapchip+_this.counter);
                _this.counter++;
              }
            }
          }
        }
        Tonyu.globals.$consolePanel.clearRect(0,0,Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
        _this.mode="get";
        _this.prevMode="set";
        _this.mapp=0;
        _this.maponp=- 1;
        _this.mx=- 40;
        _this.my=- 40;
        _this.chipX=- 40;
        _this.chipY=- 40;
        _this.x=Tonyu.globals.$screenWidth-_this.chipWidth/2;
        _this.y=Tonyu.globals.$screenHeight-_this.chipHeight/2;
        Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
        _this.initialWidth=Tonyu.globals.$map.chipWidth;
        _this.initialHeight=Tonyu.globals.$map.chipHeight;
        _this.layers=["base","on","all"];
        _this.lc=0;
        _this.selectedLayer=_this.layers[_this.lc];
        _this.drawPanel();
        _this.drawLetter(_this.mode);
        while (true) {
          _this.p=_this.mapp;
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="erase";
            _this.drawLetter(_this.mode);
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="set";
            _this.drawLetter(_this.mode);
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
            _this.lc++;
            _this.selectedLayer=_this.layers[_this.lc%3];
            _this.drawPanel();
            _this.drawLetter(_this.mode);
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>240&&Tonyu.globals.$touches[0].x<360&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
            if (_this.mode!="get") {
              _this.prevMode=_this.mode;
              Tonyu.globals.$mp.scrollTo(- 40,- 40);
              _this.mode="get";
              _this.chipX=- 40;
              _this.chipY=- 40;
              
            } else {
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.mode=_this.prevMode;
              
            }
            _this.drawLetter(_this.mode);
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>360&&Tonyu.globals.$touches[0].x<480&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
            if (_this.loadedFile) {
              _this.saveFileName=_this.prompt("input json file(*.json)",_this.loadedFile);
              
            } else {
              _this.saveFileName=_this.prompt("input json file(*.json)","map.json");
              
            }
            if (_this.saveFileName) {
              _this.save(_this.saveFileName);
              
            }
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="copy";
            _this.drawLetter(_this.mode);
            
          }
          if (_this.mode!="get") {
            if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
              _this.mx=_this.mx-8;
            }
            if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
              _this.mx=_this.mx+8;
            }
            if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
              _this.my=_this.my-8;
            }
            if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
              _this.my=_this.my+8;
            }
            Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
            
          } else {
            if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
              _this.chipX=_this.chipX-8;
            }
            if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
              _this.chipX=_this.chipX+8;
            }
            if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
              _this.chipY=_this.chipY-8;
            }
            if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
              _this.chipY=_this.chipY+8;
            }
            Tonyu.globals.$mp.scrollTo(_this.chipX,_this.chipY);
            
          }
          if (_this.getkey("i")==1) {
            if (Tonyu.globals.$map.chipWidth<_this.initialWidth) {
              Tonyu.globals.$map.chipWidth+=4;
            }
            if (Tonyu.globals.$map.chipHeight<_this.initialHeight) {
              Tonyu.globals.$map.chipHeight+=4;
            }
            Tonyu.globals.$map.redrawMap();
            _this.panel.die();
            _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
            _this.panel.x=_this.panel.width/2+40;
            _this.panel.y=_this.panel.height/2+40;
            _this.panel.setFillStyle("cyan");
            _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
            
          }
          if (_this.getkey("o")==1) {
            if (Tonyu.globals.$map.chipWidth>4) {
              Tonyu.globals.$map.chipWidth-=4;
            }
            if (Tonyu.globals.$map.chipHeight>4) {
              Tonyu.globals.$map.chipHeight-=4;
            }
            Tonyu.globals.$map.redrawMap();
            _this.panel.die();
            _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
            _this.panel.x=_this.panel.width/2+40;
            _this.panel.y=_this.panel.height/2+40;
            _this.panel.setFillStyle("cyan");
            _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
            
          }
          _this.panel.x=_this.panel.width/2-_this.mx;
          _this.panel.y=_this.panel.height/2-_this.my;
          if (_this.mode=="set"&&_this.getkey(1)>0&&_this.inRect()) {
            if (_this.selectedLayer=="base") {
              _this.tmpon=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
              Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
              Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.tmpon);
              
            } else {
              if (_this.selectedLayer=="on") {
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                
              } else {
                Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.maponp);
                
              }
            }
            _this.modified=true;
            
          } else {
            if (_this.mode=="erase"&&_this.getkey(1)>0&&_this.inRect()) {
              if (_this.selectedLayer=="base") {
                _this.tmpon=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.tmpon);
                
              } else {
                if (_this.selectedLayer=="on") {
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                  
                } else {
                  Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                  
                }
              }
              _this.modified=true;
              
            } else {
              if (_this.mode=="get"&&_this.getkey(1)>0&&_this.inRect()) {
                _this.mapp=Tonyu.globals.$mp.getAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                _this.mode="set";
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.drawLetter(_this.mode);
                _this.updateEx(10);
                
              } else {
                if (_this.mode=="setOn"&&_this.getkey(1)>0&&_this.inRect()) {
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                  _this.modified=true;
                  
                } else {
                  if (_this.mode=="copy"&&_this.getkey(1)>0&&_this.inRect()) {
                    if (_this.selectedLayer=="base") {
                      _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                      _this.maponp=- 1;
                      
                    } else {
                      if (_this.selectedLayer=="on") {
                        _this.mapp=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                        
                      } else {
                        _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                        _this.maponp=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                        
                      }
                    }
                    _this.mode="set";
                    _this.drawLetter(_this.mode);
                    _this.updateEx(10);
                    
                  }
                }
              }
            }
          }
          _this.update();
          
        }
      },
      fiber$main :function _trc_MapEditor_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$Screen.resize(480,640);
        _this.loadMode=false;
        _this.fileExist=false;
        Tonyu.globals.$Boot.on("stop",(function anonymous_127(e) {
          
          if (_this.modified) {
            e.preventDefault();
            _this.parallel(Tonyu.bindFunc(_this,_this.st),e);
            
          }
        }));
        _this.print("map file(s)");
        
        _thread.enter(function _trc_MapEditor_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$file(_thread, "../maps/");
              __pc=1;return;
            case 1:
              _this.fileList=_thread.retVal;
              
              if (_this.fileList.exists()) {
                _this.fileList.recursive((function a(f) {
                  
                  _this.print(f.name());
                  _this.fileExist=true;
                }));
                
              }
              if (!(_this.fileExist)) { __pc=12    ; break; }
              _this.print("Load Data?: Y or N");
            case 2:
              if (!(_this.getkey("y")>0)) { __pc=3     ; break; }
              _this.loadMode=true;
              __pc=6     ; break;
              
            case 3     :
              
              if (!(_this.getkey("n")>0)) { __pc=4     ; break; }
              _this.loadMode=false;
              __pc=6     ; break;
              
            case 4     :
              
              _this.fiber$update(_thread);
              __pc=5;return;
            case 5:
              
              __pc=2;break;
            case 6     :
              
              if (!(_this.loadMode)) { __pc=11    ; break; }
              _this.fiber$prompt(_thread, "Input json file (*.json)", "map.json");
              __pc=7;return;
            case 7:
              _this.fileName=_thread.retVal;
              
              if (_this.fileName) {
                _this.mapDataFile=_this.file("../maps/").rel(_this.fileName);
                
              }
              if (!(_this.mapDataFile.obj())) { __pc=8     ; break; }
              {
                _this.baseData=_this.mapDataFile.obj();
                _this.loadedFile=_this.fileName;
              }
              __pc=10    ;break;
            case 8     :
              _this.fiber$file(_thread, _this.fileName);
              __pc=9;return;
            case 9:
              _this.mapDataFile=_thread.retVal;
              
              if (_this.mapDataFile.obj()) {
                _this.baseData=_this.mapDataFile.obj();
                _this.loadedFile=_this.fileName;
                
              }
            case 10    :
              
              if (_this.baseData==undefined) {
                _this.print("Load failed");
                _this.loadMode=false;
                
              } else {
                if (_this.baseData[0]&&_this.baseData[1]) {
                  _this.modified=false;
                  _this.mapData=_this.baseData[0];
                  _this.mapOnData=_this.baseData[1];
                  if (_this.baseData.length>2) {
                    _this.chipWidth=_this.baseData[_this.baseData.length-2];
                    _this.chipHeight=_this.baseData[_this.baseData.length-1];
                    
                  } else {
                    _this.chipWidth=32;
                    _this.chipHeight=32;
                    
                  }
                  
                }
              }
            case 11    :
              
            case 12    :
              
              _this.fiber$update(_thread);
              __pc=13;return;
            case 13:
              
              if (!(! _this.loadMode)) { __pc=18    ; break; }
              _this.fiber$prompt(_thread, "input row");
              __pc=14;return;
            case 14:
              _this.row=_thread.retVal;
              
              _this.row=(_this.row-0)||50;
              _this.fiber$prompt(_thread, "input col");
              __pc=15;return;
            case 15:
              _this.col=_thread.retVal;
              
              _this.col=(_this.col-0)||50;
              _this.fiber$prompt(_thread, "input chipWidth");
              __pc=16;return;
            case 16:
              _this.chipWidth=_thread.retVal;
              
              _this.fiber$prompt(_thread, "input chipHeight");
              __pc=17;return;
            case 17:
              _this.chipHeight=_thread.retVal;
              
              _this.chipWidth=(_this.chipWidth-0)||32;
              _this.chipHeight=(_this.chipHeight-0)||32;
              _this.panel=new Tonyu.classes.kernel.Panel({width: _this.col*_this.chipWidth,height: _this.row*_this.chipHeight});
              _this.panel.x=_this.panel.width/2+40;
              _this.panel.y=_this.panel.height/2+40;
              _this.panel.setFillStyle("cyan");
              _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
              Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.row,col: _this.col,chipWidth: _this.chipWidth,chipHeight: _this.chipHeight});
              __pc=19    ;break;
            case 18    :
              {
                Tonyu.globals.$map=new Tonyu.classes.kernel.Map({chipWidth: _this.chipWidth,chipHeight: _this.chipHeight});
                Tonyu.globals.$map.load(_this.fileName);
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
              }
            case 19    :
              
              _this.mIW=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip].image.width;
              _this.mIH=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip].image.height;
              _this.mCW=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip+0].width;
              _this.mCH=Tonyu.globals.$imageList[Tonyu.globals.$pat_mapchip+0].height;
              Tonyu.globals.$mp=new Tonyu.classes.kernel.Map({row: _this.floor(_this.mIH/_this.mCH),col: _this.floor(_this.mIW/_this.mCW),chipWidth: _this.mCW,chipHeight: _this.mCH});
              _this.counter=0;
              _this.i = 0;
              for (; _this.i<Tonyu.globals.$mp.row ; _this.i++) {
                {
                  _this.j = 0;
                  for (; _this.j<Tonyu.globals.$mp.col ; _this.j++) {
                    {
                      Tonyu.globals.$mp.set(_this.j,_this.i,Tonyu.globals.$pat_mapchip+_this.counter);
                      _this.counter++;
                    }
                  }
                }
              }
              Tonyu.globals.$consolePanel.clearRect(0,0,Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
              _this.mode="get";
              _this.prevMode="set";
              _this.mapp=0;
              _this.maponp=- 1;
              _this.mx=- 40;
              _this.my=- 40;
              _this.chipX=- 40;
              _this.chipY=- 40;
              _this.x=Tonyu.globals.$screenWidth-_this.chipWidth/2;
              _this.y=Tonyu.globals.$screenHeight-_this.chipHeight/2;
              Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
              _this.initialWidth=Tonyu.globals.$map.chipWidth;
              _this.initialHeight=Tonyu.globals.$map.chipHeight;
              _this.layers=["base","on","all"];
              _this.lc=0;
              _this.selectedLayer=_this.layers[_this.lc];
              _this.fiber$drawPanel(_thread);
              __pc=20;return;
            case 20:
              
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=21;return;
            case 21:
              
            case 22:
              _this.p=_this.mapp;
              if (!(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640)) { __pc=24    ; break; }
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.mode="erase";
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=23;return;
            case 23:
              
            case 24    :
              
              if (!(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) { __pc=26    ; break; }
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.mode="set";
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=25;return;
            case 25:
              
            case 26    :
              
              if (!(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) { __pc=29    ; break; }
              _this.lc++;
              _this.selectedLayer=_this.layers[_this.lc%3];
              _this.fiber$drawPanel(_thread);
              __pc=27;return;
            case 27:
              
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=28;return;
            case 28:
              
            case 29    :
              
              if (!(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>240&&Tonyu.globals.$touches[0].x<360&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) { __pc=31    ; break; }
              if (_this.mode!="get") {
                _this.prevMode=_this.mode;
                Tonyu.globals.$mp.scrollTo(- 40,- 40);
                _this.mode="get";
                _this.chipX=- 40;
                _this.chipY=- 40;
                
              } else {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode=_this.prevMode;
                
              }
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=30;return;
            case 30:
              
            case 31    :
              
              if (!(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>360&&Tonyu.globals.$touches[0].x<480&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) { __pc=38    ; break; }
              if (!(_this.loadedFile)) { __pc=33    ; break; }
              _this.fiber$prompt(_thread, "input json file(*.json)", _this.loadedFile);
              __pc=32;return;
            case 32:
              _this.saveFileName=_thread.retVal;
              
              __pc=35    ;break;
            case 33    :
              _this.fiber$prompt(_thread, "input json file(*.json)", "map.json");
              __pc=34;return;
            case 34:
              _this.saveFileName=_thread.retVal;
              
            case 35    :
              
              if (!(_this.saveFileName)) { __pc=37    ; break; }
              _this.fiber$save(_thread, _this.saveFileName);
              __pc=36;return;
            case 36:
              
            case 37    :
              
            case 38    :
              
              if (!(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640)) { __pc=40    ; break; }
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.mode="copy";
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=39;return;
            case 39:
              
            case 40    :
              
              if (_this.mode!="get") {
                if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
                  _this.mx=_this.mx-8;
                }
                if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
                  _this.mx=_this.mx+8;
                }
                if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
                  _this.my=_this.my-8;
                }
                if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
                  _this.my=_this.my+8;
                }
                Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
                
              } else {
                if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
                  _this.chipX=_this.chipX-8;
                }
                if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
                  _this.chipX=_this.chipX+8;
                }
                if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
                  _this.chipY=_this.chipY-8;
                }
                if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
                  _this.chipY=_this.chipY+8;
                }
                Tonyu.globals.$mp.scrollTo(_this.chipX,_this.chipY);
                
              }
              if (_this.getkey("i")==1) {
                if (Tonyu.globals.$map.chipWidth<_this.initialWidth) {
                  Tonyu.globals.$map.chipWidth+=4;
                }
                if (Tonyu.globals.$map.chipHeight<_this.initialHeight) {
                  Tonyu.globals.$map.chipHeight+=4;
                }
                Tonyu.globals.$map.redrawMap();
                _this.panel.die();
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
                
              }
              if (_this.getkey("o")==1) {
                if (Tonyu.globals.$map.chipWidth>4) {
                  Tonyu.globals.$map.chipWidth-=4;
                }
                if (Tonyu.globals.$map.chipHeight>4) {
                  Tonyu.globals.$map.chipHeight-=4;
                }
                Tonyu.globals.$map.redrawMap();
                _this.panel.die();
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
                
              }
              _this.panel.x=_this.panel.width/2-_this.mx;
              _this.panel.y=_this.panel.height/2-_this.my;
              if (!(_this.mode=="set"&&_this.getkey(1)>0&&_this.inRect())) { __pc=41    ; break; }
              {
                if (_this.selectedLayer=="base") {
                  _this.tmpon=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                  Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.tmpon);
                  
                } else {
                  if (_this.selectedLayer=="on") {
                    Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                    
                  } else {
                    Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                    Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.maponp);
                    
                  }
                }
                _this.modified=true;
              }
              __pc=53    ;break;
            case 41    :
              if (!(_this.mode=="erase"&&_this.getkey(1)>0&&_this.inRect())) { __pc=42    ; break; }
              {
                if (_this.selectedLayer=="base") {
                  _this.tmpon=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                  Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.tmpon);
                  
                } else {
                  if (_this.selectedLayer=="on") {
                    Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                    
                  } else {
                    Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                    Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,- 1);
                    
                  }
                }
                _this.modified=true;
              }
              __pc=52    ;break;
            case 42    :
              if (!(_this.mode=="get"&&_this.getkey(1)>0&&_this.inRect())) { __pc=45    ; break; }
              _this.mapp=Tonyu.globals.$mp.getAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
              _this.mode="set";
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=43;return;
            case 43:
              
              _this.fiber$updateEx(_thread, 10);
              __pc=44;return;
            case 44:
              
              __pc=51    ;break;
            case 45    :
              if (!(_this.mode=="setOn"&&_this.getkey(1)>0&&_this.inRect())) { __pc=46    ; break; }
              {
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY,_this.mapp);
                _this.modified=true;
              }
              __pc=50    ;break;
            case 46    :
              if (!(_this.mode=="copy"&&_this.getkey(1)>0&&_this.inRect())) { __pc=49    ; break; }
              if (_this.selectedLayer=="base") {
                _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                _this.maponp=- 1;
                
              } else {
                if (_this.selectedLayer=="on") {
                  _this.mapp=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                  
                } else {
                  _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                  _this.maponp=Tonyu.globals.$map.getOnAt(Tonyu.globals.$mouseX,Tonyu.globals.$mouseY);
                  
                }
              }
              _this.mode="set";
              _this.fiber$drawLetter(_thread, _this.mode);
              __pc=47;return;
            case 47:
              
              _this.fiber$updateEx(_thread, 10);
              __pc=48;return;
            case 48:
              
            case 49    :
              
            case 50    :
              
            case 51    :
              
            case 52    :
              
            case 53    :
              
              _this.fiber$update(_thread);
              __pc=54;return;
            case 54:
              
              __pc=22;break;
            case 55    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getCurFileName :function _trc_MapEditor_getCurFileName() {
        "use strict";
        var _this=this;
        
        return _this.saveFileName||_this.loadedFile;
      },
      fiber$getCurFileName :function _trc_MapEditor_f_getCurFileName(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=_this.saveFileName||_this.loadedFile;return;
        
        
        _thread.retVal=_this;return;
      },
      st :function _trc_MapEditor_st(e) {
        "use strict";
        var _this=this;
        var curFileName;
        var r;
        
        curFileName = _this.getCurFileName()||"map.json";
        
        r = _this.confirm("Save "+curFileName+"?");
        
        if (r) {
          _this.save(curFileName);
          _this.update();
          e.die();
          
        } else {
          r=_this.confirm("Discard changes?");
          if (r) {
            _this.update();
            e.die();
            
          }
          
        }
      },
      fiber$st :function _trc_MapEditor_f_st(_thread,e) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var curFileName;
        var r;
        
        curFileName = _this.getCurFileName()||"map.json";
        
        
        _thread.enter(function _trc_MapEditor_ent_st(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$confirm(_thread, "Save "+curFileName+"?");
              __pc=1;return;
            case 1:
              r=_thread.retVal;
              
              if (!(r)) { __pc=4     ; break; }
              _this.fiber$save(_thread, curFileName);
              __pc=2;return;
            case 2:
              
              _this.fiber$update(_thread);
              __pc=3;return;
            case 3:
              
              e.die();
              __pc=8     ;break;
            case 4     :
              _this.fiber$confirm(_thread, "Discard changes?");
              __pc=5;return;
            case 5:
              r=_thread.retVal;
              
              if (!(r)) { __pc=7     ; break; }
              _this.fiber$update(_thread);
              __pc=6;return;
            case 6:
              
              e.die();
            case 7     :
              
            case 8     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      save :function _trc_MapEditor_save(fileName) {
        "use strict";
        var _this=this;
        
        _this.saveDataFile=_this.file("../maps/").rel(fileName);
        _this.data=[Tonyu.globals.$map.mapTable,Tonyu.globals.$map.mapOnTable,Tonyu.globals.$map.chipWidth,Tonyu.globals.$map.chipHeight];
        _this.saveDataFile.obj(_this.data);
        _this.modified=false;
        _this.print(fileName+" Saved");
      },
      fiber$save :function _trc_MapEditor_f_save(_thread,fileName) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.saveDataFile=_this.file("../maps/").rel(fileName);
        _this.data=[Tonyu.globals.$map.mapTable,Tonyu.globals.$map.mapOnTable,Tonyu.globals.$map.chipWidth,Tonyu.globals.$map.chipHeight];
        _this.saveDataFile.obj(_this.data);
        _this.modified=false;
        _this.print(fileName+" Saved");
        
        _thread.retVal=_this;return;
      },
      inRect :function _trc_MapEditor_inRect() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$mouseX>40&&Tonyu.globals.$mouseX<Tonyu.globals.$screenWidth-40&&Tonyu.globals.$mouseY>40&&Tonyu.globals.$mouseY<Tonyu.globals.$screenHeight-200;
      },
      fiber$inRect :function _trc_MapEditor_f_inRect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$mouseX>40&&Tonyu.globals.$mouseX<Tonyu.globals.$screenWidth-40&&Tonyu.globals.$mouseY>40&&Tonyu.globals.$mouseY<Tonyu.globals.$screenHeight-200;return;
        
        
        _thread.retVal=_this;return;
      },
      drawPanel :function _trc_MapEditor_drawPanel() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$panel.setFillStyle("gray");
        Tonyu.globals.$panel.alpha=128;
        Tonyu.globals.$panel.fillRect(0,0,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.fillRect(0,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(Tonyu.globals.$screenWidth-40,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-200,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.alpha=255;
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(240,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(360,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.setFillStyle("white");
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(250,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(370,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillText("↑",Tonyu.globals.$screenWidth/2,30,40,"center");
        Tonyu.globals.$panel.fillText("←",20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("↓",Tonyu.globals.$screenWidth/2,Tonyu.globals.$screenHeight-160-10,40,"center");
        Tonyu.globals.$panel.fillText("→",Tonyu.globals.$screenWidth-20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("set",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText(_this.selectedLayer,Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-110,35,"center");
        Tonyu.globals.$panel.fillText("get",Tonyu.globals.$screenWidth/2+60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("save",Tonyu.globals.$screenWidth-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("erase",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-30,35,"center");
        Tonyu.globals.$panel.fillText("copy",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-30,35,"center");
      },
      fiber$drawPanel :function _trc_MapEditor_f_drawPanel(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$panel.setFillStyle("gray");
        Tonyu.globals.$panel.alpha=128;
        Tonyu.globals.$panel.fillRect(0,0,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.fillRect(0,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(Tonyu.globals.$screenWidth-40,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-200,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.alpha=255;
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(240,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(360,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.setFillStyle("white");
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(250,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(370,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillText("↑",Tonyu.globals.$screenWidth/2,30,40,"center");
        Tonyu.globals.$panel.fillText("←",20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("↓",Tonyu.globals.$screenWidth/2,Tonyu.globals.$screenHeight-160-10,40,"center");
        Tonyu.globals.$panel.fillText("→",Tonyu.globals.$screenWidth-20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("set",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText(_this.selectedLayer,Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-110,35,"center");
        Tonyu.globals.$panel.fillText("get",Tonyu.globals.$screenWidth/2+60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("save",Tonyu.globals.$screenWidth-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("erase",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-30,35,"center");
        Tonyu.globals.$panel.fillText("copy",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-30,35,"center");
        
        _thread.retVal=_this;return;
      },
      drawLetter :function _trc_MapEditor_drawLetter(mode) {
        "use strict";
        var _this=this;
        
        if (mode=="set") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("set",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-110,40,"center");
        if (mode=="get") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("get",Tonyu.globals.$screenWidth/2+60,Tonyu.globals.$screenHeight-110,40,"center");
        if (mode=="erase") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("erase",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-30,35,"center");
        if (mode=="copy") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("copy",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-30,35,"center");
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillText(_this.selectedLayer,Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-110,35,"center");
        Tonyu.globals.$panel.fillText("save",Tonyu.globals.$screenWidth-60,Tonyu.globals.$screenHeight-110,40,"center");
      },
      fiber$drawLetter :function _trc_MapEditor_f_drawLetter(_thread,mode) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (mode=="set") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("set",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-110,40,"center");
        if (mode=="get") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("get",Tonyu.globals.$screenWidth/2+60,Tonyu.globals.$screenHeight-110,40,"center");
        if (mode=="erase") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("erase",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-30,35,"center");
        if (mode=="copy") {
          Tonyu.globals.$panel.setFillStyle("red");
        } else {
          Tonyu.globals.$panel.setFillStyle("black");
        }
        Tonyu.globals.$panel.fillText("copy",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-30,35,"center");
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillText(_this.selectedLayer,Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-110,35,"center");
        Tonyu.globals.$panel.fillText("save",Tonyu.globals.$screenWidth-60,Tonyu.globals.$screenHeight-110,40,"center");
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"getCurFileName":{"nowait":false},"st":{"nowait":false},"save":{"nowait":false},"inRect":{"nowait":false},"drawPanel":{"nowait":false},"drawLetter":{"nowait":false}},"fields":{"i":{},"j":{},"loadMode":{},"fileExist":{},"modified":{},"fileList":{},"fileName":{},"mapDataFile":{},"baseData":{},"loadedFile":{},"mapData":{},"mapOnData":{},"chipWidth":{},"chipHeight":{},"row":{},"col":{},"panel":{},"mIW":{},"mIH":{},"mCW":{},"mCH":{},"counter":{},"mode":{},"prevMode":{},"mapp":{},"maponp":{},"mx":{},"my":{},"chipX":{},"chipY":{},"initialWidth":{},"initialHeight":{},"layers":{},"lc":{},"selectedLayer":{},"saveFileName":{},"tmpon":{},"saveDataFile":{},"data":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MapEditorOLD',
  shortName: 'MapEditorOLD',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MapEditorOLD_main() {
        "use strict";
        var _this=this;
        
        _this.loadMode=false;
        _this.print("Load Data?: Y or N");
        while (true) {
          if (_this.getkey("y")>0) {
            _this.loadMode=true;
            break;
            
            
          }
          if (_this.getkey("n")>0) {
            _this.loadMode=false;
            break;
            
            
          }
          _this.update();
          
        }
        if (_this.loadMode) {
          _this.fileName=prompt("Input json file (*.json)","map.json");
          if (_this.fileName) {
            _this.mapDataFile=_this.file("../maps/").rel(_this.fileName);
            
          }
          if (_this.mapDataFile.obj()) {
            _this.baseData=_this.mapDataFile.obj();
            
          } else {
            _this.mapDataFile=_this.file(_this.fileName);
            if (_this.mapDataFile.obj()) {
              _this.baseData=_this.mapDataFile.obj();
              
            }
            
          }
          if (_this.baseData==undefined) {
            _this.print("Load failed");
            _this.loadMode=false;
            
          } else {
            if (_this.baseData[0]&&_this.baseData[1]) {
              _this.mapData=_this.baseData[0];
              _this.mapOnData=_this.baseData[1];
              
            }
          }
          
        }
        _this.update();
        if (! _this.loadMode) {
          _this.row=prompt("input row");
          _this.update();
          _this.col=prompt("input col");
          _this.panel=new Tonyu.classes.kernel.Panel({width: _this.col*32,height: _this.row*32});
          _this.panel.x=_this.panel.width/2+10;
          _this.panel.y=_this.panel.height/2;
          _this.panel.setFillStyle("cyan");
          _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
          Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.row,col: _this.col,chipWidth: 32,chipHeight: 32});
          
        } else {
          if (! _this.mapOnData) {
            Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.mapData.length,col: _this.mapData[0].length,chipWidth: 32,chipHeight: 32,mapData: _this.mapData});
            
          } else {
            Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.mapData.length,col: _this.mapData[0].length,chipWidth: 32,chipHeight: 32,mapData: _this.mapData,mapOnData: _this.mapOnData});
            
          }
          _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*32,height: Tonyu.globals.$map.row*32,zOrder: 100});
          _this.panel.x=_this.panel.width/2;
          _this.panel.y=_this.panel.height/2;
          _this.panel.setFillStyle("cyan");
          _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
          
        }
        Tonyu.globals.$mp=new Tonyu.classes.kernel.Map({row: 16,col: 8,chipWidth: 32,chipHeight: 32});
        _this.counter=0;
        _this.i = 0;
        for (; _this.i<16 ; _this.i++) {
          {
            _this.j = 0;
            for (; _this.j<8 ; _this.j++) {
              {
                Tonyu.globals.$mp.set(_this.j,_this.i,Tonyu.globals.$pat_mapchip+_this.counter);
                _this.counter++;
              }
            }
          }
        }
        _this.mode="get";
        _this.prevMode="set";
        _this.mapp=0;
        _this.mx=0;
        _this.my=0;
        _this.chipX=0;
        _this.chipY=0;
        _this.x=Tonyu.globals.$screenWidth-16;
        _this.y=Tonyu.globals.$screenHeight-16;
        while (true) {
          _this.p=_this.mapp;
          if (_this.getkey("e")==1) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="erase";
            _this.print(_this.mode+" mode");
            
          }
          if (_this.getkey("s")==1) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            if (_this.mode=="set") {
              _this.mode="setOn";
              
            } else {
              _this.mode="set";
              
            }
            _this.print(_this.mode+" mode");
            
          }
          if (_this.getkey("o")==1) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="setOn";
            
          }
          if (_this.getkey("g")==1) {
            if (_this.mode!="get") {
              _this.prevMode=_this.mode;
              Tonyu.globals.$mp.scrollTo(0,0);
              _this.mode="get";
              _this.chipX=0;
              _this.chipY=0;
              
            } else {
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.mode=_this.prevMode;
              
            }
            _this.print(_this.mode+" mode");
            
          }
          if (_this.getkey("p")==1) {
            _this.saveFileName=prompt("input json file(*.json)","map.json");
            _this.saveDataFile=_this.file("../maps/").rel(_this.saveFileName);
            _this.data=[Tonyu.globals.$map.mapTable,Tonyu.globals.$map.mapOnTable];
            _this.saveDataFile.obj(_this.data);
            _this.print(_this.saveFileName+" Saved");
            
          }
          if (_this.getkey("c")==1) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="spuit";
            _this.print(_this.mode+" mode");
            
          }
          if (_this.mode!="get") {
            if (_this.getkey("left")>0) {
              _this.mx=_this.mx+8;
            }
            if (_this.getkey("right")>0) {
              _this.mx=_this.mx-8;
            }
            if (_this.getkey("up")>0) {
              _this.my=_this.my+8;
            }
            if (_this.getkey("down")>0) {
              _this.my=_this.my-8;
            }
            Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
            
          } else {
            if (_this.getkey("left")>0) {
              _this.chipX=_this.chipX+8;
            }
            if (_this.getkey("right")>0) {
              _this.chipX=_this.chipX-8;
            }
            if (_this.getkey("up")>0) {
              _this.chipY=_this.chipY+8;
            }
            if (_this.getkey("down")>0) {
              _this.chipY=_this.chipY-8;
            }
            Tonyu.globals.$mp.scrollTo(_this.chipX,_this.chipY);
            
          }
          _this.panel.x=_this.panel.width/2-_this.mx;
          _this.panel.y=_this.panel.height/2-_this.my;
          if (_this.mode=="set"&&_this.getkey(1)>0) {
            Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
            Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
            
          } else {
            if (_this.mode=="erase"&&_this.getkey(1)>0) {
              Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
              
            } else {
              if (_this.mode=="get"&&_this.getkey(1)>0) {
                _this.mapp=Tonyu.globals.$mp.getAt(Tonyu.globals.$mouseX+_this.chipX,Tonyu.globals.$mouseY+_this.chipY);
                _this.mode=_this.prevMode;
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.print(_this.mode+" mode");
                _this.updateEx(10);
                
              } else {
                if (_this.mode=="setOn"&&_this.getkey(1)>0) {
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
                  
                } else {
                  if (_this.mode=="spuit"&&_this.getkey(1)>0) {
                    _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my);
                    _this.mode="set";
                    _this.print(_this.mode+" mode");
                    _this.updateEx(10);
                    
                  }
                }
              }
            }
          }
          _this.update();
          
        }
      },
      fiber$main :function _trc_MapEditorOLD_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.loadMode=false;
        _this.print("Load Data?: Y or N");
        
        _thread.enter(function _trc_MapEditorOLD_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(_this.getkey("y")>0)) { __pc=2     ; break; }
              _this.loadMode=true;
              __pc=5     ; break;
              
            case 2     :
              
              if (!(_this.getkey("n")>0)) { __pc=3     ; break; }
              _this.loadMode=false;
              __pc=5     ; break;
              
            case 3     :
              
              _this.fiber$update(_thread);
              __pc=4;return;
            case 4:
              
              __pc=1;break;
            case 5     :
              
              if (!(_this.loadMode)) { __pc=9     ; break; }
              _this.fileName=prompt("Input json file (*.json)","map.json");
              if (_this.fileName) {
                _this.mapDataFile=_this.file("../maps/").rel(_this.fileName);
                
              }
              if (!(_this.mapDataFile.obj())) { __pc=6     ; break; }
              {
                _this.baseData=_this.mapDataFile.obj();
              }
              __pc=8     ;break;
            case 6     :
              _this.fiber$file(_thread, _this.fileName);
              __pc=7;return;
            case 7:
              _this.mapDataFile=_thread.retVal;
              
              if (_this.mapDataFile.obj()) {
                _this.baseData=_this.mapDataFile.obj();
                
              }
            case 8     :
              
              if (_this.baseData==undefined) {
                _this.print("Load failed");
                _this.loadMode=false;
                
              } else {
                if (_this.baseData[0]&&_this.baseData[1]) {
                  _this.mapData=_this.baseData[0];
                  _this.mapOnData=_this.baseData[1];
                  
                }
              }
            case 9     :
              
              _this.fiber$update(_thread);
              __pc=10;return;
            case 10:
              
              if (!(! _this.loadMode)) { __pc=12    ; break; }
              _this.row=prompt("input row");
              _this.fiber$update(_thread);
              __pc=11;return;
            case 11:
              
              _this.col=prompt("input col");
              _this.panel=new Tonyu.classes.kernel.Panel({width: _this.col*32,height: _this.row*32});
              _this.panel.x=_this.panel.width/2+10;
              _this.panel.y=_this.panel.height/2;
              _this.panel.setFillStyle("cyan");
              _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
              Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.row,col: _this.col,chipWidth: 32,chipHeight: 32});
              __pc=13    ;break;
            case 12    :
              {
                if (! _this.mapOnData) {
                  Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.mapData.length,col: _this.mapData[0].length,chipWidth: 32,chipHeight: 32,mapData: _this.mapData});
                  
                } else {
                  Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.mapData.length,col: _this.mapData[0].length,chipWidth: 32,chipHeight: 32,mapData: _this.mapData,mapOnData: _this.mapOnData});
                  
                }
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*32,height: Tonyu.globals.$map.row*32,zOrder: 100});
                _this.panel.x=_this.panel.width/2;
                _this.panel.y=_this.panel.height/2;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
              }
            case 13    :
              
              Tonyu.globals.$mp=new Tonyu.classes.kernel.Map({row: 16,col: 8,chipWidth: 32,chipHeight: 32});
              _this.counter=0;
              _this.i = 0;
              for (; _this.i<16 ; _this.i++) {
                {
                  _this.j = 0;
                  for (; _this.j<8 ; _this.j++) {
                    {
                      Tonyu.globals.$mp.set(_this.j,_this.i,Tonyu.globals.$pat_mapchip+_this.counter);
                      _this.counter++;
                    }
                  }
                }
              }
              _this.mode="get";
              _this.prevMode="set";
              _this.mapp=0;
              _this.mx=0;
              _this.my=0;
              _this.chipX=0;
              _this.chipY=0;
              _this.x=Tonyu.globals.$screenWidth-16;
              _this.y=Tonyu.globals.$screenHeight-16;
            case 14:
              _this.p=_this.mapp;
              if (_this.getkey("e")==1) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="erase";
                _this.print(_this.mode+" mode");
                
              }
              if (_this.getkey("s")==1) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                if (_this.mode=="set") {
                  _this.mode="setOn";
                  
                } else {
                  _this.mode="set";
                  
                }
                _this.print(_this.mode+" mode");
                
              }
              if (_this.getkey("o")==1) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="setOn";
                
              }
              if (_this.getkey("g")==1) {
                if (_this.mode!="get") {
                  _this.prevMode=_this.mode;
                  Tonyu.globals.$mp.scrollTo(0,0);
                  _this.mode="get";
                  _this.chipX=0;
                  _this.chipY=0;
                  
                } else {
                  Tonyu.globals.$mp.scrollTo(1000,1000);
                  _this.mode=_this.prevMode;
                  
                }
                _this.print(_this.mode+" mode");
                
              }
              if (_this.getkey("p")==1) {
                _this.saveFileName=prompt("input json file(*.json)","map.json");
                _this.saveDataFile=_this.file("../maps/").rel(_this.saveFileName);
                _this.data=[Tonyu.globals.$map.mapTable,Tonyu.globals.$map.mapOnTable];
                _this.saveDataFile.obj(_this.data);
                _this.print(_this.saveFileName+" Saved");
                
              }
              if (_this.getkey("c")==1) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="spuit";
                _this.print(_this.mode+" mode");
                
              }
              if (_this.mode!="get") {
                if (_this.getkey("left")>0) {
                  _this.mx=_this.mx+8;
                }
                if (_this.getkey("right")>0) {
                  _this.mx=_this.mx-8;
                }
                if (_this.getkey("up")>0) {
                  _this.my=_this.my+8;
                }
                if (_this.getkey("down")>0) {
                  _this.my=_this.my-8;
                }
                Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
                
              } else {
                if (_this.getkey("left")>0) {
                  _this.chipX=_this.chipX+8;
                }
                if (_this.getkey("right")>0) {
                  _this.chipX=_this.chipX-8;
                }
                if (_this.getkey("up")>0) {
                  _this.chipY=_this.chipY+8;
                }
                if (_this.getkey("down")>0) {
                  _this.chipY=_this.chipY-8;
                }
                Tonyu.globals.$mp.scrollTo(_this.chipX,_this.chipY);
                
              }
              _this.panel.x=_this.panel.width/2-_this.mx;
              _this.panel.y=_this.panel.height/2-_this.my;
              if (!(_this.mode=="set"&&_this.getkey(1)>0)) { __pc=15    ; break; }
              {
                Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
              }
              __pc=25    ;break;
            case 15    :
              if (!(_this.mode=="erase"&&_this.getkey(1)>0)) { __pc=16    ; break; }
              {
                Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
              }
              __pc=24    ;break;
            case 16    :
              if (!(_this.mode=="get"&&_this.getkey(1)>0)) { __pc=18    ; break; }
              _this.mapp=Tonyu.globals.$mp.getAt(Tonyu.globals.$mouseX+_this.chipX,Tonyu.globals.$mouseY+_this.chipY);
              _this.mode=_this.prevMode;
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.print(_this.mode+" mode");
              _this.fiber$updateEx(_thread, 10);
              __pc=17;return;
            case 17:
              
              __pc=23    ;break;
            case 18    :
              if (!(_this.mode=="setOn"&&_this.getkey(1)>0)) { __pc=19    ; break; }
              {
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
              }
              __pc=22    ;break;
            case 19    :
              if (!(_this.mode=="spuit"&&_this.getkey(1)>0)) { __pc=21    ; break; }
              _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my);
              _this.mode="set";
              _this.print(_this.mode+" mode");
              _this.fiber$updateEx(_thread, 10);
              __pc=20;return;
            case 20:
              
            case 21    :
              
            case 22    :
              
            case 23    :
              
            case 24    :
              
            case 25    :
              
              _this.fiber$update(_thread);
              __pc=26;return;
            case 26:
              
              __pc=14;break;
            case 27    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false}},"fields":{"i":{},"j":{},"loadMode":{},"fileName":{},"mapDataFile":{},"baseData":{},"mapData":{},"mapOnData":{},"row":{},"col":{},"panel":{},"counter":{},"mode":{},"prevMode":{},"mapp":{},"mx":{},"my":{},"chipX":{},"chipY":{},"saveFileName":{},"saveDataFile":{},"data":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.MapEditorOLD2',
  shortName: 'MapEditorOLD2',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_MapEditorOLD2_main() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Screen.resize(480,640);
        _this.loadMode=false;
        _this.fileExist=false;
        _this.print("map file(s)");
        _this.fileList=_this.file("../maps/");
        if (_this.fileList.exists()) {
          _this.fileList.recursive((function a(f) {
            
            f=f+"";
            _this.fNames=f.split("/");
            _this.print(_this.fNames[_this.fNames.length-1]);
            _this.fileExist=true;
          }));
          
        }
        if (_this.fileExist) {
          _this.print("Load Data?: Y or N");
          while (true) {
            if (_this.getkey("y")>0) {
              _this.loadMode=true;
              break;
              
              
            }
            if (_this.getkey("n")>0) {
              _this.loadMode=false;
              break;
              
              
            }
            _this.update();
            
          }
          if (_this.loadMode) {
            _this.fileName=prompt("Input json file (*.json)","map.json");
            if (_this.fileName) {
              _this.mapDataFile=_this.file("../maps/").rel(_this.fileName);
              
            }
            if (_this.mapDataFile.obj()) {
              _this.baseData=_this.mapDataFile.obj();
              _this.loadedFile=_this.fileName;
              
            } else {
              _this.mapDataFile=_this.file(_this.fileName);
              if (_this.mapDataFile.obj()) {
                _this.baseData=_this.mapDataFile.obj();
                _this.loadedFile=_this.fileName;
                
              }
              
            }
            if (_this.baseData==undefined) {
              _this.print("Load failed");
              _this.loadMode=false;
              
            } else {
              if (_this.baseData[0]&&_this.baseData[1]) {
                _this.mapData=_this.baseData[0];
                _this.mapOnData=_this.baseData[1];
                if (_this.baseData.length>2) {
                  _this.chipWidth=_this.baseData[_this.baseData.length-2];
                  _this.chipHeight=_this.baseData[_this.baseData.length-1];
                  
                }
                
              }
            }
            
          }
          
        }
        _this.update();
        if (! _this.loadMode) {
          _this.row=prompt("input row");
          _this.col=prompt("input col");
          _this.chipWidth=prompt("input chipWidth");
          _this.chipHeight=prompt("input chipHeight");
          _this.panel=new Tonyu.classes.kernel.Panel({width: _this.col*_this.chipWidth,height: _this.row*_this.chipHeight});
          _this.panel.x=_this.panel.width/2+40;
          _this.panel.y=_this.panel.height/2+40;
          _this.panel.setFillStyle("cyan");
          _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
          Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.row,col: _this.col,chipWidth: _this.chipWidth,chipHeight: _this.chipHeight});
          
        } else {
          Tonyu.globals.$map=new Tonyu.classes.kernel.Map({chipWidth: 32,chipHeight: 32});
          Tonyu.globals.$map.load(_this.fileName);
          _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
          _this.panel.x=_this.panel.width/2+40;
          _this.panel.y=_this.panel.height/2+40;
          _this.panel.setFillStyle("cyan");
          _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
          
        }
        _this.mIW=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip].image.width;
        _this.mIH=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip].image.height;
        _this.mCW=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip+0].width;
        _this.mCH=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip+0].height;
        Tonyu.globals.$mp=new Tonyu.classes.kernel.Map({row: _this.floor(_this.mIH/_this.mCH),col: _this.floor(_this.mIW/_this.mCW),chipWidth: _this.mCW,chipHeight: _this.mCH});
        _this.counter=0;
        _this.i = 0;
        for (; _this.i<Tonyu.globals.$mp.row ; _this.i++) {
          {
            _this.j = 0;
            for (; _this.j<Tonyu.globals.$mp.col ; _this.j++) {
              {
                Tonyu.globals.$mp.set(_this.j,_this.i,Tonyu.globals.$pat_mapchip+_this.counter);
                _this.counter++;
              }
            }
          }
        }
        _this.drawPanel();
        _this.mode="get";
        _this.prevMode="set";
        _this.mapp=0;
        _this.mx=- 40;
        _this.my=- 40;
        _this.chipX=- 40;
        _this.chipY=- 40;
        _this.x=Tonyu.globals.$screenWidth-_this.chipWidth/2;
        _this.y=Tonyu.globals.$screenHeight-_this.chipHeight/2;
        Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
        while (true) {
          _this.p=_this.mapp;
          if (_this.getkey("e")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640)) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="erase";
            _this.print(_this.mode+" mode");
            
          }
          if (_this.getkey("s")==1) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            if (_this.mode=="set") {
              _this.mode="setOn";
              
            } else {
              _this.mode="set";
              
            }
            _this.print(_this.mode+" mode");
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="set";
            _this.print(_this.mode+" mode");
            
          }
          if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="setOn";
            _this.print(_this.mode+" mode");
            
          }
          if (_this.getkey("g")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>240&&Tonyu.globals.$touches[0].x<360&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) {
            if (_this.mode!="get") {
              _this.prevMode=_this.mode;
              Tonyu.globals.$mp.scrollTo(- 40,- 40);
              _this.mode="get";
              _this.chipX=- 40;
              _this.chipY=- 40;
              
            } else {
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.mode=_this.prevMode;
              
            }
            _this.print(_this.mode+" mode");
            
          }
          if (_this.getkey("p")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>360&&Tonyu.globals.$touches[0].x<480&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) {
            if (_this.loadedFile) {
              _this.saveFileName=prompt("input json file(*.json)",_this.loadedFile);
              
            } else {
              _this.saveFileName=prompt("input json file(*.json)","map.json");
              
            }
            if (_this.saveFileName) {
              _this.saveDataFile=_this.file("../maps/").rel(_this.saveFileName);
              _this.data=[Tonyu.globals.$map.mapTable,Tonyu.globals.$map.mapOnTable,Tonyu.globals.$map.chipWidth,Tonyu.globals.$map.chipHeight];
              _this.saveDataFile.obj(_this.data);
              _this.print(_this.saveFileName+" Saved");
              
            }
            
          }
          if (_this.getkey("c")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640)) {
            Tonyu.globals.$mp.scrollTo(1000,1000);
            _this.mode="copy";
            _this.print(_this.mode+" mode");
            
          }
          if (_this.mode!="get") {
            if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
              _this.mx=_this.mx+8;
            }
            if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
              _this.mx=_this.mx-8;
            }
            if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
              _this.my=_this.my+8;
            }
            if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
              _this.my=_this.my-8;
            }
            Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
            
          } else {
            if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
              _this.chipX=_this.chipX+8;
            }
            if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
              _this.chipX=_this.chipX-8;
            }
            if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
              _this.chipY=_this.chipY+8;
            }
            if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
              _this.chipY=_this.chipY-8;
            }
            Tonyu.globals.$mp.scrollTo(_this.chipX,_this.chipY);
            
          }
          if (_this.getkey("i")==1) {
            Tonyu.globals.$map.chipWidth+=4;
            Tonyu.globals.$map.chipHeight+=4;
            Tonyu.globals.$map.redrawMap();
            _this.panel.die();
            _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
            _this.panel.x=_this.panel.width/2+40;
            _this.panel.y=_this.panel.height/2+40;
            _this.panel.setFillStyle("cyan");
            _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
            
          }
          if (_this.getkey("o")==1) {
            Tonyu.globals.$map.chipWidth-=4;
            Tonyu.globals.$map.chipHeight-=4;
            Tonyu.globals.$map.redrawMap();
            _this.panel.die();
            _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
            _this.panel.x=_this.panel.width/2+40;
            _this.panel.y=_this.panel.height/2+40;
            _this.panel.setFillStyle("cyan");
            _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
            
          }
          _this.panel.x=_this.panel.width/2-_this.mx;
          _this.panel.y=_this.panel.height/2-_this.my;
          if (_this.mode=="set"&&_this.getkey(1)>0&&_this.inRect()) {
            Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
            Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
            
          } else {
            if (_this.mode=="erase"&&_this.getkey(1)>0&&_this.inRect()) {
              Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
              
            } else {
              if (_this.mode=="get"&&_this.getkey(1)>0&&_this.inRect()) {
                _this.mapp=Tonyu.globals.$mp.getAt(Tonyu.globals.$mouseX+_this.chipX,Tonyu.globals.$mouseY+_this.chipY);
                _this.mode=_this.prevMode;
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.print(_this.mode+" mode");
                _this.updateEx(10);
                
              } else {
                if (_this.mode=="setOn"&&_this.getkey(1)>0&&_this.inRect()) {
                  Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
                  
                } else {
                  if (_this.mode=="copy"&&_this.getkey(1)>0&&_this.inRect()) {
                    _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my);
                    _this.mode="set";
                    _this.print(_this.mode+" mode");
                    _this.updateEx(10);
                    
                  }
                }
              }
            }
          }
          _this.update();
          
        }
      },
      fiber$main :function _trc_MapEditorOLD2_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$Screen.resize(480,640);
        _this.loadMode=false;
        _this.fileExist=false;
        _this.print("map file(s)");
        
        _thread.enter(function _trc_MapEditorOLD2_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$file(_thread, "../maps/");
              __pc=1;return;
            case 1:
              _this.fileList=_thread.retVal;
              
              if (_this.fileList.exists()) {
                _this.fileList.recursive((function a(f) {
                  
                  f=f+"";
                  _this.fNames=f.split("/");
                  _this.print(_this.fNames[_this.fNames.length-1]);
                  _this.fileExist=true;
                }));
                
              }
              if (!(_this.fileExist)) { __pc=11    ; break; }
              _this.print("Load Data?: Y or N");
            case 2:
              if (!(_this.getkey("y")>0)) { __pc=3     ; break; }
              _this.loadMode=true;
              __pc=6     ; break;
              
            case 3     :
              
              if (!(_this.getkey("n")>0)) { __pc=4     ; break; }
              _this.loadMode=false;
              __pc=6     ; break;
              
            case 4     :
              
              _this.fiber$update(_thread);
              __pc=5;return;
            case 5:
              
              __pc=2;break;
            case 6     :
              
              if (!(_this.loadMode)) { __pc=10    ; break; }
              _this.fileName=prompt("Input json file (*.json)","map.json");
              if (_this.fileName) {
                _this.mapDataFile=_this.file("../maps/").rel(_this.fileName);
                
              }
              if (!(_this.mapDataFile.obj())) { __pc=7     ; break; }
              {
                _this.baseData=_this.mapDataFile.obj();
                _this.loadedFile=_this.fileName;
              }
              __pc=9     ;break;
            case 7     :
              _this.fiber$file(_thread, _this.fileName);
              __pc=8;return;
            case 8:
              _this.mapDataFile=_thread.retVal;
              
              if (_this.mapDataFile.obj()) {
                _this.baseData=_this.mapDataFile.obj();
                _this.loadedFile=_this.fileName;
                
              }
            case 9     :
              
              if (_this.baseData==undefined) {
                _this.print("Load failed");
                _this.loadMode=false;
                
              } else {
                if (_this.baseData[0]&&_this.baseData[1]) {
                  _this.mapData=_this.baseData[0];
                  _this.mapOnData=_this.baseData[1];
                  if (_this.baseData.length>2) {
                    _this.chipWidth=_this.baseData[_this.baseData.length-2];
                    _this.chipHeight=_this.baseData[_this.baseData.length-1];
                    
                  }
                  
                }
              }
            case 10    :
              
            case 11    :
              
              _this.fiber$update(_thread);
              __pc=12;return;
            case 12:
              
              if (! _this.loadMode) {
                _this.row=prompt("input row");
                _this.col=prompt("input col");
                _this.chipWidth=prompt("input chipWidth");
                _this.chipHeight=prompt("input chipHeight");
                _this.panel=new Tonyu.classes.kernel.Panel({width: _this.col*_this.chipWidth,height: _this.row*_this.chipHeight});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
                Tonyu.globals.$map=new Tonyu.classes.kernel.Map({row: _this.row,col: _this.col,chipWidth: _this.chipWidth,chipHeight: _this.chipHeight});
                
              } else {
                Tonyu.globals.$map=new Tonyu.classes.kernel.Map({chipWidth: 32,chipHeight: 32});
                Tonyu.globals.$map.load(_this.fileName);
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
                
              }
              _this.mIW=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip].image.width;
              _this.mIH=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip].image.height;
              _this.mCW=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip+0].width;
              _this.mCH=Tonyu.globals.$Sprites.getImageList()[Tonyu.globals.$pat_mapchip+0].height;
              Tonyu.globals.$mp=new Tonyu.classes.kernel.Map({row: _this.floor(_this.mIH/_this.mCH),col: _this.floor(_this.mIW/_this.mCW),chipWidth: _this.mCW,chipHeight: _this.mCH});
              _this.counter=0;
              _this.i = 0;
              for (; _this.i<Tonyu.globals.$mp.row ; _this.i++) {
                {
                  _this.j = 0;
                  for (; _this.j<Tonyu.globals.$mp.col ; _this.j++) {
                    {
                      Tonyu.globals.$mp.set(_this.j,_this.i,Tonyu.globals.$pat_mapchip+_this.counter);
                      _this.counter++;
                    }
                  }
                }
              }
              _this.fiber$drawPanel(_thread);
              __pc=13;return;
            case 13:
              
              _this.mode="get";
              _this.prevMode="set";
              _this.mapp=0;
              _this.mx=- 40;
              _this.my=- 40;
              _this.chipX=- 40;
              _this.chipY=- 40;
              _this.x=Tonyu.globals.$screenWidth-_this.chipWidth/2;
              _this.y=Tonyu.globals.$screenHeight-_this.chipHeight/2;
              Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
            case 14:
              _this.p=_this.mapp;
              if (_this.getkey("e")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640)) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="erase";
                _this.print(_this.mode+" mode");
                
              }
              if (_this.getkey("s")==1) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                if (_this.mode=="set") {
                  _this.mode="setOn";
                  
                } else {
                  _this.mode="set";
                  
                }
                _this.print(_this.mode+" mode");
                
              }
              if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<120&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="set";
                _this.print(_this.mode+" mode");
                
              }
              if (Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="setOn";
                _this.print(_this.mode+" mode");
                
              }
              if (_this.getkey("g")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>240&&Tonyu.globals.$touches[0].x<360&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) {
                if (_this.mode!="get") {
                  _this.prevMode=_this.mode;
                  Tonyu.globals.$mp.scrollTo(- 40,- 40);
                  _this.mode="get";
                  _this.chipX=- 40;
                  _this.chipY=- 40;
                  
                } else {
                  Tonyu.globals.$mp.scrollTo(1000,1000);
                  _this.mode=_this.prevMode;
                  
                }
                _this.print(_this.mode+" mode");
                
              }
              if (_this.getkey("p")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>360&&Tonyu.globals.$touches[0].x<480&&Tonyu.globals.$touches[0].y>480&&Tonyu.globals.$touches[0].y<560)) {
                if (_this.loadedFile) {
                  _this.saveFileName=prompt("input json file(*.json)",_this.loadedFile);
                  
                } else {
                  _this.saveFileName=prompt("input json file(*.json)","map.json");
                  
                }
                if (_this.saveFileName) {
                  _this.saveDataFile=_this.file("../maps/").rel(_this.saveFileName);
                  _this.data=[Tonyu.globals.$map.mapTable,Tonyu.globals.$map.mapOnTable,Tonyu.globals.$map.chipWidth,Tonyu.globals.$map.chipHeight];
                  _this.saveDataFile.obj(_this.data);
                  _this.print(_this.saveFileName+" Saved");
                  
                }
                
              }
              if (_this.getkey("c")==1||(Tonyu.globals.$touches[0].touched==1&&Tonyu.globals.$touches[0].x>120&&Tonyu.globals.$touches[0].x<240&&Tonyu.globals.$touches[0].y>560&&Tonyu.globals.$touches[0].y<640)) {
                Tonyu.globals.$mp.scrollTo(1000,1000);
                _this.mode="copy";
                _this.print(_this.mode+" mode");
                
              }
              if (_this.mode!="get") {
                if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
                  _this.mx=_this.mx+8;
                }
                if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
                  _this.mx=_this.mx-8;
                }
                if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
                  _this.my=_this.my+8;
                }
                if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
                  _this.my=_this.my-8;
                }
                Tonyu.globals.$map.scrollTo(_this.mx,_this.my);
                
              } else {
                if (_this.getkey("left")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<40&&Tonyu.globals.$touches[0].y<480)) {
                  _this.chipX=_this.chipX+8;
                }
                if (_this.getkey("right")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>Tonyu.globals.$screenWidth-40&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480)) {
                  _this.chipX=_this.chipX-8;
                }
                if (_this.getkey("up")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<40)) {
                  _this.chipY=_this.chipY+8;
                }
                if (_this.getkey("down")>0||(Tonyu.globals.$touches[0].touched&&Tonyu.globals.$touches[0].x>0&&Tonyu.globals.$touches[0].x<Tonyu.globals.$screenWidth&&Tonyu.globals.$touches[0].y<480&&Tonyu.globals.$touches[0].y>440)) {
                  _this.chipY=_this.chipY-8;
                }
                Tonyu.globals.$mp.scrollTo(_this.chipX,_this.chipY);
                
              }
              if (_this.getkey("i")==1) {
                Tonyu.globals.$map.chipWidth+=4;
                Tonyu.globals.$map.chipHeight+=4;
                Tonyu.globals.$map.redrawMap();
                _this.panel.die();
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
                
              }
              if (_this.getkey("o")==1) {
                Tonyu.globals.$map.chipWidth-=4;
                Tonyu.globals.$map.chipHeight-=4;
                Tonyu.globals.$map.redrawMap();
                _this.panel.die();
                _this.panel=new Tonyu.classes.kernel.Panel({width: Tonyu.globals.$map.col*Tonyu.globals.$map.chipWidth,height: Tonyu.globals.$map.row*Tonyu.globals.$map.chipHeight,zOrder: 100});
                _this.panel.x=_this.panel.width/2+40;
                _this.panel.y=_this.panel.height/2+40;
                _this.panel.setFillStyle("cyan");
                _this.panel.fillRect(0,0,_this.panel.width,_this.panel.height);
                
              }
              _this.panel.x=_this.panel.width/2-_this.mx;
              _this.panel.y=_this.panel.height/2-_this.my;
              if (!(_this.mode=="set"&&_this.getkey(1)>0&&_this.inRect())) { __pc=15    ; break; }
              {
                Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
              }
              __pc=25    ;break;
            case 15    :
              if (!(_this.mode=="erase"&&_this.getkey(1)>0&&_this.inRect())) { __pc=16    ; break; }
              {
                Tonyu.globals.$map.setAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,- 1);
              }
              __pc=24    ;break;
            case 16    :
              if (!(_this.mode=="get"&&_this.getkey(1)>0&&_this.inRect())) { __pc=18    ; break; }
              _this.mapp=Tonyu.globals.$mp.getAt(Tonyu.globals.$mouseX+_this.chipX,Tonyu.globals.$mouseY+_this.chipY);
              _this.mode=_this.prevMode;
              Tonyu.globals.$mp.scrollTo(1000,1000);
              _this.print(_this.mode+" mode");
              _this.fiber$updateEx(_thread, 10);
              __pc=17;return;
            case 17:
              
              __pc=23    ;break;
            case 18    :
              if (!(_this.mode=="setOn"&&_this.getkey(1)>0&&_this.inRect())) { __pc=19    ; break; }
              {
                Tonyu.globals.$map.setOnAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my,_this.mapp);
              }
              __pc=22    ;break;
            case 19    :
              if (!(_this.mode=="copy"&&_this.getkey(1)>0&&_this.inRect())) { __pc=21    ; break; }
              _this.mapp=Tonyu.globals.$map.getAt(Tonyu.globals.$mouseX+_this.mx,Tonyu.globals.$mouseY+_this.my);
              _this.mode="set";
              _this.print(_this.mode+" mode");
              _this.fiber$updateEx(_thread, 10);
              __pc=20;return;
            case 20:
              
            case 21    :
              
            case 22    :
              
            case 23    :
              
            case 24    :
              
            case 25    :
              
              _this.fiber$update(_thread);
              __pc=26;return;
            case 26:
              
              __pc=14;break;
            case 27    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      inRect :function _trc_MapEditorOLD2_inRect() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$mouseX>40&&Tonyu.globals.$mouseX<Tonyu.globals.$screenWidth-40&&Tonyu.globals.$mouseY>40&&Tonyu.globals.$mouseY<Tonyu.globals.$screenHeight-200;
      },
      fiber$inRect :function _trc_MapEditorOLD2_f_inRect(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Tonyu.globals.$mouseX>40&&Tonyu.globals.$mouseX<Tonyu.globals.$screenWidth-40&&Tonyu.globals.$mouseY>40&&Tonyu.globals.$mouseY<Tonyu.globals.$screenHeight-200;return;
        
        
        _thread.retVal=_this;return;
      },
      drawPanel :function _trc_MapEditorOLD2_drawPanel() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$panel.setFillStyle("gray");
        Tonyu.globals.$panel.alpha=128;
        Tonyu.globals.$panel.fillRect(0,0,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.fillRect(0,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(Tonyu.globals.$screenWidth-40,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-200,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.alpha=255;
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(240,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(360,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.setFillStyle("white");
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(250,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(370,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillText("↑",Tonyu.globals.$screenWidth/2,30,40,"center");
        Tonyu.globals.$panel.fillText("←",20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("↓",Tonyu.globals.$screenWidth/2,Tonyu.globals.$screenHeight-160-10,40,"center");
        Tonyu.globals.$panel.fillText("→",Tonyu.globals.$screenWidth-20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("set",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("setOn",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-110,35,"center");
        Tonyu.globals.$panel.fillText("get",Tonyu.globals.$screenWidth/2+60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("save",Tonyu.globals.$screenWidth-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("erase",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-30,35,"center");
        Tonyu.globals.$panel.fillText("copy",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-30,35,"center");
      },
      fiber$drawPanel :function _trc_MapEditorOLD2_f_drawPanel(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$panel.setFillStyle("gray");
        Tonyu.globals.$panel.alpha=128;
        Tonyu.globals.$panel.fillRect(0,0,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.fillRect(0,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(Tonyu.globals.$screenWidth-40,0,40,Tonyu.globals.$screenHeight-160);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-200,Tonyu.globals.$screenWidth,40);
        Tonyu.globals.$panel.alpha=255;
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(240,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(360,Tonyu.globals.$screenHeight-160,120,80);
        Tonyu.globals.$panel.fillRect(0,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.fillRect(120,Tonyu.globals.$screenHeight-80,120,80);
        Tonyu.globals.$panel.setFillStyle("white");
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(250,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(370,Tonyu.globals.$screenHeight-150,100,60);
        Tonyu.globals.$panel.fillRect(10,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.fillRect(130,Tonyu.globals.$screenHeight-70,100,60);
        Tonyu.globals.$panel.setFillStyle("black");
        Tonyu.globals.$panel.fillText("↑",Tonyu.globals.$screenWidth/2,30,40,"center");
        Tonyu.globals.$panel.fillText("←",20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("↓",Tonyu.globals.$screenWidth/2,Tonyu.globals.$screenHeight-160-10,40,"center");
        Tonyu.globals.$panel.fillText("→",Tonyu.globals.$screenWidth-20,(Tonyu.globals.$screenHeight-200)/2,40,"center");
        Tonyu.globals.$panel.fillText("set",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("setOn",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-110,35,"center");
        Tonyu.globals.$panel.fillText("get",Tonyu.globals.$screenWidth/2+60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("save",Tonyu.globals.$screenWidth-60,Tonyu.globals.$screenHeight-110,40,"center");
        Tonyu.globals.$panel.fillText("erase",Tonyu.globals.$screenWidth/4-60,Tonyu.globals.$screenHeight-30,35,"center");
        Tonyu.globals.$panel.fillText("copy",Tonyu.globals.$screenWidth/4+60,Tonyu.globals.$screenHeight-30,35,"center");
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"inRect":{"nowait":false},"drawPanel":{"nowait":false}},"fields":{"i":{},"j":{},"loadMode":{},"fileExist":{},"fileList":{},"fNames":{},"fileName":{},"mapDataFile":{},"baseData":{},"loadedFile":{},"mapData":{},"mapOnData":{},"chipWidth":{},"chipHeight":{},"row":{},"col":{},"panel":{},"mIW":{},"mIH":{},"mCW":{},"mCH":{},"counter":{},"mode":{},"prevMode":{},"mapp":{},"mx":{},"my":{},"chipX":{},"chipY":{},"saveFileName":{},"saveDataFile":{},"data":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Pad',
  shortName: 'Pad',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_Pad_main() {
        "use strict";
        var _this=this;
        
        while (true) {
          _this.padUpdate();
          _this.update();
          
        }
      },
      fiber$main :function _trc_Pad_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              _this.fiber$update(_thread);
              __pc=3;return;
            case 3:
              
              __pc=1;break;
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initialize :function _trc_Pad_initialize(opt) {
        "use strict";
        var _this=this;
        
        opt=opt||{};
        __superClass.apply( _this, [opt]);
        if (! _this.buttonCnt&&(_this.version==null||_this.version==1)&&Tonyu.globals.$pat_inputPad!=undefined) {
          _this.version=1;
          
        } else {
          _this.version=2;
          
        }
        if (_this.version==1) {
          _this.newPadV1(opt);
          
        } else {
          _this.newPadV2(opt);
          
        }
        if (_this.active==null) {
          _this.active=true;
        }
        if (_this.active) {
          _this.activate(opt);
          
        }
      },
      activate :function _trc_Pad_activate(opt) {
        "use strict";
        var _this=this;
        
        if (opt) {
          if (opt.buttonCnt) {
            _this.buttonCnt=opt.buttonCnt;
            _this.drawPanel();
            _this.setXYPanel();
            
          }
          
        }
        _this.active=true;
        if (! _this.actived) {
          _this.actived=true;
          
        }
      },
      fiber$activate :function _trc_Pad_f_activate(_thread,opt) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_activate(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(opt)) { __pc=4     ; break; }
              if (!(opt.buttonCnt)) { __pc=3     ; break; }
              _this.buttonCnt=opt.buttonCnt;
              _this.fiber$drawPanel(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$setXYPanel(_thread);
              __pc=2;return;
            case 2:
              
            case 3     :
              
            case 4     :
              
              _this.active=true;
              if (! _this.actived) {
                _this.actived=true;
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      newPadV2 :function _trc_Pad_newPadV2(opt) {
        "use strict";
        var _this=this;
        
        _this.died=false;
        if (_this.layout==null) {
          _this.layout=1;
        }
        if (_this.buttonCnt==null) {
          _this.buttonCnt=1;
        }
        if (_this.autoMove==null) {
          _this.autoMove=true;
        }
        if (opt.layer==null) {
          _this.layer=Tonyu.globals.$frontLayer;
        }
        _this.initButton();
      },
      fiber$newPadV2 :function _trc_Pad_f_newPadV2(_thread,opt) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.died=false;
        if (_this.layout==null) {
          _this.layout=1;
        }
        if (_this.buttonCnt==null) {
          _this.buttonCnt=1;
        }
        if (_this.autoMove==null) {
          _this.autoMove=true;
        }
        if (opt.layer==null) {
          _this.layer=Tonyu.globals.$frontLayer;
        }
        
        _thread.enter(function _trc_Pad_ent_newPadV2(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$initButton(_thread);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      newPadV1 :function _trc_Pad_newPadV1(opt) {
        "use strict";
        var _this=this;
        
        _this.APAD_DIAG_SIZE=96;
        _this.died=false;
        _this.padImageP=Tonyu.globals.$pat_inputPad;
        _this.padUpdateFrame=- 1;
        if (opt.layer==null) {
          _this.layer=Tonyu.globals.$frontLayer;
        }
        _this.jujiKey=new Tonyu.classes.kernel.Actor({x: 96+1,y: Tonyu.globals.$screenHeight-96-1,p: _this.padImageP+0,zOrder: - 9,layer: _this.layer});
        _this.no1Key=new Tonyu.classes.kernel.Actor({x: Tonyu.globals.$screenWidth-96,y: Tonyu.globals.$screenHeight-96,p: _this.padImageP+1,zOrder: - 9,layer: _this.layer});
        _this.jujiKey.show();
        _this.no1Key.show();
        _this.jujiKeyPushU=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x,y: _this.jujiKey.y-60,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushL=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x-60,y: _this.jujiKey.y,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushR=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x+60,y: _this.jujiKey.y,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushD=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x,y: _this.jujiKey.y+60,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPush1=new Tonyu.classes.kernel.Actor({x: _this.no1Key.x,y: _this.no1Key.y,p: _this.padImageP+2,scaleX: 2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushU.hide();
        _this.jujiKeyPushL.hide();
        _this.jujiKeyPushR.hide();
        _this.jujiKeyPushD.hide();
        _this.jujiKeyPush1.hide();
      },
      fiber$newPadV1 :function _trc_Pad_f_newPadV1(_thread,opt) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.APAD_DIAG_SIZE=96;
        _this.died=false;
        _this.padImageP=Tonyu.globals.$pat_inputPad;
        _this.padUpdateFrame=- 1;
        if (opt.layer==null) {
          _this.layer=Tonyu.globals.$frontLayer;
        }
        _this.jujiKey=new Tonyu.classes.kernel.Actor({x: 96+1,y: Tonyu.globals.$screenHeight-96-1,p: _this.padImageP+0,zOrder: - 9,layer: _this.layer});
        _this.no1Key=new Tonyu.classes.kernel.Actor({x: Tonyu.globals.$screenWidth-96,y: Tonyu.globals.$screenHeight-96,p: _this.padImageP+1,zOrder: - 9,layer: _this.layer});
        _this.jujiKey.show();
        _this.no1Key.show();
        _this.jujiKeyPushU=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x,y: _this.jujiKey.y-60,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushL=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x-60,y: _this.jujiKey.y,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushR=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x+60,y: _this.jujiKey.y,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushD=new Tonyu.classes.kernel.Actor({x: _this.jujiKey.x,y: _this.jujiKey.y+60,p: _this.padImageP+2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPush1=new Tonyu.classes.kernel.Actor({x: _this.no1Key.x,y: _this.no1Key.y,p: _this.padImageP+2,scaleX: 2,zOrder: - 10,layer: _this.layer});
        _this.jujiKeyPushU.hide();
        _this.jujiKeyPushL.hide();
        _this.jujiKeyPushR.hide();
        _this.jujiKeyPushD.hide();
        _this.jujiKeyPush1.hide();
        
        _thread.retVal=_this;return;
      },
      die :function _trc_Pad_die() {
        "use strict";
        var _this=this;
        
        if (_this.version==1) {
          _this.dieV1();
          
        } else {
          _this.dieV2();
          
        }
        __superClass.prototype.die.apply( _this, []);
      },
      dieV2 :function _trc_Pad_dieV2() {
        "use strict";
        var _this=this;
        var i;
        var obj;
        
        _this.died=true;
        if (_this.buttons!=null) {
          i = 0;
          for (; i<_this.buttons.length ; i++) {
            {
              obj = _this.buttons[i];
              
              if (obj) {
                obj.die();
                _this.buttons[i]=null;
                
              }
            }
          }
          _this.buttons=null;
          
        }
        if (_this.jujiPads!=null) {
          i = 0;
          for (; i<_this.jujiPads.length ; i++) {
            {
              obj = _this.jujiPads[i];
              
              if (obj) {
                obj.die();
                _this.jujiPads[i]=null;
                
              }
            }
          }
          _this.jujiPads=null;
          
        }
      },
      fiber$dieV2 :function _trc_Pad_f_dieV2(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var obj;
        
        _this.died=true;
        if (_this.buttons!=null) {
          i = 0;
          for (; i<_this.buttons.length ; i++) {
            {
              obj = _this.buttons[i];
              
              if (obj) {
                obj.die();
                _this.buttons[i]=null;
                
              }
            }
          }
          _this.buttons=null;
          
        }
        if (_this.jujiPads!=null) {
          i = 0;
          for (; i<_this.jujiPads.length ; i++) {
            {
              obj = _this.jujiPads[i];
              
              if (obj) {
                obj.die();
                _this.jujiPads[i]=null;
                
              }
            }
          }
          _this.jujiPads=null;
          
        }
        
        _thread.retVal=_this;return;
      },
      dieV1 :function _trc_Pad_dieV1() {
        "use strict";
        var _this=this;
        
        _this.died=true;
        _this.jujiKey.die();
        _this.no1Key.die();
        _this.jujiKeyPushU.show();
        _this.jujiKeyPushU.die();
        _this.jujiKeyPushL.show();
        _this.jujiKeyPushL.die();
        _this.jujiKeyPushR.show();
        _this.jujiKeyPushR.die();
        _this.jujiKeyPushD.show();
        _this.jujiKeyPushD.die();
        _this.jujiKeyPush1.show();
        _this.jujiKeyPush1.die();
      },
      fiber$dieV1 :function _trc_Pad_f_dieV1(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.died=true;
        _this.jujiKey.die();
        _this.no1Key.die();
        _this.jujiKeyPushU.show();
        _this.jujiKeyPushU.die();
        _this.jujiKeyPushL.show();
        _this.jujiKeyPushL.die();
        _this.jujiKeyPushR.show();
        _this.jujiKeyPushR.die();
        _this.jujiKeyPushD.show();
        _this.jujiKeyPushD.die();
        _this.jujiKeyPush1.show();
        _this.jujiKeyPush1.die();
        
        _thread.retVal=_this;return;
      },
      initButton :function _trc_Pad_initButton() {
        "use strict";
        var _this=this;
        
        _this.DEFALT_SCREEN_WIDTH=465;
        _this.p=- 1;
        _this.jujiPads=[];
        _this.buttons=[];
        _this.padScaleX=1;
        _this.padUpdateFrame=- 1;
        if (_this.layout==1) {
          _this.initButtonLayout1();
          _this.setXYPanelLayout1();
          
        }
      },
      fiber$initButton :function _trc_Pad_f_initButton(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.DEFALT_SCREEN_WIDTH=465;
        _this.p=- 1;
        _this.jujiPads=[];
        _this.buttons=[];
        _this.padScaleX=1;
        _this.padUpdateFrame=- 1;
        
        _thread.enter(function _trc_Pad_ent_initButton(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.layout==1)) { __pc=3     ; break; }
              _this.fiber$initButtonLayout1(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$setXYPanelLayout1(_thread);
              __pc=2;return;
            case 2:
              
            case 3     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initButtonLayout1 :function _trc_Pad_initButtonLayout1() {
        "use strict";
        var _this=this;
        var screenSize;
        var tempJujiPadWidth;
        var tempJujiPadHeight;
        var tempJujiPadBorder;
        var i;
        var tempPadWidth;
        var tempPadHeight;
        var tempPadFillColor;
        var tempPadBorder;
        var tempPadBorderColor;
        var tempPadPushColor;
        var tempPadText;
        var tempPadTextSize;
        var tempPadTextColor;
        var obj;
        
        screenSize = Tonyu.globals.$screenWidth;
        
        if (Tonyu.globals.$screenWidth>Tonyu.globals.$screenHeight) {
          screenSize=Tonyu.globals.$screenHeight;
        }
        _this.padScaleX=screenSize/465;
        _this.oldPadScaleX=_this.padScaleX;
        _this.oldButtonCnt=_this.buttonCnt;
        tempJujiPadWidth = _this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
        
        tempJujiPadHeight = _this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
        
        tempJujiPadBorder = 4*_this.padScaleX;
        
        if (_this.jujiPadWidth!=null) {
          tempJujiPadWidth=_this.jujiPadWidth;
        }
        if (_this.jujiPadHeight!=null) {
          tempJujiPadHeight=_this.jujiPadHeight;
        }
        if (_this.jujiPadBorder!=null) {
          tempJujiPadBorder=_this.jujiPadBorder;
        }
        _this.jujiPads[0]=new Tonyu.classes.kernel.PadButton({pad: _this,mode: 10001,x: 101,y: Tonyu.globals.$screenHeight-101,alpha: _this.alpha,layer: _this.layer,width: tempJujiPadWidth,height: tempJujiPadHeight,padFillColor: _this.jujiPadFillColor,padBorder: tempJujiPadBorder,padBorderColor: _this.jujiPadBorderColor,padLPushColor: (_this.jujiPadLPushColor==null?_this.jujiPadPushColor:_this.jujiPadLPushColor),padRPushColor: (_this.jujiPadRPushColor==null?_this.jujiPadPushColor:_this.jujiPadRPushColor),padUPushColor: (_this.jujiPadUPushColor==null?_this.jujiPadPushColor:_this.jujiPadUPushColor),padDPushColor: (_this.jujiPadDPushColor==null?_this.jujiPadPushColor:_this.jujiPadDPushColor),padLColor: (_this.jujiPadLColor==null?_this.jujiPadColor:_this.jujiPadLColor),padRColor: (_this.jujiPadRColor==null?_this.jujiPadColor:_this.jujiPadRColor),padUColor: (_this.jujiPadUColor==null?_this.jujiPadColor:_this.jujiPadUColor),padDColor: (_this.jujiPadDColor==null?_this.jujiPadColor:_this.jujiPadDColor),diagonalEnable: _this.jujiPadDiagonalEnable,active: _this.active});
        i = 0;
        for (; i<4 ; i++) {
          {
            tempPadWidth = _this.buttonWidth;
            
            tempPadHeight = _this.buttonHeight;
            
            tempPadFillColor = _this.buttonFillColor;
            
            tempPadBorder = _this.buttonBorder;
            
            tempPadBorderColor = _this.buttonBorderColor;
            
            tempPadPushColor = _this.buttonPushColor;
            
            tempPadText = _this.buttonText;
            
            tempPadTextSize = _this.buttonTextSize;
            
            tempPadTextColor = _this.buttonTextColor;
            
            if (_this.buttonCnt==1) {
              tempPadWidth=160*_this.padScaleX;
              tempPadHeight=160*_this.padScaleX;
              tempPadBorder=1*_this.padScaleX;
              tempPadTextSize=120*screenSize/_this.DEFALT_SCREEN_WIDTH;
              
            } else {
              if (_this.buttonCnt>=2) {
                if (i<4) {
                  obj = _this.buttons[i];
                  
                  if (obj) {
                    if (_this.buttonCnt==3&&i==2) {
                      tempPadWidth=194*_this.padScaleX;
                      
                    } else {
                      tempPadWidth=96*_this.padScaleX;
                      
                    }
                    tempPadHeight=96*_this.padScaleX;
                    tempPadBorder=1*_this.padScaleX;
                    tempPadTextSize=72*screenSize/_this.DEFALT_SCREEN_WIDTH;
                    
                  }
                  
                }
                
              }
            }
            if (_this.buttonWidth!=null) {
              tempPadWidth=_this.buttonWidth;
            }
            if (_this.buttonHeight!=null) {
              tempPadHeight=_this.buttonHeight;
            }
            if (_this.buttonBorder!=null) {
              tempPadBorder=_this.buttonBorder;
            }
            if (tempPadTextSize!=null) {
              tempPadTextSize=tempPadTextSize;
            }
            if (i==0) {
              if (_this.button1Width!=null) {
                tempPadWidth=_this.button1Width;
              }
              if (_this.button1Height!=null) {
                tempPadHeight=_this.button1Height;
              }
              if (_this.button1FillColor!=null) {
                tempPadFillColor=_this.button1FillColor;
              }
              if (_this.button1Border!=null) {
                tempPadBorder=_this.button1Border;
              }
              if (_this.button1BorderColor!=null) {
                tempPadBorderColor=_this.button1BorderColor;
              }
              if (_this.button1PushColor!=null) {
                tempPadPushColor=_this.button1PushColor;
              }
              if (_this.button1Text!=null) {
                tempPadText=_this.button1Text;
              }
              if (_this.button1TextSize!=null) {
                tempPadTextSize=_this.button1TextSize;
              }
              if (_this.button1TextColor!=null) {
                tempPadTextColor=_this.button1TextColor;
              }
              
            } else {
              if (i==1) {
                if (_this.button2Width!=null) {
                  tempPadWidth=_this.button2Width;
                }
                if (_this.button2Height!=null) {
                  tempPadHeight=_this.button2Height;
                }
                if (_this.button2FillColor!=null) {
                  tempPadFillColor=_this.button2FillColor;
                }
                if (_this.button2Border!=null) {
                  tempPadBorder=_this.button2Border;
                }
                if (_this.button2BorderColor!=null) {
                  tempPadBorderColor=_this.button2BorderColor;
                }
                if (_this.button2PushColor!=null) {
                  tempPadPushColor=_this.button2PushColor;
                }
                if (_this.button2Text!=null) {
                  tempPadText=_this.button2Text;
                }
                if (_this.button2TextSize!=null) {
                  tempPadTextSize=_this.button2TextSize;
                }
                if (_this.button2TextColor!=null) {
                  tempPadTextColor=_this.button2TextColor;
                }
                
              } else {
                if (i==2) {
                  if (_this.button3Width!=null) {
                    tempPadWidth=_this.button3Width;
                  }
                  if (_this.button3Height!=null) {
                    tempPadHeight=_this.button3Height;
                  }
                  if (_this.button3FillColor!=null) {
                    tempPadFillColor=_this.button3FillColor;
                  }
                  if (_this.button3Border!=null) {
                    tempPadBorder=_this.button3Border;
                  }
                  if (_this.button3BorderColor!=null) {
                    tempPadBorderColor=_this.button3BorderColor;
                  }
                  if (_this.button3PushColor!=null) {
                    tempPadPushColor=_this.button3PushColor;
                  }
                  if (_this.button3Text!=null) {
                    tempPadText=_this.button3Text;
                  }
                  if (_this.button3TextSize!=null) {
                    tempPadTextSize=_this.button3TextSize;
                  }
                  if (_this.button3TextColor!=null) {
                    tempPadTextColor=_this.button3TextColor;
                  }
                  
                } else {
                  if (i==3) {
                    if (_this.button4Width!=null) {
                      tempPadWidth=_this.button4Width;
                    }
                    if (_this.button4Height!=null) {
                      tempPadHeight=_this.button4Height;
                    }
                    if (_this.button4FillColor!=null) {
                      tempPadFillColor=_this.button4FillColor;
                    }
                    if (_this.button4Border!=null) {
                      tempPadBorder=_this.button4Border;
                    }
                    if (_this.button4BorderColor!=null) {
                      tempPadBorderColor=_this.button4BorderColor;
                    }
                    if (_this.button4PushColor!=null) {
                      tempPadPushColor=_this.button4PushColor;
                    }
                    if (_this.button4Text!=null) {
                      tempPadText=_this.button4Text;
                    }
                    if (_this.button4TextSize!=null) {
                      tempPadTextSize=_this.button4TextSize;
                    }
                    if (_this.button4TextColor!=null) {
                      tempPadTextColor=_this.button4TextColor;
                    }
                    
                  }
                }
              }
            }
            _this.buttons[i]=new Tonyu.classes.kernel.PadButton({pad: _this,mode: 10000,x: 50+(i-4)%4*100,y: 50+_this.trunc((i-4)/4)*100,alpha: _this.alpha,layer: _this.layer,width: tempPadWidth,height: tempPadHeight,padFillColor: tempPadFillColor,padBorder: tempPadBorder,padBorderColor: tempPadBorderColor,padPushColor: tempPadPushColor,padText: tempPadText?tempPadText:i+1,padTextSize: tempPadTextSize,padTextColor: tempPadTextColor,active: _this.active});
            _this.buttons[i].drawPanel();
          }
        }
        if (_this.autoMove) {
          _this.drawPanel();
        }
      },
      fiber$initButtonLayout1 :function _trc_Pad_f_initButtonLayout1(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var screenSize;
        var tempJujiPadWidth;
        var tempJujiPadHeight;
        var tempJujiPadBorder;
        var i;
        var tempPadWidth;
        var tempPadHeight;
        var tempPadFillColor;
        var tempPadBorder;
        var tempPadBorderColor;
        var tempPadPushColor;
        var tempPadText;
        var tempPadTextSize;
        var tempPadTextColor;
        var obj;
        
        screenSize = Tonyu.globals.$screenWidth;
        
        if (Tonyu.globals.$screenWidth>Tonyu.globals.$screenHeight) {
          screenSize=Tonyu.globals.$screenHeight;
        }
        _this.padScaleX=screenSize/465;
        _this.oldPadScaleX=_this.padScaleX;
        _this.oldButtonCnt=_this.buttonCnt;
        tempJujiPadWidth = _this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
        
        tempJujiPadHeight = _this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
        
        tempJujiPadBorder = 4*_this.padScaleX;
        
        if (_this.jujiPadWidth!=null) {
          tempJujiPadWidth=_this.jujiPadWidth;
        }
        if (_this.jujiPadHeight!=null) {
          tempJujiPadHeight=_this.jujiPadHeight;
        }
        if (_this.jujiPadBorder!=null) {
          tempJujiPadBorder=_this.jujiPadBorder;
        }
        _this.jujiPads[0]=new Tonyu.classes.kernel.PadButton({pad: _this,mode: 10001,x: 101,y: Tonyu.globals.$screenHeight-101,alpha: _this.alpha,layer: _this.layer,width: tempJujiPadWidth,height: tempJujiPadHeight,padFillColor: _this.jujiPadFillColor,padBorder: tempJujiPadBorder,padBorderColor: _this.jujiPadBorderColor,padLPushColor: (_this.jujiPadLPushColor==null?_this.jujiPadPushColor:_this.jujiPadLPushColor),padRPushColor: (_this.jujiPadRPushColor==null?_this.jujiPadPushColor:_this.jujiPadRPushColor),padUPushColor: (_this.jujiPadUPushColor==null?_this.jujiPadPushColor:_this.jujiPadUPushColor),padDPushColor: (_this.jujiPadDPushColor==null?_this.jujiPadPushColor:_this.jujiPadDPushColor),padLColor: (_this.jujiPadLColor==null?_this.jujiPadColor:_this.jujiPadLColor),padRColor: (_this.jujiPadRColor==null?_this.jujiPadColor:_this.jujiPadRColor),padUColor: (_this.jujiPadUColor==null?_this.jujiPadColor:_this.jujiPadUColor),padDColor: (_this.jujiPadDColor==null?_this.jujiPadColor:_this.jujiPadDColor),diagonalEnable: _this.jujiPadDiagonalEnable,active: _this.active});
        i = 0;
        for (; i<4 ; i++) {
          {
            tempPadWidth = _this.buttonWidth;
            
            tempPadHeight = _this.buttonHeight;
            
            tempPadFillColor = _this.buttonFillColor;
            
            tempPadBorder = _this.buttonBorder;
            
            tempPadBorderColor = _this.buttonBorderColor;
            
            tempPadPushColor = _this.buttonPushColor;
            
            tempPadText = _this.buttonText;
            
            tempPadTextSize = _this.buttonTextSize;
            
            tempPadTextColor = _this.buttonTextColor;
            
            if (_this.buttonCnt==1) {
              tempPadWidth=160*_this.padScaleX;
              tempPadHeight=160*_this.padScaleX;
              tempPadBorder=1*_this.padScaleX;
              tempPadTextSize=120*screenSize/_this.DEFALT_SCREEN_WIDTH;
              
            } else {
              if (_this.buttonCnt>=2) {
                if (i<4) {
                  obj = _this.buttons[i];
                  
                  if (obj) {
                    if (_this.buttonCnt==3&&i==2) {
                      tempPadWidth=194*_this.padScaleX;
                      
                    } else {
                      tempPadWidth=96*_this.padScaleX;
                      
                    }
                    tempPadHeight=96*_this.padScaleX;
                    tempPadBorder=1*_this.padScaleX;
                    tempPadTextSize=72*screenSize/_this.DEFALT_SCREEN_WIDTH;
                    
                  }
                  
                }
                
              }
            }
            if (_this.buttonWidth!=null) {
              tempPadWidth=_this.buttonWidth;
            }
            if (_this.buttonHeight!=null) {
              tempPadHeight=_this.buttonHeight;
            }
            if (_this.buttonBorder!=null) {
              tempPadBorder=_this.buttonBorder;
            }
            if (tempPadTextSize!=null) {
              tempPadTextSize=tempPadTextSize;
            }
            if (i==0) {
              if (_this.button1Width!=null) {
                tempPadWidth=_this.button1Width;
              }
              if (_this.button1Height!=null) {
                tempPadHeight=_this.button1Height;
              }
              if (_this.button1FillColor!=null) {
                tempPadFillColor=_this.button1FillColor;
              }
              if (_this.button1Border!=null) {
                tempPadBorder=_this.button1Border;
              }
              if (_this.button1BorderColor!=null) {
                tempPadBorderColor=_this.button1BorderColor;
              }
              if (_this.button1PushColor!=null) {
                tempPadPushColor=_this.button1PushColor;
              }
              if (_this.button1Text!=null) {
                tempPadText=_this.button1Text;
              }
              if (_this.button1TextSize!=null) {
                tempPadTextSize=_this.button1TextSize;
              }
              if (_this.button1TextColor!=null) {
                tempPadTextColor=_this.button1TextColor;
              }
              
            } else {
              if (i==1) {
                if (_this.button2Width!=null) {
                  tempPadWidth=_this.button2Width;
                }
                if (_this.button2Height!=null) {
                  tempPadHeight=_this.button2Height;
                }
                if (_this.button2FillColor!=null) {
                  tempPadFillColor=_this.button2FillColor;
                }
                if (_this.button2Border!=null) {
                  tempPadBorder=_this.button2Border;
                }
                if (_this.button2BorderColor!=null) {
                  tempPadBorderColor=_this.button2BorderColor;
                }
                if (_this.button2PushColor!=null) {
                  tempPadPushColor=_this.button2PushColor;
                }
                if (_this.button2Text!=null) {
                  tempPadText=_this.button2Text;
                }
                if (_this.button2TextSize!=null) {
                  tempPadTextSize=_this.button2TextSize;
                }
                if (_this.button2TextColor!=null) {
                  tempPadTextColor=_this.button2TextColor;
                }
                
              } else {
                if (i==2) {
                  if (_this.button3Width!=null) {
                    tempPadWidth=_this.button3Width;
                  }
                  if (_this.button3Height!=null) {
                    tempPadHeight=_this.button3Height;
                  }
                  if (_this.button3FillColor!=null) {
                    tempPadFillColor=_this.button3FillColor;
                  }
                  if (_this.button3Border!=null) {
                    tempPadBorder=_this.button3Border;
                  }
                  if (_this.button3BorderColor!=null) {
                    tempPadBorderColor=_this.button3BorderColor;
                  }
                  if (_this.button3PushColor!=null) {
                    tempPadPushColor=_this.button3PushColor;
                  }
                  if (_this.button3Text!=null) {
                    tempPadText=_this.button3Text;
                  }
                  if (_this.button3TextSize!=null) {
                    tempPadTextSize=_this.button3TextSize;
                  }
                  if (_this.button3TextColor!=null) {
                    tempPadTextColor=_this.button3TextColor;
                  }
                  
                } else {
                  if (i==3) {
                    if (_this.button4Width!=null) {
                      tempPadWidth=_this.button4Width;
                    }
                    if (_this.button4Height!=null) {
                      tempPadHeight=_this.button4Height;
                    }
                    if (_this.button4FillColor!=null) {
                      tempPadFillColor=_this.button4FillColor;
                    }
                    if (_this.button4Border!=null) {
                      tempPadBorder=_this.button4Border;
                    }
                    if (_this.button4BorderColor!=null) {
                      tempPadBorderColor=_this.button4BorderColor;
                    }
                    if (_this.button4PushColor!=null) {
                      tempPadPushColor=_this.button4PushColor;
                    }
                    if (_this.button4Text!=null) {
                      tempPadText=_this.button4Text;
                    }
                    if (_this.button4TextSize!=null) {
                      tempPadTextSize=_this.button4TextSize;
                    }
                    if (_this.button4TextColor!=null) {
                      tempPadTextColor=_this.button4TextColor;
                    }
                    
                  }
                }
              }
            }
            _this.buttons[i]=new Tonyu.classes.kernel.PadButton({pad: _this,mode: 10000,x: 50+(i-4)%4*100,y: 50+_this.trunc((i-4)/4)*100,alpha: _this.alpha,layer: _this.layer,width: tempPadWidth,height: tempPadHeight,padFillColor: tempPadFillColor,padBorder: tempPadBorder,padBorderColor: tempPadBorderColor,padPushColor: tempPadPushColor,padText: tempPadText?tempPadText:i+1,padTextSize: tempPadTextSize,padTextColor: tempPadTextColor,active: _this.active});
            _this.buttons[i].drawPanel();
          }
        }
        
        _thread.enter(function _trc_Pad_ent_initButtonLayout1(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.autoMove)) { __pc=2     ; break; }
              _this.fiber$drawPanel(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      drawPanel :function _trc_Pad_drawPanel() {
        "use strict";
        var _this=this;
        var screenSize;
        var i;
        var obj;
        
        if (_this.layout==1) {
          screenSize = Tonyu.globals.$screenWidth;
          
          if (Tonyu.globals.$screenWidth>Tonyu.globals.$screenHeight) {
            screenSize=Tonyu.globals.$screenHeight;
          }
          _this.jujiPads[0].width=_this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
          _this.jujiPads[0].height=_this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
          _this.jujiPads[0].padBorder=1*_this.padScaleX;
          if (_this.buttonCnt==1) {
            _this.buttons[0].width=160*_this.padScaleX;
            _this.buttons[0].height=160*_this.padScaleX;
            _this.buttons[0].padBorder=1*_this.padScaleX;
            _this.buttons[0].padTextSize=120*screenSize/_this.DEFALT_SCREEN_WIDTH;
            
          } else {
            if (_this.buttonCnt>=2) {
              i = 0;
              for (; i<_this.buttons.length ; i++) {
                {
                  if (i>=4) {
                    break;
                    
                  }
                  obj = _this.buttons[i];
                  
                  if (obj) {
                    if (_this.buttonCnt==3&&i==2) {
                      obj.width=194*_this.padScaleX;
                      
                    } else {
                      obj.width=96*_this.padScaleX;
                      
                    }
                    obj.height=96*_this.padScaleX;
                    obj.padBorder=1*_this.padScaleX;
                    obj.padTextSize=72*screenSize/_this.DEFALT_SCREEN_WIDTH;
                    
                  }
                }
              }
              
            }
          }
          
        }
        i = 0;
        for (; i<_this.jujiPads.length ; i++) {
          {
            obj = _this.jujiPads[i];
            
            if (obj) {
              obj.drawPanel();
            }
          }
        }
        i = 0;
        for (; i<_this.buttons.length ; i++) {
          {
            obj = _this.buttons[i];
            
            if (obj) {
              if (i<_this.buttonCnt) {
                obj.show();
                obj.drawPanel();
                
              } else {
                obj.hide();
                
              }
              
            }
          }
        }
      },
      fiber$drawPanel :function _trc_Pad_f_drawPanel(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var screenSize;
        var i;
        var obj;
        
        if (_this.layout==1) {
          screenSize = Tonyu.globals.$screenWidth;
          
          if (Tonyu.globals.$screenWidth>Tonyu.globals.$screenHeight) {
            screenSize=Tonyu.globals.$screenHeight;
          }
          _this.jujiPads[0].width=_this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
          _this.jujiPads[0].height=_this.trunc(72*screenSize/_this.DEFALT_SCREEN_WIDTH)*3;
          _this.jujiPads[0].padBorder=1*_this.padScaleX;
          if (_this.buttonCnt==1) {
            _this.buttons[0].width=160*_this.padScaleX;
            _this.buttons[0].height=160*_this.padScaleX;
            _this.buttons[0].padBorder=1*_this.padScaleX;
            _this.buttons[0].padTextSize=120*screenSize/_this.DEFALT_SCREEN_WIDTH;
            
          } else {
            if (_this.buttonCnt>=2) {
              i = 0;
              for (; i<_this.buttons.length ; i++) {
                {
                  if (i>=4) {
                    break;
                    
                  }
                  obj = _this.buttons[i];
                  
                  if (obj) {
                    if (_this.buttonCnt==3&&i==2) {
                      obj.width=194*_this.padScaleX;
                      
                    } else {
                      obj.width=96*_this.padScaleX;
                      
                    }
                    obj.height=96*_this.padScaleX;
                    obj.padBorder=1*_this.padScaleX;
                    obj.padTextSize=72*screenSize/_this.DEFALT_SCREEN_WIDTH;
                    
                  }
                }
              }
              
            }
          }
          
        }
        i = 0;
        for (; i<_this.jujiPads.length ; i++) {
          {
            obj = _this.jujiPads[i];
            
            if (obj) {
              obj.drawPanel();
            }
          }
        }
        i = 0;
        for (; i<_this.buttons.length ; i++) {
          {
            obj = _this.buttons[i];
            
            if (obj) {
              if (i<_this.buttonCnt) {
                obj.show();
                obj.drawPanel();
                
              } else {
                obj.hide();
                
              }
              
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      setXYPanel :function _trc_Pad_setXYPanel() {
        "use strict";
        var _this=this;
        
        if (_this.layout==1) {
          _this.setXYPanelLayout1();
          
        }
      },
      fiber$setXYPanel :function _trc_Pad_f_setXYPanel(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_setXYPanel(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.layout==1)) { __pc=2     ; break; }
              _this.fiber$setXYPanelLayout1(_thread);
              __pc=1;return;
            case 1:
              
            case 2     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      setXYPanelLayout1 :function _trc_Pad_setXYPanelLayout1() {
        "use strict";
        var _this=this;
        
        _this.jujiPads[0].x=112*_this.trunc(_this.padScaleX*64)/64;
        _this.jujiPads[0].y=Tonyu.globals.$screenHeight-112*_this.trunc(_this.padScaleX*64)/64;
        if (_this.buttonCnt==1) {
          _this.buttons[0].x=Tonyu.globals.$screenWidth-84*_this.padScaleX;
          _this.buttons[0].y=Tonyu.globals.$screenHeight-84*_this.padScaleX;
          
        } else {
          if (_this.buttonCnt==2) {
            _this.buttons[0].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
            _this.buttons[0].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
            _this.buttons[1].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
            _this.buttons[1].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
            
          } else {
            if (_this.buttonCnt==3) {
              _this.buttons[0].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
              _this.buttons[0].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
              _this.buttons[1].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
              _this.buttons[1].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
              _this.buttons[2].x=Tonyu.globals.$screenWidth-101*_this.padScaleX;
              _this.buttons[2].y=Tonyu.globals.$screenHeight-150*_this.padScaleX;
              
            } else {
              if (_this.buttonCnt>=4) {
                _this.buttons[0].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
                _this.buttons[0].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
                _this.buttons[1].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
                _this.buttons[1].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
                _this.buttons[2].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
                _this.buttons[2].y=Tonyu.globals.$screenHeight-150*_this.padScaleX;
                _this.buttons[3].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
                _this.buttons[3].y=Tonyu.globals.$screenHeight-150*_this.padScaleX;
                
              }
            }
          }
        }
      },
      fiber$setXYPanelLayout1 :function _trc_Pad_f_setXYPanelLayout1(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.jujiPads[0].x=112*_this.trunc(_this.padScaleX*64)/64;
        _this.jujiPads[0].y=Tonyu.globals.$screenHeight-112*_this.trunc(_this.padScaleX*64)/64;
        if (_this.buttonCnt==1) {
          _this.buttons[0].x=Tonyu.globals.$screenWidth-84*_this.padScaleX;
          _this.buttons[0].y=Tonyu.globals.$screenHeight-84*_this.padScaleX;
          
        } else {
          if (_this.buttonCnt==2) {
            _this.buttons[0].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
            _this.buttons[0].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
            _this.buttons[1].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
            _this.buttons[1].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
            
          } else {
            if (_this.buttonCnt==3) {
              _this.buttons[0].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
              _this.buttons[0].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
              _this.buttons[1].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
              _this.buttons[1].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
              _this.buttons[2].x=Tonyu.globals.$screenWidth-101*_this.padScaleX;
              _this.buttons[2].y=Tonyu.globals.$screenHeight-150*_this.padScaleX;
              
            } else {
              if (_this.buttonCnt>=4) {
                _this.buttons[0].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
                _this.buttons[0].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
                _this.buttons[1].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
                _this.buttons[1].y=Tonyu.globals.$screenHeight-52*_this.padScaleX;
                _this.buttons[2].x=Tonyu.globals.$screenWidth-52*_this.padScaleX;
                _this.buttons[2].y=Tonyu.globals.$screenHeight-150*_this.padScaleX;
                _this.buttons[3].x=Tonyu.globals.$screenWidth-150*_this.padScaleX;
                _this.buttons[3].y=Tonyu.globals.$screenHeight-150*_this.padScaleX;
                
              }
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      padUpdate :function _trc_Pad_padUpdate() {
        "use strict";
        var _this=this;
        
        if (! _this.active) {
          return _this;
        }
        _this.activate();
        if (_this.version==1) {
          _this.padUpdateV1();
          
        } else {
          _this.padUpdateV2();
          
        }
      },
      fiber$padUpdate :function _trc_Pad_f_padUpdate(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! _this.active) {
          _thread.retVal=_this;return;
          
        }
        
        _thread.enter(function _trc_Pad_ent_padUpdate(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              if (!(_this.version==1)) { __pc=3     ; break; }
              _this.fiber$padUpdateV1(_thread);
              __pc=2;return;
            case 2:
              
              __pc=5     ;break;
            case 3     :
              _this.fiber$padUpdateV2(_thread);
              __pc=4;return;
            case 4:
              
            case 5     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      padUpdateV2 :function _trc_Pad_padUpdateV2() {
        "use strict";
        var _this=this;
        var screenSize;
        
        _this.padsUpdateV2();
        screenSize = Tonyu.globals.$screenWidth;
        
        if (Tonyu.globals.$screenWidth>Tonyu.globals.$screenHeight) {
          screenSize=Tonyu.globals.$screenHeight;
        }
        _this.padScaleX=screenSize/465;
        if (_this.padScaleX!=_this.oldPadScaleX) {
          if (_this.autoMove) {
            _this.drawPanel();
          }
          _this.oldPadScaleX=_this.padScaleX;
          
        }
        if (Tonyu.globals.$screenWidth!=_this.oldScreenWidth||Tonyu.globals.$screenHeight!=_this.oldScreenHeight) {
          if (_this.autoMove) {
            _this.setXYPanel();
          }
          _this.oldScreenWidth=Tonyu.globals.$screenWidth;
          _this.oldScreenHeight=Tonyu.globals.$screenHeight;
          _this.oldButtonCnt=_this.buttonCnt;
          
        }
      },
      fiber$padUpdateV2 :function _trc_Pad_f_padUpdateV2(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var screenSize;
        
        
        _thread.enter(function _trc_Pad_ent_padUpdateV2(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$padsUpdateV2(_thread);
              __pc=1;return;
            case 1:
              
              screenSize = Tonyu.globals.$screenWidth;
              
              if (Tonyu.globals.$screenWidth>Tonyu.globals.$screenHeight) {
                screenSize=Tonyu.globals.$screenHeight;
              }
              _this.padScaleX=screenSize/465;
              if (!(_this.padScaleX!=_this.oldPadScaleX)) { __pc=4     ; break; }
              if (!(_this.autoMove)) { __pc=3     ; break; }
              _this.fiber$drawPanel(_thread);
              __pc=2;return;
            case 2:
              
            case 3     :
              
              _this.oldPadScaleX=_this.padScaleX;
            case 4     :
              
              if (!(Tonyu.globals.$screenWidth!=_this.oldScreenWidth||Tonyu.globals.$screenHeight!=_this.oldScreenHeight)) { __pc=7     ; break; }
              if (!(_this.autoMove)) { __pc=6     ; break; }
              _this.fiber$setXYPanel(_thread);
              __pc=5;return;
            case 5:
              
            case 6     :
              
              _this.oldScreenWidth=Tonyu.globals.$screenWidth;
              _this.oldScreenHeight=Tonyu.globals.$screenHeight;
              _this.oldButtonCnt=_this.buttonCnt;
            case 7     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      padUpdateV1 :function _trc_Pad_padUpdateV1() {
        "use strict";
        var _this=this;
        var i;
        var t;
        
        if (_this.padUpdateFrame==Tonyu.globals.$frameCount) {
          return _this;
        }
        _this.padUpdateFrame=Tonyu.globals.$frameCount;
        _this.keyPushL=0;
        _this.keyPushR=0;
        _this.keyPushU=0;
        _this.keyPushD=0;
        _this.keyPush1=0;
        _this.padKeyNotapCnt++;
        i = 0;
        for (; i<5 ; i++) {
          {
            t = Tonyu.globals.$touches[i];
            
            if (t.touched) {
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32-_this.APAD_DIAG_SIZE/2,_this.jujiKey.y-32-64,64+_this.APAD_DIAG_SIZE,64)) {
                _this.keyPushU=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32-_this.APAD_DIAG_SIZE/2,_this.jujiKey.y-32+64,64+_this.APAD_DIAG_SIZE,64)) {
                _this.keyPushD=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32-64,_this.jujiKey.y-32-_this.APAD_DIAG_SIZE/2,64,64+_this.APAD_DIAG_SIZE)) {
                _this.keyPushL=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32+64,_this.jujiKey.y-32-_this.APAD_DIAG_SIZE/2,64,64+_this.APAD_DIAG_SIZE)) {
                _this.keyPushR=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.no1Key.x-64,_this.no1Key.y-64,128,128)) {
                _this.keyPush1=1;
              }
              _this.padKeySW=1;
              _this.padKeyNotapCnt=0;
              
            }
          }
        }
        if (_this.keyPushL) {
          _this.keyCntL++;
        } else {
          _this.keyCntL=0;
        }
        if (_this.keyPushR) {
          _this.keyCntR++;
        } else {
          _this.keyCntR=0;
        }
        if (_this.keyPushU) {
          _this.keyCntU++;
        } else {
          _this.keyCntU=0;
        }
        if (_this.keyPushD) {
          _this.keyCntD++;
        } else {
          _this.keyCntD=0;
        }
        if (_this.keyPush1) {
          _this.keyCnt1++;
        } else {
          _this.keyCnt1=0;
        }
        if (_this.keyPushL) {
          _this.jujiKeyPushL.show();
        } else {
          _this.jujiKeyPushL.hide();
        }
        if (_this.keyPushR) {
          _this.jujiKeyPushR.show();
        } else {
          _this.jujiKeyPushR.hide();
        }
        if (_this.keyPushU) {
          _this.jujiKeyPushU.show();
        } else {
          _this.jujiKeyPushU.hide();
        }
        if (_this.keyPushD) {
          _this.jujiKeyPushD.show();
        } else {
          _this.jujiKeyPushD.hide();
        }
        if (_this.keyPush1) {
          _this.jujiKeyPush1.show();
        } else {
          _this.jujiKeyPush1.hide();
        }
      },
      fiber$padUpdateV1 :function _trc_Pad_f_padUpdateV1(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var t;
        
        if (_this.padUpdateFrame==Tonyu.globals.$frameCount) {
          _thread.retVal=_this;return;
          
        }
        _this.padUpdateFrame=Tonyu.globals.$frameCount;
        _this.keyPushL=0;
        _this.keyPushR=0;
        _this.keyPushU=0;
        _this.keyPushD=0;
        _this.keyPush1=0;
        _this.padKeyNotapCnt++;
        i = 0;
        for (; i<5 ; i++) {
          {
            t = Tonyu.globals.$touches[i];
            
            if (t.touched) {
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32-_this.APAD_DIAG_SIZE/2,_this.jujiKey.y-32-64,64+_this.APAD_DIAG_SIZE,64)) {
                _this.keyPushU=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32-_this.APAD_DIAG_SIZE/2,_this.jujiKey.y-32+64,64+_this.APAD_DIAG_SIZE,64)) {
                _this.keyPushD=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32-64,_this.jujiKey.y-32-_this.APAD_DIAG_SIZE/2,64,64+_this.APAD_DIAG_SIZE)) {
                _this.keyPushL=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.jujiKey.x-32+64,_this.jujiKey.y-32-_this.APAD_DIAG_SIZE/2,64,64+_this.APAD_DIAG_SIZE)) {
                _this.keyPushR=1;
              }
              if (_this.isOnRectWH(t.x,t.y,_this.no1Key.x-64,_this.no1Key.y-64,128,128)) {
                _this.keyPush1=1;
              }
              _this.padKeySW=1;
              _this.padKeyNotapCnt=0;
              
            }
          }
        }
        if (_this.keyPushL) {
          _this.keyCntL++;
        } else {
          _this.keyCntL=0;
        }
        if (_this.keyPushR) {
          _this.keyCntR++;
        } else {
          _this.keyCntR=0;
        }
        if (_this.keyPushU) {
          _this.keyCntU++;
        } else {
          _this.keyCntU=0;
        }
        if (_this.keyPushD) {
          _this.keyCntD++;
        } else {
          _this.keyCntD=0;
        }
        if (_this.keyPush1) {
          _this.keyCnt1++;
        } else {
          _this.keyCnt1=0;
        }
        if (_this.keyPushL) {
          _this.jujiKeyPushL.show();
        } else {
          _this.jujiKeyPushL.hide();
        }
        if (_this.keyPushR) {
          _this.jujiKeyPushR.show();
        } else {
          _this.jujiKeyPushR.hide();
        }
        if (_this.keyPushU) {
          _this.jujiKeyPushU.show();
        } else {
          _this.jujiKeyPushU.hide();
        }
        if (_this.keyPushD) {
          _this.jujiKeyPushD.show();
        } else {
          _this.jujiKeyPushD.hide();
        }
        if (_this.keyPush1) {
          _this.jujiKeyPush1.show();
        } else {
          _this.jujiKeyPush1.hide();
        }
        
        _thread.retVal=_this;return;
      },
      padsUpdateV2 :function _trc_Pad_padsUpdateV2() {
        "use strict";
        var _this=this;
        var i;
        var obj;
        
        if (_this.padUpdateFrame==Tonyu.globals.$frameCount) {
          return _this;
        }
        _this.padUpdateFrame=Tonyu.globals.$frameCount;
        i = 0;
        for (; i<_this.buttons.length ; i++) {
          {
            obj = _this.buttons[i];
            
            if (obj) {
              obj.padUpdate();
            }
          }
        }
        i = 0;
        for (; i<_this.jujiPads.length ; i++) {
          {
            obj = _this.jujiPads[i];
            
            if (obj) {
              obj.padUpdate();
            }
          }
        }
      },
      fiber$padsUpdateV2 :function _trc_Pad_f_padsUpdateV2(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var obj;
        
        if (_this.padUpdateFrame==Tonyu.globals.$frameCount) {
          _thread.retVal=_this;return;
          
        }
        _this.padUpdateFrame=Tonyu.globals.$frameCount;
        i = 0;
        for (; i<_this.buttons.length ; i++) {
          {
            obj = _this.buttons[i];
            
            if (obj) {
              obj.padUpdate();
            }
          }
        }
        i = 0;
        for (; i<_this.jujiPads.length ; i++) {
          {
            obj = _this.jujiPads[i];
            
            if (obj) {
              obj.padUpdate();
            }
          }
        }
        
        _thread.retVal=_this;return;
      },
      getUp :function _trc_Pad_getUp(i) {
        "use strict";
        var _this=this;
        var value;
        
        if (_this.died) {
          return 0;
        }
        _this.activate();
        _this.padUpdate();
        value = 0;
        
        if (_this.version==1) {
          return _this.keyCntU;
          
        } else {
          if (i==null) {
            i=0;
          }
          if (i>=0&&i<_this.jujiPads.length) {
            value=_this.jujiPads[i].padCntU;
          }
          
        }
        return value;
      },
      fiber$getUp :function _trc_Pad_f_getUp(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var value;
        
        if (_this.died) {
          _thread.retVal=0;return;
          
        }
        
        _thread.enter(function _trc_Pad_ent_getUp(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              value = 0;
              
              if (!(_this.version==1)) { __pc=3     ; break; }
              _thread.exit(_this.keyCntU);return;
              __pc=4     ;break;
            case 3     :
              {
                if (i==null) {
                  i=0;
                }
                if (i>=0&&i<_this.jujiPads.length) {
                  value=_this.jujiPads[i].padCntU;
                }
              }
            case 4     :
              
              _thread.exit(value);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getDown :function _trc_Pad_getDown(i) {
        "use strict";
        var _this=this;
        var value;
        
        if (_this.died) {
          return 0;
        }
        _this.activate();
        _this.padUpdate();
        value = 0;
        
        if (_this.jujiPads==null) {
          return _this.keyCntD;
          
        } else {
          if (i==null) {
            i=0;
          }
          if (i>=0&&i<_this.jujiPads.length) {
            value=_this.jujiPads[i].padCntD;
          }
          
        }
        return value;
      },
      fiber$getDown :function _trc_Pad_f_getDown(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var value;
        
        if (_this.died) {
          _thread.retVal=0;return;
          
        }
        
        _thread.enter(function _trc_Pad_ent_getDown(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              value = 0;
              
              if (!(_this.jujiPads==null)) { __pc=3     ; break; }
              _thread.exit(_this.keyCntD);return;
              __pc=4     ;break;
            case 3     :
              {
                if (i==null) {
                  i=0;
                }
                if (i>=0&&i<_this.jujiPads.length) {
                  value=_this.jujiPads[i].padCntD;
                }
              }
            case 4     :
              
              _thread.exit(value);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getLeft :function _trc_Pad_getLeft(i) {
        "use strict";
        var _this=this;
        var value;
        
        if (_this.died) {
          return 0;
        }
        _this.activate();
        _this.padUpdate();
        value = 0;
        
        if (_this.jujiPads==null) {
          return _this.keyCntL;
          
        } else {
          if (i==null) {
            i=0;
          }
          if (i>=0&&i<_this.jujiPads.length) {
            value=_this.jujiPads[i].padCntL;
          }
          
        }
        return value;
      },
      fiber$getLeft :function _trc_Pad_f_getLeft(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var value;
        
        if (_this.died) {
          _thread.retVal=0;return;
          
        }
        
        _thread.enter(function _trc_Pad_ent_getLeft(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              value = 0;
              
              if (!(_this.jujiPads==null)) { __pc=3     ; break; }
              _thread.exit(_this.keyCntL);return;
              __pc=4     ;break;
            case 3     :
              {
                if (i==null) {
                  i=0;
                }
                if (i>=0&&i<_this.jujiPads.length) {
                  value=_this.jujiPads[i].padCntL;
                }
              }
            case 4     :
              
              _thread.exit(value);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getRight :function _trc_Pad_getRight(i) {
        "use strict";
        var _this=this;
        var value;
        
        if (_this.died) {
          return 0;
        }
        _this.activate();
        _this.padUpdate();
        value = 0;
        
        if (_this.jujiPads==null) {
          return _this.keyCntR;
          
        } else {
          if (i==null) {
            i=0;
          }
          if (i>=0&&i<_this.jujiPads.length) {
            value=_this.jujiPads[i].padCntR;
          }
          
        }
        return value;
      },
      fiber$getRight :function _trc_Pad_f_getRight(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var value;
        
        if (_this.died) {
          _thread.retVal=0;return;
          
        }
        
        _thread.enter(function _trc_Pad_ent_getRight(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              value = 0;
              
              if (!(_this.jujiPads==null)) { __pc=3     ; break; }
              _thread.exit(_this.keyCntR);return;
              __pc=4     ;break;
            case 3     :
              {
                if (i==null) {
                  i=0;
                }
                if (i>=0&&i<_this.jujiPads.length) {
                  value=_this.jujiPads[i].padCntR;
                }
              }
            case 4     :
              
              _thread.exit(value);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getButton :function _trc_Pad_getButton(i) {
        "use strict";
        var _this=this;
        var value;
        
        if (_this.died) {
          return 0;
        }
        _this.activate();
        _this.padUpdate();
        value = 0;
        
        if (_this.buttons==null) {
          if (i==0) {
            value=_this.keyCnt1;
          }
          
        } else {
          if (! i) {
            i=1;
          }
          i--;
          if (i>=0&&i<_this.buttons.length) {
            value=_this.buttons[i].padCnt;
          }
          
        }
        return value;
      },
      fiber$getButton :function _trc_Pad_f_getButton(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var value;
        
        if (_this.died) {
          _thread.retVal=0;return;
          
        }
        
        _thread.enter(function _trc_Pad_ent_getButton(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              value = 0;
              
              if (_this.buttons==null) {
                if (i==0) {
                  value=_this.keyCnt1;
                }
                
              } else {
                if (! i) {
                  i=1;
                }
                i--;
                if (i>=0&&i<_this.buttons.length) {
                  value=_this.buttons[i].padCnt;
                }
                
              }
              _thread.exit(value);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getJujiPadObj :function _trc_Pad_getJujiPadObj(i) {
        "use strict";
        var _this=this;
        var obj;
        
        _this.activate();
        if (_this.jujiPads==null) {
          return null;
        }
        obj = null;
        
        if (i==null) {
          i=0;
        }
        if (i>=0&&i<_this.jujiPads.length) {
          obj=_this.jujiPads[i];
        }
        return obj;
      },
      fiber$getJujiPadObj :function _trc_Pad_f_getJujiPadObj(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var obj;
        
        
        _thread.enter(function _trc_Pad_ent_getJujiPadObj(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              if (!(_this.jujiPads==null)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              obj = null;
              
              if (i==null) {
                i=0;
              }
              if (i>=0&&i<_this.jujiPads.length) {
                obj=_this.jujiPads[i];
              }
              _thread.exit(obj);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getJujiPadObjLength :function _trc_Pad_getJujiPadObjLength(i) {
        "use strict";
        var _this=this;
        
        _this.activate();
        if (_this.jujiPads==null) {
          return null;
        }
        return _this.jujiPads.length;
      },
      fiber$getJujiPadObjLength :function _trc_Pad_f_getJujiPadObjLength(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getJujiPadObjLength(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              if (!(_this.jujiPads==null)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              _thread.exit(_this.jujiPads.length);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getButtonObj :function _trc_Pad_getButtonObj(i) {
        "use strict";
        var _this=this;
        var obj;
        
        _this.activate();
        if (_this.buttons==null) {
          return null;
        }
        obj = null;
        
        if (i==null) {
          i=0;
        }
        if (i>=0&&i<_this.buttons.length) {
          obj=_this.buttons[i];
        }
        return obj;
      },
      fiber$getButtonObj :function _trc_Pad_f_getButtonObj(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var obj;
        
        
        _thread.enter(function _trc_Pad_ent_getButtonObj(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              if (!(_this.buttons==null)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              obj = null;
              
              if (i==null) {
                i=0;
              }
              if (i>=0&&i<_this.buttons.length) {
                obj=_this.buttons[i];
              }
              _thread.exit(obj);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getButtonObjLength :function _trc_Pad_getButtonObjLength(i) {
        "use strict";
        var _this=this;
        
        _this.activate();
        if (_this.buttons==null) {
          return null;
        }
        return _this.buttons.length;
      },
      fiber$getButtonObjLength :function _trc_Pad_f_getButtonObjLength(_thread,i) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getButtonObjLength(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$activate(_thread);
              __pc=1;return;
            case 1:
              
              if (!(_this.buttons==null)) { __pc=2     ; break; }
              _thread.exit(null);return;
            case 2     :
              
              _thread.exit(_this.buttons.length);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPadUp :function _trc_Pad_getPadUp() {
        "use strict";
        var _this=this;
        
        return _this.getUp();
      },
      fiber$getPadUp :function _trc_Pad_f_getPadUp(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getPadUp(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getUp(_thread);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPadDown :function _trc_Pad_getPadDown() {
        "use strict";
        var _this=this;
        
        return _this.getDown();
      },
      fiber$getPadDown :function _trc_Pad_f_getPadDown(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getPadDown(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getDown(_thread);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPadLeft :function _trc_Pad_getPadLeft() {
        "use strict";
        var _this=this;
        
        return _this.getLeft();
      },
      fiber$getPadLeft :function _trc_Pad_f_getPadLeft(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getPadLeft(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getLeft(_thread);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPadRight :function _trc_Pad_getPadRight() {
        "use strict";
        var _this=this;
        
        return _this.getRight();
      },
      fiber$getPadRight :function _trc_Pad_f_getPadRight(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getPadRight(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getRight(_thread);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getPadButton :function _trc_Pad_getPadButton() {
        "use strict";
        var _this=this;
        
        return _this.getButton();
      },
      fiber$getPadButton :function _trc_Pad_f_getPadButton(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Pad_ent_getPadButton(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getButton(_thread);
              __pc=1;return;
            case 1:
              _thread.exit(_thread.retVal);return;
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      isOnRect :function _trc_Pad_isOnRect(mx,my,rx,ry,rx2,ry2) {
        "use strict";
        var _this=this;
        
        return (rx<=mx&&mx<rx2&&ry<=my&&my<ry2);
      },
      fiber$isOnRect :function _trc_Pad_f_isOnRect(_thread,mx,my,rx,ry,rx2,ry2) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=(rx<=mx&&mx<rx2&&ry<=my&&my<ry2);return;
        
        
        _thread.retVal=_this;return;
      },
      isOnRectWH :function _trc_Pad_isOnRectWH(mx,my,rx,ry,rw,rh) {
        "use strict";
        var _this=this;
        
        return (rx<=mx&&mx<rx+rw&&ry<=my&&my<ry+rh);
      },
      fiber$isOnRectWH :function _trc_Pad_f_isOnRectWH(_thread,mx,my,rx,ry,rw,rh) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=(rx<=mx&&mx<rx+rw&&ry<=my&&my<ry+rh);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"activate":{"nowait":false},"newPadV2":{"nowait":false},"newPadV1":{"nowait":false},"die":{"nowait":true},"dieV2":{"nowait":false},"dieV1":{"nowait":false},"initButton":{"nowait":false},"initButtonLayout1":{"nowait":false},"drawPanel":{"nowait":false},"setXYPanel":{"nowait":false},"setXYPanelLayout1":{"nowait":false},"padUpdate":{"nowait":false},"padUpdateV2":{"nowait":false},"padUpdateV1":{"nowait":false},"padsUpdateV2":{"nowait":false},"getUp":{"nowait":false},"getDown":{"nowait":false},"getLeft":{"nowait":false},"getRight":{"nowait":false},"getButton":{"nowait":false},"getJujiPadObj":{"nowait":false},"getJujiPadObjLength":{"nowait":false},"getButtonObj":{"nowait":false},"getButtonObjLength":{"nowait":false},"getPadUp":{"nowait":false},"getPadDown":{"nowait":false},"getPadLeft":{"nowait":false},"getPadRight":{"nowait":false},"getPadButton":{"nowait":false},"isOnRect":{"nowait":false},"isOnRectWH":{"nowait":false}},"fields":{"buttonCnt":{},"version":{},"active":{},"actived":{},"died":{},"layout":{},"autoMove":{},"APAD_DIAG_SIZE":{},"padImageP":{},"padUpdateFrame":{},"jujiKey":{},"no1Key":{},"jujiKeyPushU":{},"jujiKeyPushL":{},"jujiKeyPushR":{},"jujiKeyPushD":{},"jujiKeyPush1":{},"buttons":{},"jujiPads":{},"DEFALT_SCREEN_WIDTH":{},"padScaleX":{},"oldPadScaleX":{},"oldButtonCnt":{},"jujiPadWidth":{},"jujiPadHeight":{},"jujiPadBorder":{},"jujiPadFillColor":{},"jujiPadBorderColor":{},"jujiPadLPushColor":{},"jujiPadPushColor":{},"jujiPadRPushColor":{},"jujiPadUPushColor":{},"jujiPadDPushColor":{},"jujiPadLColor":{},"jujiPadColor":{},"jujiPadRColor":{},"jujiPadUColor":{},"jujiPadDColor":{},"jujiPadDiagonalEnable":{},"buttonWidth":{},"buttonHeight":{},"buttonFillColor":{},"buttonBorder":{},"buttonBorderColor":{},"buttonPushColor":{},"buttonText":{},"buttonTextSize":{},"buttonTextColor":{},"button1Width":{},"button1Height":{},"button1FillColor":{},"button1Border":{},"button1BorderColor":{},"button1PushColor":{},"button1Text":{},"button1TextSize":{},"button1TextColor":{},"button2Width":{},"button2Height":{},"button2FillColor":{},"button2Border":{},"button2BorderColor":{},"button2PushColor":{},"button2Text":{},"button2TextSize":{},"button2TextColor":{},"button3Width":{},"button3Height":{},"button3FillColor":{},"button3Border":{},"button3BorderColor":{},"button3PushColor":{},"button3Text":{},"button3TextSize":{},"button3TextColor":{},"button4Width":{},"button4Height":{},"button4FillColor":{},"button4Border":{},"button4BorderColor":{},"button4PushColor":{},"button4Text":{},"button4TextSize":{},"button4TextColor":{},"oldScreenWidth":{},"oldScreenHeight":{},"keyPushL":{},"keyPushR":{},"keyPushU":{},"keyPushD":{},"keyPush1":{},"padKeyNotapCnt":{},"padKeySW":{},"keyCntL":{},"keyCntR":{},"keyCntU":{},"keyCntD":{},"keyCnt1":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PadButton',
  shortName: 'PadButton',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_PadButton_main() {
        "use strict";
        var _this=this;
        
        while (_this.loop) {
          _this.padUpdate();
          _this.update();
          
        }
      },
      fiber$main :function _trc_PadButton_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_PadButton_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(_this.loop)) { __pc=4     ; break; }
              _this.fiber$padUpdate(_thread);
              __pc=2;return;
            case 2:
              
              _this.fiber$update(_thread);
              __pc=3;return;
            case 3:
              
              __pc=1;break;
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initialize :function _trc_PadButton_initialize(opt) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [opt]);
        _this.died=false;
        _this.zOrder=- 10000;
        _this.init();
      },
      die :function _trc_PadButton_die() {
        "use strict";
        var _this=this;
        
        _this.died=true;
        _this.padCnt=0;
        _this.padCntL=0;
        _this.padCntR=0;
        _this.padCntU=0;
        _this.padCntD=0;
        if (_this.panel!=null) {
          _this.panel.hide();
          _this.panel.die();
          
        }
        if (_this.panelPush!=null) {
          _this.panelPush.hide();
          _this.panelPush.die();
          
        }
        if (_this.panelPushL!=null) {
          _this.panelPushL.hide();
          _this.panelPushL.die();
          
        }
        if (_this.panelPushR!=null) {
          _this.panelPushR.hide();
          _this.panelPushR.die();
          
        }
        if (_this.panelPushU!=null) {
          _this.panelPushU.hide();
          _this.panelPushU.die();
          
        }
        if (_this.panelPushD!=null) {
          _this.panelPushD.hide();
          _this.panelPushD.die();
          
        }
        __superClass.prototype.die.apply( _this, []);
      },
      hide :function _trc_PadButton_hide() {
        "use strict";
        var _this=this;
        
        if (_this.panel!=null) {
          _this.panel.hide();
          
        }
      },
      show :function _trc_PadButton_show() {
        "use strict";
        var _this=this;
        
        if (_this.panel!=null) {
          _this.panel.show();
          
        }
      },
      init :function _trc_PadButton_init() {
        "use strict";
        var _this=this;
        var i;
        
        _this.TOUCHES_MAX=5;
        _this.loop=true;
        _this.padCnt=0;
        _this.padCntL=0;
        _this.padCntR=0;
        _this.padCntU=0;
        _this.padCntD=0;
        _this.padNotapCnt=0;
        _this.padUpdateFrame=- 1;
        if (_this.mode==0) {
          if (_this.p==null) {
            _this.p=0;
          }
          if (_this.pushP==null) {
            _this.pushP=1;
          }
          if (_this.drawMode==null) {
            _this.drawMode=0;
          }
          
        } else {
          if (_this.mode==1) {
            if (_this.p==null) {
              _this.p=0;
            }
            if (_this.pushLP==null) {
              _this.pushLP=1;
            }
            if (_this.pushRP==null) {
              _this.pushRP=1;
            }
            if (_this.pushUP==null) {
              _this.pushUP=1;
            }
            if (_this.pushDP==null) {
              _this.pushDP=1;
            }
            if (_this.drawMode==null) {
              _this.drawMode=0;
            }
            if (_this.diagonalEnable==null) {
              _this.diagonalEnable=true;
            }
            
          } else {
            if (_this.mode==2) {
              if (_this.p==null) {
                _this.p=0;
              }
              if (_this.pushP==null) {
                _this.pushP=1;
              }
              
            } else {
              if (_this.mode==10000) {
                _this.p=- 1;
                if (_this.width==null) {
                  _this.width=96;
                }
                if (_this.height==null) {
                  _this.height=96;
                }
                if (_this.padFillColor==null) {
                  _this.padFillColor="rgba(0,0,0,0.125)";
                }
                if (_this.padBorder==null) {
                  _this.padBorder=1;
                }
                if (_this.padBorderColor==null) {
                  _this.padBorderColor="rgba(255,255,255,0.5)";
                }
                if (_this.padPushColor==null) {
                  _this.padPushColor="rgba(255,255,255,0.25)";
                }
                if (_this.padText==null) {
                  _this.padText="";
                }
                if (_this.padTextSize==null) {
                  _this.padTextSize=72;
                }
                if (_this.padTextColor==null) {
                  _this.padTextColor="rgba(255,255,255,0.625)";
                }
                _this.panel=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                _this.panelPush=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                _this.drawPanel();
                _this.padPush=0;
                _this.padPushList=[];
                i = 0;
                for (; i<_this.TOUCHES_MAX ; i++) {
                  {
                    _this.padPushList[i]=false;
                  }
                }
                
              } else {
                if (_this.mode==10001) {
                  _this.p=- 1;
                  if (_this.width==null) {
                    _this.width=216;
                  }
                  if (_this.height==null) {
                    _this.height=216;
                  }
                  if (_this.padFillColor==null) {
                    _this.padFillColor="rgba(0,0,0,0.125)";
                  }
                  if (_this.padBorder==null) {
                    _this.padBorder=1;
                  }
                  if (_this.padBorderColor==null) {
                    _this.padBorderColor="rgba(255,255,255,0.5)";
                  }
                  if (_this.padLPushColor==null) {
                    _this.padLPushColor="rgba(255,255,255,0.25)";
                  }
                  if (_this.padRPushColor==null) {
                    _this.padRPushColor="rgba(255,255,255,0.25)";
                  }
                  if (_this.padUPushColor==null) {
                    _this.padUPushColor="rgba(255,255,255,0.25)";
                  }
                  if (_this.padDPushColor==null) {
                    _this.padDPushColor="rgba(255,255,255,0.25)";
                  }
                  if (_this.padLColor==null) {
                    _this.padLColor="rgba(255,255,255,0.625)";
                  }
                  if (_this.padRColor==null) {
                    _this.padRColor="rgba(255,255,255,0.625)";
                  }
                  if (_this.padUColor==null) {
                    _this.padUColor="rgba(255,255,255,0.625)";
                  }
                  if (_this.padDColor==null) {
                    _this.padDColor="rgba(255,255,255,0.625)";
                  }
                  if (_this.diagonalEnable==null) {
                    _this.diagonalEnable=true;
                  }
                  _this.panel=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                  _this.panelPushL=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                  _this.panelPushR=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                  _this.panelPushU=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                  _this.panelPushD=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
                  _this.drawPanel();
                  _this.padPushTouchNo=- 1;
                  
                } else {
                  if (_this.mode==10002) {
                    _this.p=- 1;
                    _this.panel=new Tonyu.classes.kernel.PadPanel;
                    _this.drawPanel();
                    
                  }
                }
              }
            }
          }
        }
      },
      fiber$init :function _trc_PadButton_f_init(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        
        _this.TOUCHES_MAX=5;
        _this.loop=true;
        _this.padCnt=0;
        _this.padCntL=0;
        _this.padCntR=0;
        _this.padCntU=0;
        _this.padCntD=0;
        _this.padNotapCnt=0;
        _this.padUpdateFrame=- 1;
        
        _thread.enter(function _trc_PadButton_ent_init(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.mode==0)) { __pc=1     ; break; }
              {
                if (_this.p==null) {
                  _this.p=0;
                }
                if (_this.pushP==null) {
                  _this.pushP=1;
                }
                if (_this.drawMode==null) {
                  _this.drawMode=0;
                }
              }
              __pc=14    ;break;
            case 1     :
              if (!(_this.mode==1)) { __pc=2     ; break; }
              {
                if (_this.p==null) {
                  _this.p=0;
                }
                if (_this.pushLP==null) {
                  _this.pushLP=1;
                }
                if (_this.pushRP==null) {
                  _this.pushRP=1;
                }
                if (_this.pushUP==null) {
                  _this.pushUP=1;
                }
                if (_this.pushDP==null) {
                  _this.pushDP=1;
                }
                if (_this.drawMode==null) {
                  _this.drawMode=0;
                }
                if (_this.diagonalEnable==null) {
                  _this.diagonalEnable=true;
                }
              }
              __pc=13    ;break;
            case 2     :
              if (!(_this.mode==2)) { __pc=3     ; break; }
              {
                if (_this.p==null) {
                  _this.p=0;
                }
                if (_this.pushP==null) {
                  _this.pushP=1;
                }
              }
              __pc=12    ;break;
            case 3     :
              if (!(_this.mode==10000)) { __pc=5     ; break; }
              _this.p=- 1;
              if (_this.width==null) {
                _this.width=96;
              }
              if (_this.height==null) {
                _this.height=96;
              }
              if (_this.padFillColor==null) {
                _this.padFillColor="rgba(0,0,0,0.125)";
              }
              if (_this.padBorder==null) {
                _this.padBorder=1;
              }
              if (_this.padBorderColor==null) {
                _this.padBorderColor="rgba(255,255,255,0.5)";
              }
              if (_this.padPushColor==null) {
                _this.padPushColor="rgba(255,255,255,0.25)";
              }
              if (_this.padText==null) {
                _this.padText="";
              }
              if (_this.padTextSize==null) {
                _this.padTextSize=72;
              }
              if (_this.padTextColor==null) {
                _this.padTextColor="rgba(255,255,255,0.625)";
              }
              _this.panel=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.panelPush=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.fiber$drawPanel(_thread);
              __pc=4;return;
            case 4:
              
              _this.padPush=0;
              _this.padPushList=[];
              i = 0;
              for (; i<_this.TOUCHES_MAX ; i++) {
                {
                  _this.padPushList[i]=false;
                }
              }
              __pc=11    ;break;
            case 5     :
              if (!(_this.mode==10001)) { __pc=7     ; break; }
              _this.p=- 1;
              if (_this.width==null) {
                _this.width=216;
              }
              if (_this.height==null) {
                _this.height=216;
              }
              if (_this.padFillColor==null) {
                _this.padFillColor="rgba(0,0,0,0.125)";
              }
              if (_this.padBorder==null) {
                _this.padBorder=1;
              }
              if (_this.padBorderColor==null) {
                _this.padBorderColor="rgba(255,255,255,0.5)";
              }
              if (_this.padLPushColor==null) {
                _this.padLPushColor="rgba(255,255,255,0.25)";
              }
              if (_this.padRPushColor==null) {
                _this.padRPushColor="rgba(255,255,255,0.25)";
              }
              if (_this.padUPushColor==null) {
                _this.padUPushColor="rgba(255,255,255,0.25)";
              }
              if (_this.padDPushColor==null) {
                _this.padDPushColor="rgba(255,255,255,0.25)";
              }
              if (_this.padLColor==null) {
                _this.padLColor="rgba(255,255,255,0.625)";
              }
              if (_this.padRColor==null) {
                _this.padRColor="rgba(255,255,255,0.625)";
              }
              if (_this.padUColor==null) {
                _this.padUColor="rgba(255,255,255,0.625)";
              }
              if (_this.padDColor==null) {
                _this.padDColor="rgba(255,255,255,0.625)";
              }
              if (_this.diagonalEnable==null) {
                _this.diagonalEnable=true;
              }
              _this.panel=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.panelPushL=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.panelPushR=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.panelPushU=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.panelPushD=new Tonyu.classes.kernel.PadPanel({layer: _this.layer});
              _this.fiber$drawPanel(_thread);
              __pc=6;return;
            case 6:
              
              _this.padPushTouchNo=- 1;
              __pc=10    ;break;
            case 7     :
              if (!(_this.mode==10002)) { __pc=9     ; break; }
              _this.p=- 1;
              _this.panel=new Tonyu.classes.kernel.PadPanel;
              _this.fiber$drawPanel(_thread);
              __pc=8;return;
            case 8:
              
            case 9     :
              
            case 10    :
              
            case 11    :
              
            case 12    :
              
            case 13    :
              
            case 14    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      drawPanel :function _trc_PadButton_drawPanel() {
        "use strict";
        var _this=this;
        
        if (_this.mode==10000) {
          _this.drawPanelMode10000();
          
        } else {
          if (_this.mode==10001) {
            _this.drawPanelMode10001();
            
          } else {
            if (_this.mode==10002) {
              _this.drawPanelMode10002();
              
            }
          }
        }
      },
      fiber$drawPanel :function _trc_PadButton_f_drawPanel(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_PadButton_ent_drawPanel(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.mode==10000)) { __pc=2     ; break; }
              _this.fiber$drawPanelMode10000(_thread);
              __pc=1;return;
            case 1:
              
              __pc=8     ;break;
            case 2     :
              if (!(_this.mode==10001)) { __pc=4     ; break; }
              _this.fiber$drawPanelMode10001(_thread);
              __pc=3;return;
            case 3:
              
              __pc=7     ;break;
            case 4     :
              if (!(_this.mode==10002)) { __pc=6     ; break; }
              _this.fiber$drawPanelMode10002(_thread);
              __pc=5;return;
            case 5:
              
            case 6     :
              
            case 7     :
              
            case 8     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      drawPanelMode10000 :function _trc_PadButton_drawPanelMode10000() {
        "use strict";
        var _this=this;
        var w;
        var h;
        var bw;
        var bh;
        var ts;
        
        
        
        
        w=_this.width;
        h=_this.height;
        bw=_this.padBorder;
        bh=_this.padBorder;
        ts=_this.padTextSize;
        if (bw<0) {
          bw=0;
        }
        if (bh<0) {
          bh=0;
        }
        if (w<4) {
          w=4;
        }
        if (h<4) {
          h=4;
        }
        _this.panel.setPanel(w+2,h+2);
        _this.panel.clearRect(0,0,w+2,h+2);
        _this.panel.setFillStyle(_this.padBorderColor);
        _this.panel.fillRect(1,1,w,h);
        _this.panel.clearRect(1+bw,1+bh,w-bw*2,h-bh*2);
        _this.panel.setFillStyle(_this.padFillColor);
        _this.panel.fillRect(1+bw,1+bh,w-bw*2,h-bh*2);
        _this.panel.fillText(_this.padText,w/2,h/2,_this.padTextColor,ts,"center","middle");
        _this.panelPush.setPanel(w+2,h+2);
        _this.panelPush.clearRect(0,0,w+2,h+2);
        _this.panelPush.setFillStyle(_this.padPushColor);
        _this.panelPush.fillRect(1,1,w,h);
      },
      fiber$drawPanelMode10000 :function _trc_PadButton_f_drawPanelMode10000(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var w;
        var h;
        var bw;
        var bh;
        var ts;
        
        
        
        
        w=_this.width;
        h=_this.height;
        bw=_this.padBorder;
        bh=_this.padBorder;
        ts=_this.padTextSize;
        if (bw<0) {
          bw=0;
        }
        if (bh<0) {
          bh=0;
        }
        if (w<4) {
          w=4;
        }
        if (h<4) {
          h=4;
        }
        _this.panel.setPanel(w+2,h+2);
        _this.panel.clearRect(0,0,w+2,h+2);
        _this.panel.setFillStyle(_this.padBorderColor);
        _this.panel.fillRect(1,1,w,h);
        _this.panel.clearRect(1+bw,1+bh,w-bw*2,h-bh*2);
        _this.panel.setFillStyle(_this.padFillColor);
        _this.panel.fillRect(1+bw,1+bh,w-bw*2,h-bh*2);
        _this.panel.fillText(_this.padText,w/2,h/2,_this.padTextColor,ts,"center","middle");
        _this.panelPush.setPanel(w+2,h+2);
        _this.panelPush.clearRect(0,0,w+2,h+2);
        _this.panelPush.setFillStyle(_this.padPushColor);
        _this.panelPush.fillRect(1,1,w,h);
        
        _thread.retVal=_this;return;
      },
      drawPanelMode10001 :function _trc_PadButton_drawPanelMode10001() {
        "use strict";
        var _this=this;
        var screenSize;
        var w;
        var h;
        var tsx;
        var tsy;
        var cw;
        var ch;
        var cw2;
        var ch2;
        var bw;
        var bh;
        
        
        
        
        
        
        
        w=_this.width;
        h=_this.height;
        if (w<4) {
          w=4;
        }
        if (h<4) {
          h=4;
        }
        cw=w/3;
        ch=h/3;
        cw2=w*2/3;
        ch2=h*2/3;
        tsx=w/(64*3);
        tsy=h/(64*3);
        bw=_this.padBorder;
        bh=_this.padBorder;
        if (bw<0) {
          bw=0;
        }
        if (bh<0) {
          bh=0;
        }
        _this.panel.setPanel(w,h);
        _this.panel.clearRect(0,0,w+2,h+2);
        _this.panel.setFillStyle(_this.padBorderColor);
        _this.panel.fillRect(cw,0,cw,ch);
        _this.panel.fillRect(0,ch,w,ch);
        _this.panel.fillRect(cw,ch2,cw,ch);
        _this.panel.clearRect(cw+bw,bh,cw-bw*2,h-bh*2);
        _this.panel.clearRect(bw,ch+bh,w-bw*2,ch-bh*2);
        _this.panel.setFillStyle(_this.padFillColor);
        _this.panel.fillRect(cw+bw,bh,cw-bw*2,ch);
        _this.panel.fillRect(bw,ch+bh,w-bw*2,ch-bh*2);
        _this.panel.fillRect(cw+bw,ch2-bh,cw-bw*2,ch);
        _this.panel.fillPolygon3(96*tsx,14.5*tsy,113*tsx,48*tsy,79*tsx,48*tsy,_this.padUColor);
        _this.panel.fillPolygon3(14.5*tsx,96*tsy,48*tsx,79*tsy,48*tsx,113*tsy,_this.padLColor);
        _this.panel.fillPolygon3(96*tsx,177.5*tsy,79*tsx,144*tsy,113*tsx,144*tsy,_this.padDColor);
        _this.panel.fillPolygon3(177.5*tsx,96*tsy,144*tsx,113*tsy,144*tsx,79*tsy,_this.padRColor);
        _this.panelPushL.setPanel(cw+bw,ch);
        _this.panelPushL.clearRect(0,0,cw+bw+2,ch+2);
        _this.panelPushL.setFillStyle(_this.padLPushColor);
        _this.panelPushL.fillRect(0,0,cw+bw,ch);
        _this.panelPushR.setPanel(cw+bw,ch);
        _this.panelPushR.clearRect(0,0,cw+bw+2,ch+2);
        _this.panelPushR.setFillStyle(_this.padRPushColor);
        _this.panelPushR.fillRect(0,0,cw+bw,ch);
        _this.panelPushU.setPanel(cw,ch+bh);
        _this.panelPushU.clearRect(0,0,cw+2,ch+bh+2);
        _this.panelPushU.setFillStyle(_this.padUPushColor);
        _this.panelPushU.fillRect(0,0,cw,ch+bh);
        _this.panelPushD.setPanel(cw,ch+bh);
        _this.panelPushD.clearRect(0,0,cw+2,ch+bh+2);
        _this.panelPushD.setFillStyle(_this.padDPushColor);
        _this.panelPushD.fillRect(0,0,cw,ch+bh);
      },
      fiber$drawPanelMode10001 :function _trc_PadButton_f_drawPanelMode10001(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var screenSize;
        var w;
        var h;
        var tsx;
        var tsy;
        var cw;
        var ch;
        var cw2;
        var ch2;
        var bw;
        var bh;
        
        
        
        
        
        
        
        w=_this.width;
        h=_this.height;
        if (w<4) {
          w=4;
        }
        if (h<4) {
          h=4;
        }
        cw=w/3;
        ch=h/3;
        cw2=w*2/3;
        ch2=h*2/3;
        tsx=w/(64*3);
        tsy=h/(64*3);
        bw=_this.padBorder;
        bh=_this.padBorder;
        if (bw<0) {
          bw=0;
        }
        if (bh<0) {
          bh=0;
        }
        _this.panel.setPanel(w,h);
        _this.panel.clearRect(0,0,w+2,h+2);
        _this.panel.setFillStyle(_this.padBorderColor);
        _this.panel.fillRect(cw,0,cw,ch);
        _this.panel.fillRect(0,ch,w,ch);
        _this.panel.fillRect(cw,ch2,cw,ch);
        _this.panel.clearRect(cw+bw,bh,cw-bw*2,h-bh*2);
        _this.panel.clearRect(bw,ch+bh,w-bw*2,ch-bh*2);
        _this.panel.setFillStyle(_this.padFillColor);
        _this.panel.fillRect(cw+bw,bh,cw-bw*2,ch);
        _this.panel.fillRect(bw,ch+bh,w-bw*2,ch-bh*2);
        _this.panel.fillRect(cw+bw,ch2-bh,cw-bw*2,ch);
        _this.panel.fillPolygon3(96*tsx,14.5*tsy,113*tsx,48*tsy,79*tsx,48*tsy,_this.padUColor);
        _this.panel.fillPolygon3(14.5*tsx,96*tsy,48*tsx,79*tsy,48*tsx,113*tsy,_this.padLColor);
        _this.panel.fillPolygon3(96*tsx,177.5*tsy,79*tsx,144*tsy,113*tsx,144*tsy,_this.padDColor);
        _this.panel.fillPolygon3(177.5*tsx,96*tsy,144*tsx,113*tsy,144*tsx,79*tsy,_this.padRColor);
        _this.panelPushL.setPanel(cw+bw,ch);
        _this.panelPushL.clearRect(0,0,cw+bw+2,ch+2);
        _this.panelPushL.setFillStyle(_this.padLPushColor);
        _this.panelPushL.fillRect(0,0,cw+bw,ch);
        _this.panelPushR.setPanel(cw+bw,ch);
        _this.panelPushR.clearRect(0,0,cw+bw+2,ch+2);
        _this.panelPushR.setFillStyle(_this.padRPushColor);
        _this.panelPushR.fillRect(0,0,cw+bw,ch);
        _this.panelPushU.setPanel(cw,ch+bh);
        _this.panelPushU.clearRect(0,0,cw+2,ch+bh+2);
        _this.panelPushU.setFillStyle(_this.padUPushColor);
        _this.panelPushU.fillRect(0,0,cw,ch+bh);
        _this.panelPushD.setPanel(cw,ch+bh);
        _this.panelPushD.clearRect(0,0,cw+2,ch+bh+2);
        _this.panelPushD.setFillStyle(_this.padDPushColor);
        _this.panelPushD.fillRect(0,0,cw,ch+bh);
        
        _thread.retVal=_this;return;
      },
      drawPanelMode10002 :function _trc_PadButton_drawPanelMode10002() {
        "use strict";
        var _this=this;
        
      },
      fiber$drawPanelMode10002 :function _trc_PadButton_f_drawPanelMode10002(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      padUpdate :function _trc_PadButton_padUpdate() {
        "use strict";
        var _this=this;
        
        if (_this.padUpdateFrame==Tonyu.globals.$frameCount) {
          return _this;
        }
        _this.padUpdateFrame=Tonyu.globals.$frameCount;
        if (_this.mode==0) {
          _this.padUpdateMode0();
          
        } else {
          if (_this.mode==1) {
            _this.padUpdateMode1();
            
          } else {
            if (_this.mode==2) {
              _this.padUpdateMode2();
              
            } else {
              if (_this.mode==10000) {
                _this.padUpdateMode10000();
                
              } else {
                if (_this.mode==10001) {
                  _this.padUpdateMode10001();
                  
                } else {
                  if (_this.mode==10002) {
                    _this.padUpdateMode10002();
                    
                  }
                }
              }
            }
          }
        }
      },
      fiber$padUpdate :function _trc_PadButton_f_padUpdate(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (_this.padUpdateFrame==Tonyu.globals.$frameCount) {
          _thread.retVal=_this;return;
          
        }
        _this.padUpdateFrame=Tonyu.globals.$frameCount;
        
        _thread.enter(function _trc_PadButton_ent_padUpdate(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.mode==0)) { __pc=2     ; break; }
              _this.fiber$padUpdateMode0(_thread);
              __pc=1;return;
            case 1:
              
              __pc=17    ;break;
            case 2     :
              if (!(_this.mode==1)) { __pc=4     ; break; }
              _this.fiber$padUpdateMode1(_thread);
              __pc=3;return;
            case 3:
              
              __pc=16    ;break;
            case 4     :
              if (!(_this.mode==2)) { __pc=6     ; break; }
              _this.fiber$padUpdateMode2(_thread);
              __pc=5;return;
            case 5:
              
              __pc=15    ;break;
            case 6     :
              if (!(_this.mode==10000)) { __pc=8     ; break; }
              _this.fiber$padUpdateMode10000(_thread);
              __pc=7;return;
            case 7:
              
              __pc=14    ;break;
            case 8     :
              if (!(_this.mode==10001)) { __pc=10    ; break; }
              _this.fiber$padUpdateMode10001(_thread);
              __pc=9;return;
            case 9:
              
              __pc=13    ;break;
            case 10    :
              if (!(_this.mode==10002)) { __pc=12    ; break; }
              _this.fiber$padUpdateMode10002(_thread);
              __pc=11;return;
            case 11:
              
            case 12    :
              
            case 13    :
              
            case 14    :
              
            case 15    :
              
            case 16    :
              
            case 17    :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      padUpdateMode0 :function _trc_PadButton_padUpdateMode0() {
        "use strict";
        var _this=this;
        
      },
      fiber$padUpdateMode0 :function _trc_PadButton_f_padUpdateMode0(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      padUpdateMode1 :function _trc_PadButton_padUpdateMode1() {
        "use strict";
        var _this=this;
        
      },
      fiber$padUpdateMode1 :function _trc_PadButton_f_padUpdateMode1(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      padUpdateMode2 :function _trc_PadButton_padUpdateMode2() {
        "use strict";
        var _this=this;
        
      },
      fiber$padUpdateMode2 :function _trc_PadButton_f_padUpdateMode2(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      padUpdateMode10000 :function _trc_PadButton_padUpdateMode10000() {
        "use strict";
        var _this=this;
        var allNoTouche;
        var i;
        var t;
        
        if (_this.died) {
          return _this;
        }
        _this.panel.x=_this.x;
        _this.panel.y=_this.y;
        _this.panel.zOrder=_this.zOrder;
        _this.panel.alpha=_this.alpha*_this.pad.alpha;
        _this.panel.layer=_this.layer;
        allNoTouche = true;
        
        i = 0;
        for (; i<_this.TOUCHES_MAX ; i++) {
          {
            t = Tonyu.globals.$touches[i];
            
            if (t.touched==1) {
              if (_this.crashXY10000(t.x,t.y)) {
                _this.padPush=1;
                _this.padPushList[i]=true;
                
              }
              
            } else {
              if (t.touched==0) {
                _this.padPushList[i]=false;
                
              }
            }
            if (_this.padPushList[i]) {
              allNoTouche=false;
              
            }
          }
        }
        if (allNoTouche) {
          _this.padPush=0;
          
        }
        if (_this.padPush) {
          _this.padCnt++;
          _this.padNotapCnt=0;
          _this.panelPush.x=_this.x;
          _this.panelPush.y=_this.y;
          _this.panelPush.zOrder=_this.zOrder;
          _this.panelPush.alpha=_this.alpha;
          _this.panelPush.layer=_this.layer;
          _this.panelPush.show();
          
        } else {
          _this.padCnt=0;
          _this.padNotapCnt++;
          _this.panelPush.hide();
          
        }
      },
      fiber$padUpdateMode10000 :function _trc_PadButton_f_padUpdateMode10000(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var allNoTouche;
        var i;
        var t;
        
        if (_this.died) {
          _thread.retVal=_this;return;
          
        }
        _this.panel.x=_this.x;
        _this.panel.y=_this.y;
        _this.panel.zOrder=_this.zOrder;
        _this.panel.alpha=_this.alpha*_this.pad.alpha;
        _this.panel.layer=_this.layer;
        allNoTouche = true;
        
        i = 0;
        for (; i<_this.TOUCHES_MAX ; i++) {
          {
            t = Tonyu.globals.$touches[i];
            
            if (t.touched==1) {
              if (_this.crashXY10000(t.x,t.y)) {
                _this.padPush=1;
                _this.padPushList[i]=true;
                
              }
              
            } else {
              if (t.touched==0) {
                _this.padPushList[i]=false;
                
              }
            }
            if (_this.padPushList[i]) {
              allNoTouche=false;
              
            }
          }
        }
        if (allNoTouche) {
          _this.padPush=0;
          
        }
        if (_this.padPush) {
          _this.padCnt++;
          _this.padNotapCnt=0;
          _this.panelPush.x=_this.x;
          _this.panelPush.y=_this.y;
          _this.panelPush.zOrder=_this.zOrder;
          _this.panelPush.alpha=_this.alpha;
          _this.panelPush.layer=_this.layer;
          _this.panelPush.show();
          
        } else {
          _this.padCnt=0;
          _this.padNotapCnt++;
          _this.panelPush.hide();
          
        }
        
        _thread.retVal=_this;return;
      },
      padUpdateMode10001 :function _trc_PadButton_padUpdateMode10001() {
        "use strict";
        var _this=this;
        var w;
        var h;
        var cw;
        var ch;
        var cw2;
        var ch2;
        var cwh;
        var chh;
        var bw;
        var bh;
        var i;
        var t;
        var subX;
        var subY;
        
        if (_this.died) {
          return _this;
        }
        
        
        
        
        
        cw=_this.width/3;
        ch=_this.height/3;
        cw2=_this.width*2/3;
        ch2=_this.height*2/3;
        cwh=_this.trunc(cw/2);
        chh=_this.trunc(ch/2);
        w=_this.width;
        h=_this.height;
        bw=_this.padBorder;
        bh=_this.padBorder;
        _this.panel.x=_this.x;
        _this.panel.y=_this.y;
        _this.panel.zOrder=_this.zOrder;
        _this.panel.alpha=_this.alpha*_this.pad.alpha;
        _this.panel.layer=_this.layer;
        _this.padPushL=0;
        _this.padPushR=0;
        _this.padPushU=0;
        _this.padPushD=0;
        if (_this.padPushTouchNo==- 1) {
          _this.padNotapCnt++;
          i = 0;
          for (; i<_this.TOUCHES_MAX ; i++) {
            {
              t = Tonyu.globals.$touches[i];
              
              if (t.touched==1) {
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,w,h)) {
                  _this.padPushTouchNo=i;
                }
                _this.padNotapCnt=0;
                break;
                
                
              }
            }
          }
          
        }
        if (_this.padPushTouchNo!=- 1) {
          t = Tonyu.globals.$touches[_this.padPushTouchNo];
          
          if (t.touched==0) {
            _this.padPushTouchNo=- 1;
            
          } else {
            if (_this.diagonalEnable) {
              if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,w,h)) {
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,cw,h)) {
                  _this.padPushL=1;
                }
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh+cw,_this.y-chh-ch,cw,h)) {
                  _this.padPushR=1;
                }
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,w,ch)) {
                  _this.padPushU=1;
                }
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh+ch,w,ch)) {
                  _this.padPushD=1;
                }
                
              } else {
                subX = t.x-_this.x;
                
                subY = t.y-_this.y;
                
                if (subX<- cwh-(_this.abs(subY)-chh-ch)/2) {
                  _this.padPushL=1;
                }
                if (subX>cwh+(_this.abs(subY)-chh-ch)/2) {
                  _this.padPushR=1;
                }
                if (subY<- chh-(_this.abs(subX)-cwh-cw)/2) {
                  _this.padPushU=1;
                }
                if (subY>chh+(_this.abs(subX)-cwh-cw)/2) {
                  _this.padPushD=1;
                }
                
              }
              
            } else {
              if (! _this.isOnRectWH(t.x,t.y,_this.x-cwh,_this.y-chh,cw,ch)) {
                subX = t.x-_this.x;
                
                subY = t.y-_this.y;
                
                if (subX<=- _this.abs(subY)) {
                  _this.padPushL=1;
                } else {
                  if (subY<=- _this.abs(subX)) {
                    _this.padPushU=1;
                  } else {
                    if (subX>=_this.abs(subY)) {
                      _this.padPushR=1;
                    } else {
                      if (subY>=_this.abs(subX)) {
                        _this.padPushD=1;
                      }
                    }
                  }
                }
                
              }
              
            }
            
          }
          
        }
        if (_this.padPushL) {
          _this.padCntL++;
          _this.panelPushL.x=_this.x-cw+bw/2;
          _this.panelPushL.y=_this.y;
          _this.panelPushL.zOrder=_this.zOrder;
          _this.panelPushL.alpha=_this.alpha;
          _this.panelPushL.layer=_this.layer;
          _this.panelPushL.show();
          
        } else {
          _this.padCntL=0;
          _this.panelPushL.hide();
          
        }
        if (_this.padPushR) {
          _this.padCntR++;
          _this.panelPushR.x=_this.x+cw-bw/2;
          _this.panelPushR.y=_this.y;
          _this.panelPushR.zOrder=_this.zOrder;
          _this.panelPushR.alpha=_this.alpha;
          _this.panelPushR.layer=_this.layer;
          _this.panelPushR.show();
          
        } else {
          _this.padCntR=0;
          _this.panelPushR.hide();
          
        }
        if (_this.padPushU) {
          _this.padCntU++;
          _this.panelPushU.x=_this.x;
          _this.panelPushU.y=_this.y-ch+bh/2;
          _this.panelPushU.zOrder=_this.zOrder;
          _this.panelPushU.alpha=_this.alpha;
          _this.panelPushU.layer=_this.layer;
          _this.panelPushU.show();
          
        } else {
          _this.padCntU=0;
          _this.panelPushU.hide();
          
        }
        if (_this.padPushD) {
          _this.padCntD++;
          _this.panelPushD.x=_this.x;
          _this.panelPushD.y=_this.y+ch-bh/2;
          _this.panelPushD.zOrder=_this.zOrder;
          _this.panelPushD.alpha=_this.alpha;
          _this.panelPushD.layer=_this.layer;
          _this.panelPushD.show();
          
        } else {
          _this.padCntD=0;
          _this.panelPushD.hide();
          
        }
      },
      fiber$padUpdateMode10001 :function _trc_PadButton_f_padUpdateMode10001(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var w;
        var h;
        var cw;
        var ch;
        var cw2;
        var ch2;
        var cwh;
        var chh;
        var bw;
        var bh;
        var i;
        var t;
        var subX;
        var subY;
        
        if (_this.died) {
          _thread.retVal=_this;return;
          
        }
        
        
        
        
        
        cw=_this.width/3;
        ch=_this.height/3;
        cw2=_this.width*2/3;
        ch2=_this.height*2/3;
        cwh=_this.trunc(cw/2);
        chh=_this.trunc(ch/2);
        w=_this.width;
        h=_this.height;
        bw=_this.padBorder;
        bh=_this.padBorder;
        _this.panel.x=_this.x;
        _this.panel.y=_this.y;
        _this.panel.zOrder=_this.zOrder;
        _this.panel.alpha=_this.alpha*_this.pad.alpha;
        _this.panel.layer=_this.layer;
        _this.padPushL=0;
        _this.padPushR=0;
        _this.padPushU=0;
        _this.padPushD=0;
        if (_this.padPushTouchNo==- 1) {
          _this.padNotapCnt++;
          i = 0;
          for (; i<_this.TOUCHES_MAX ; i++) {
            {
              t = Tonyu.globals.$touches[i];
              
              if (t.touched==1) {
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,w,h)) {
                  _this.padPushTouchNo=i;
                }
                _this.padNotapCnt=0;
                break;
                
                
              }
            }
          }
          
        }
        if (_this.padPushTouchNo!=- 1) {
          t = Tonyu.globals.$touches[_this.padPushTouchNo];
          
          if (t.touched==0) {
            _this.padPushTouchNo=- 1;
            
          } else {
            if (_this.diagonalEnable) {
              if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,w,h)) {
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,cw,h)) {
                  _this.padPushL=1;
                }
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh+cw,_this.y-chh-ch,cw,h)) {
                  _this.padPushR=1;
                }
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh-ch,w,ch)) {
                  _this.padPushU=1;
                }
                if (_this.isOnRectWH(t.x,t.y,_this.x-cwh-cw,_this.y-chh+ch,w,ch)) {
                  _this.padPushD=1;
                }
                
              } else {
                subX = t.x-_this.x;
                
                subY = t.y-_this.y;
                
                if (subX<- cwh-(_this.abs(subY)-chh-ch)/2) {
                  _this.padPushL=1;
                }
                if (subX>cwh+(_this.abs(subY)-chh-ch)/2) {
                  _this.padPushR=1;
                }
                if (subY<- chh-(_this.abs(subX)-cwh-cw)/2) {
                  _this.padPushU=1;
                }
                if (subY>chh+(_this.abs(subX)-cwh-cw)/2) {
                  _this.padPushD=1;
                }
                
              }
              
            } else {
              if (! _this.isOnRectWH(t.x,t.y,_this.x-cwh,_this.y-chh,cw,ch)) {
                subX = t.x-_this.x;
                
                subY = t.y-_this.y;
                
                if (subX<=- _this.abs(subY)) {
                  _this.padPushL=1;
                } else {
                  if (subY<=- _this.abs(subX)) {
                    _this.padPushU=1;
                  } else {
                    if (subX>=_this.abs(subY)) {
                      _this.padPushR=1;
                    } else {
                      if (subY>=_this.abs(subX)) {
                        _this.padPushD=1;
                      }
                    }
                  }
                }
                
              }
              
            }
            
          }
          
        }
        if (_this.padPushL) {
          _this.padCntL++;
          _this.panelPushL.x=_this.x-cw+bw/2;
          _this.panelPushL.y=_this.y;
          _this.panelPushL.zOrder=_this.zOrder;
          _this.panelPushL.alpha=_this.alpha;
          _this.panelPushL.layer=_this.layer;
          _this.panelPushL.show();
          
        } else {
          _this.padCntL=0;
          _this.panelPushL.hide();
          
        }
        if (_this.padPushR) {
          _this.padCntR++;
          _this.panelPushR.x=_this.x+cw-bw/2;
          _this.panelPushR.y=_this.y;
          _this.panelPushR.zOrder=_this.zOrder;
          _this.panelPushR.alpha=_this.alpha;
          _this.panelPushR.layer=_this.layer;
          _this.panelPushR.show();
          
        } else {
          _this.padCntR=0;
          _this.panelPushR.hide();
          
        }
        if (_this.padPushU) {
          _this.padCntU++;
          _this.panelPushU.x=_this.x;
          _this.panelPushU.y=_this.y-ch+bh/2;
          _this.panelPushU.zOrder=_this.zOrder;
          _this.panelPushU.alpha=_this.alpha;
          _this.panelPushU.layer=_this.layer;
          _this.panelPushU.show();
          
        } else {
          _this.padCntU=0;
          _this.panelPushU.hide();
          
        }
        if (_this.padPushD) {
          _this.padCntD++;
          _this.panelPushD.x=_this.x;
          _this.panelPushD.y=_this.y+ch-bh/2;
          _this.panelPushD.zOrder=_this.zOrder;
          _this.panelPushD.alpha=_this.alpha;
          _this.panelPushD.layer=_this.layer;
          _this.panelPushD.show();
          
        } else {
          _this.padCntD=0;
          _this.panelPushD.hide();
          
        }
        
        _thread.retVal=_this;return;
      },
      padUpdateMode10002 :function _trc_PadButton_padUpdateMode10002() {
        "use strict";
        var _this=this;
        
      },
      fiber$padUpdateMode10002 :function _trc_PadButton_f_padUpdateMode10002(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      isOnRect :function _trc_PadButton_isOnRect(mx,my,rx,ry,rx2,ry2) {
        "use strict";
        var _this=this;
        
        return (mx>=rx&&mx<rx2&&my>=ry&&my<ry2);
      },
      fiber$isOnRect :function _trc_PadButton_f_isOnRect(_thread,mx,my,rx,ry,rx2,ry2) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=(mx>=rx&&mx<rx2&&my>=ry&&my<ry2);return;
        
        
        _thread.retVal=_this;return;
      },
      isOnRectWH :function _trc_PadButton_isOnRectWH(mx,my,rx,ry,rw,rh) {
        "use strict";
        var _this=this;
        
        return (mx>=rx&&mx<rx+rw&&my>=ry&&my<ry+rh);
      },
      fiber$isOnRectWH :function _trc_PadButton_f_isOnRectWH(_thread,mx,my,rx,ry,rw,rh) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=(mx>=rx&&mx<rx+rw&&my>=ry&&my<ry+rh);return;
        
        
        _thread.retVal=_this;return;
      },
      crashXY :function _trc_PadButton_crashXY(mx,my) {
        "use strict";
        var _this=this;
        
        return (mx>=_this.x-_this.width/2&&mx<_this.x+_this.width/2&&my>=_this.y-_this.height/2&&my<_this.y+_this.height/2);
      },
      fiber$crashXY :function _trc_PadButton_f_crashXY(_thread,mx,my) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=(mx>=_this.x-_this.width/2&&mx<_this.x+_this.width/2&&my>=_this.y-_this.height/2&&my<_this.y+_this.height/2);return;
        
        
        _thread.retVal=_this;return;
      },
      crashXY10000 :function _trc_PadButton_crashXY10000(mx,my) {
        "use strict";
        var _this=this;
        var w;
        var h;
        
        
        w=_this.width+2;
        h=_this.height+2;
        return (mx>=_this.x-w/2-1&&mx<_this.x+w/2-1&&my>=_this.y-h/2-1&&my<_this.y+h/2-1);
      },
      fiber$crashXY10000 :function _trc_PadButton_f_crashXY10000(_thread,mx,my) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var w;
        var h;
        
        
        w=_this.width+2;
        h=_this.height+2;
        _thread.retVal=(mx>=_this.x-w/2-1&&mx<_this.x+w/2-1&&my>=_this.y-h/2-1&&my<_this.y+h/2-1);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"die":{"nowait":true},"hide":{"nowait":true},"show":{"nowait":true},"init":{"nowait":false},"drawPanel":{"nowait":false},"drawPanelMode10000":{"nowait":false},"drawPanelMode10001":{"nowait":false},"drawPanelMode10002":{"nowait":false},"padUpdate":{"nowait":false},"padUpdateMode0":{"nowait":false},"padUpdateMode1":{"nowait":false},"padUpdateMode2":{"nowait":false},"padUpdateMode10000":{"nowait":false},"padUpdateMode10001":{"nowait":false},"padUpdateMode10002":{"nowait":false},"isOnRect":{"nowait":false},"isOnRectWH":{"nowait":false},"crashXY":{"nowait":false},"crashXY10000":{"nowait":false}},"fields":{"loop":{},"died":{},"padCnt":{},"padCntL":{},"padCntR":{},"padCntU":{},"padCntD":{},"panel":{},"panelPush":{},"panelPushL":{},"panelPushR":{},"panelPushU":{},"panelPushD":{},"TOUCHES_MAX":{},"padNotapCnt":{},"padUpdateFrame":{},"mode":{},"pushP":{},"drawMode":{},"pushLP":{},"pushRP":{},"pushUP":{},"pushDP":{},"diagonalEnable":{},"padFillColor":{},"padBorder":{},"padBorderColor":{},"padPushColor":{},"padText":{},"padTextSize":{},"padTextColor":{},"padPush":{},"padPushList":{},"padLPushColor":{},"padRPushColor":{},"padUPushColor":{},"padDPushColor":{},"padLColor":{},"padRColor":{},"padUColor":{},"padDColor":{},"padPushTouchNo":{},"pad":{},"padPushL":{},"padPushR":{},"padPushU":{},"padPushD":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.PadPanel',
  shortName: 'PadPanel',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Panel,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_PadPanel_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_PadPanel_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      fillPolygon3 :function _trc_PadPanel_fillPolygon3(x1,y1,x2,y2,x3,y3,color,color2) {
        "use strict";
        var _this=this;
        
        _this.ctx=_this.getContext();
        _this.ctx.save();
        _this.ctx.beginPath();
        _this.ctx.moveTo(x1,y1);
        _this.ctx.lineTo(x2,y2);
        _this.ctx.lineTo(x3,y3);
        _this.ctx.closePath();
        if (color==null) {
          _this.ctx.fillStyle=_this.fillStyle;
          
        } else {
          _this.ctx.fillStyle=color;
          
        }
        _this.ctx.fill();
        _this.ctx.restore();
      },
      fiber$fillPolygon3 :function _trc_PadPanel_f_fillPolygon3(_thread,x1,y1,x2,y2,x3,y3,color,color2) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_PadPanel_ent_fillPolygon3(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              _this.ctx=_thread.retVal;
              
              _this.ctx.save();
              _this.ctx.beginPath();
              _this.ctx.moveTo(x1,y1);
              _this.ctx.lineTo(x2,y2);
              _this.ctx.lineTo(x3,y3);
              _this.ctx.closePath();
              if (color==null) {
                _this.ctx.fillStyle=_this.fillStyle;
                
              } else {
                _this.ctx.fillStyle=color;
                
              }
              _this.ctx.fill();
              _this.ctx.restore();
              _thread.exit(_this);return;
            }
          }
        });
      },
      fillRect :function _trc_PadPanel_fillRect(x,y,rectWidth,rectHeight,color) {
        "use strict";
        var _this=this;
        
        _this.ctx=_this.getContext();
        _this.ctx.save();
        if (color==null) {
          _this.ctx.fillStyle=_this.fillStyle;
          
        } else {
          _this.ctx.fillStyle=color;
          
        }
        _this.ctx.fillRect(x,y,rectWidth,rectHeight);
        _this.ctx.restore();
      },
      fillText :function _trc_PadPanel_fillText(text,x,y,color,size,align,baseline) {
        "use strict";
        var _this=this;
        var splits;
        var colCount;
        
        _this.ctx=_this.getContext();
        _this.ctx.save();
        text=text+"";
        splits = text.split("\n");
        
        _this.ctx.textAlign=align;
        if (baseline!=null) {
          _this.ctx.textBaseline=baseline;
          
        }
        if (color==null) {
          _this.ctx.fillStyle=_this.fillStyle;
          
        } else {
          _this.ctx.fillStyle=color;
          
        }
        _this.ctx.font=size+"px 'Courier New'";
        colCount = 0;
        for (; colCount<splits.length ; colCount++) {
          {
            _this.ctx.fillText(splits[colCount],x,y);
            y+=size;
          }
        }
        _this.ctx.restore();
      },
      fiber$fillText :function _trc_PadPanel_f_fillText(_thread,text,x,y,color,size,align,baseline) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var splits;
        var colCount;
        
        
        _thread.enter(function _trc_PadPanel_ent_fillText(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getContext(_thread);
              __pc=1;return;
            case 1:
              _this.ctx=_thread.retVal;
              
              _this.ctx.save();
              text=text+"";
              splits = text.split("\n");
              
              _this.ctx.textAlign=align;
              if (baseline!=null) {
                _this.ctx.textBaseline=baseline;
                
              }
              if (color==null) {
                _this.ctx.fillStyle=_this.fillStyle;
                
              } else {
                _this.ctx.fillStyle=color;
                
              }
              _this.ctx.font=size+"px 'Courier New'";
              colCount = 0;
              for (; colCount<splits.length ; colCount++) {
                {
                  _this.ctx.fillText(splits[colCount],x,y);
                  y+=size;
                }
              }
              _this.ctx.restore();
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"fillPolygon3":{"nowait":false},"fillRect":{"nowait":true},"fillText":{"nowait":false}},"fields":{"ctx":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.UILayout',
  shortName: 'UILayout',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_UILayout_main() {
        "use strict";
        var _this=this;
        
        _this.doLayout();
        Tonyu.globals.$Screen.on("resize",Tonyu.bindFunc(_this,_this.doLayout));
        Tonyu.globals.$uiScreen.on("resize",Tonyu.bindFunc(_this,_this.doLayout));
      },
      fiber$main :function _trc_UILayout_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_UILayout_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$doLayout(_thread);
              __pc=1;return;
            case 1:
              
              Tonyu.globals.$Screen.on("resize",Tonyu.bindFunc(_this,_this.doLayout));
              Tonyu.globals.$uiScreen.on("resize",Tonyu.bindFunc(_this,_this.doLayout));
              _thread.exit(_this);return;
            }
          }
        });
      },
      doLayout :function _trc_UILayout_doLayout() {
        "use strict";
        var _this=this;
        var cw;
        var ch;
        var width;
        var height;
        var calcw;
        var calch;
        var scl;
        var isPC;
        
        cw = Tonyu.globals.$uiScreen.width;
        
        ch = Tonyu.globals.$uiScreen.height;
        
        width = Tonyu.globals.$Screen.width;
        
        height = Tonyu.globals.$Screen.height;
        
        calcw = ch/height*width;
        
        calch = cw/width*height;
        
        if (calch>ch) {
          calch=ch;
        }
        if (calcw>cw) {
          calcw=cw;
        }
        scl = 1;
        
        isPC = ! (Tonyu.globals.$Navigator.isTablet()||Tonyu.globals.$Navigator.isMobile());
        
        if (isPC&&_this.shouldDraw1x1(width,height,calcw,calch)) {
          calcw=width;
          calch=height;
          Tonyu.globals.$Screen.scaleX=1;
          
        } else {
          Tonyu.globals.$Screen.scaleX=calcw/width;
          
        }
        Tonyu.globals.$Screen.x=_this.trunc(cw/2)+width/2%1;
        Tonyu.globals.$Screen.y=_this.trunc(ch/2)+height/2%1;
      },
      fiber$doLayout :function _trc_UILayout_f_doLayout(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var cw;
        var ch;
        var width;
        var height;
        var calcw;
        var calch;
        var scl;
        var isPC;
        
        cw = Tonyu.globals.$uiScreen.width;
        
        ch = Tonyu.globals.$uiScreen.height;
        
        width = Tonyu.globals.$Screen.width;
        
        height = Tonyu.globals.$Screen.height;
        
        calcw = ch/height*width;
        
        calch = cw/width*height;
        
        if (calch>ch) {
          calch=ch;
        }
        if (calcw>cw) {
          calcw=cw;
        }
        scl = 1;
        
        isPC = ! (Tonyu.globals.$Navigator.isTablet()||Tonyu.globals.$Navigator.isMobile());
        
        if (isPC&&_this.shouldDraw1x1(width,height,calcw,calch)) {
          calcw=width;
          calch=height;
          Tonyu.globals.$Screen.scaleX=1;
          
        } else {
          Tonyu.globals.$Screen.scaleX=calcw/width;
          
        }
        Tonyu.globals.$Screen.x=_this.trunc(cw/2)+width/2%1;
        Tonyu.globals.$Screen.y=_this.trunc(ch/2)+height/2%1;
        
        _thread.retVal=_this;return;
      },
      shouldDraw1x1 :function _trc_UILayout_shouldDraw1x1(srcw,srch,dstw,dsth) {
        "use strict";
        var _this=this;
        var larger;
        var smaller;
        
        larger = 100;
        
        smaller = 0;
        
        return srcw-smaller<=dstw&&dstw<=srcw+larger&&srch-smaller<=dsth&&dsth<=srch+larger;
      },
      fiber$shouldDraw1x1 :function _trc_UILayout_f_shouldDraw1x1(_thread,srcw,srch,dstw,dsth) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var larger;
        var smaller;
        
        larger = 100;
        
        smaller = 0;
        
        _thread.retVal=srcw-smaller<=dstw&&dstw<=srcw+larger&&srch-smaller<=dsth&&dsth<=srch+larger;return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"doLayout":{"nowait":false},"shouldDraw1x1":{"nowait":false}},"fields":{}}
});
Tonyu.klass.define({
  fullName: 'kernel.WebPage',
  shortName: 'WebPage',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_WebPage_main() {
        "use strict";
        var _this=this;
        
        _this.eventWindowOpen=(function anonymous_114(e) {
          
          if (Tonyu.globals.$RPGAtsumaru) {
            _this.postOptions=_this.postOptions||{};
            Tonyu.globals.$RPGAtsumaru.popups.openLink(_this.postUrl,_this.postOptions.comment);
            
          } else {
            window.open(_this.postUrl);
            
          }
          if (_this.canvas.removeEventListener) {
            _this.canvas.removeEventListener("click",_this.eventWindowOpen,false);
            _this.canvas.removeEventListener("touchend",_this.eventWindowOpen,false);
            _this.listenerExists=false;
            
          } else {
            if (_this.canvas.detachEvent) {
              _this.canvas.detachEvent("onclick",_this.eventWindowOpen);
              _this.canvas.detachEvent("touchend",_this.eventWindowOpen);
              _this.listenerExists=false;
              
            }
          }
        });
      },
      fiber$main :function _trc_WebPage_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.eventWindowOpen=(function anonymous_114(e) {
          
          if (Tonyu.globals.$RPGAtsumaru) {
            _this.postOptions=_this.postOptions||{};
            Tonyu.globals.$RPGAtsumaru.popups.openLink(_this.postUrl,_this.postOptions.comment);
            
          } else {
            window.open(_this.postUrl);
            
          }
          if (_this.canvas.removeEventListener) {
            _this.canvas.removeEventListener("click",_this.eventWindowOpen,false);
            _this.canvas.removeEventListener("touchend",_this.eventWindowOpen,false);
            _this.listenerExists=false;
            
          } else {
            if (_this.canvas.detachEvent) {
              _this.canvas.detachEvent("onclick",_this.eventWindowOpen);
              _this.canvas.detachEvent("touchend",_this.eventWindowOpen);
              _this.listenerExists=false;
              
            }
          }
        });
        
        _thread.retVal=_this;return;
      },
      openNewWindow :function _trc_WebPage_openNewWindow(url,options) {
        "use strict";
        var _this=this;
        
        _this.postUrl=url;
        options=options||{};
        _this.postOptions=options;
        _this.canvas=document.querySelector("canvas.tonyu-canvas")||document.getElementsByTagName("canvas")[0];
        if (! _this.listenerExists) {
          if (_this.canvas.addEventListener) {
            _this.canvas.addEventListener("click",_this.eventWindowOpen,false);
            _this.canvas.addEventListener("touchend",_this.eventWindowOpen,false);
            _this.listenerExists=true;
            
          } else {
            if (_this.canvas.attachEvent) {
              _this.canvas.attachEvent("onclick",_this.eventWindowOpen);
              _this.canvas.attachEvent("touchend",_this.eventWindowOpen);
              _this.listenerExists=true;
              
            }
          }
          
        }
      },
      fiber$openNewWindow :function _trc_WebPage_f_openNewWindow(_thread,url,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.postUrl=url;
        options=options||{};
        _this.postOptions=options;
        _this.canvas=document.querySelector("canvas.tonyu-canvas")||document.getElementsByTagName("canvas")[0];
        if (! _this.listenerExists) {
          if (_this.canvas.addEventListener) {
            _this.canvas.addEventListener("click",_this.eventWindowOpen,false);
            _this.canvas.addEventListener("touchend",_this.eventWindowOpen,false);
            _this.listenerExists=true;
            
          } else {
            if (_this.canvas.attachEvent) {
              _this.canvas.attachEvent("onclick",_this.eventWindowOpen);
              _this.canvas.attachEvent("touchend",_this.eventWindowOpen);
              _this.listenerExists=true;
              
            }
          }
          
        }
        
        _thread.retVal=_this;return;
      },
      openPage :function _trc_WebPage_openPage(url) {
        "use strict";
        var _this=this;
        
        window.location.href=url;
      },
      fiber$openPage :function _trc_WebPage_f_openPage(_thread,url) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        window.location.href=url;
        
        _thread.retVal=_this;return;
      },
      openTweet :function _trc_WebPage_openTweet(text,url,hashtags,via,related,tl) {
        "use strict";
        var _this=this;
        var sendUrl;
        
        sendUrl = "https://twitter.com/intent/tweet?";
        
        sendUrl+="text="+encodeURIComponent(text);
        if (url!=null) {
          sendUrl+="&";
          sendUrl+="url="+encodeURIComponent(url);
          
        }
        if (hashtags!=null) {
          sendUrl+="&";
          sendUrl+="hashtags="+encodeURIComponent(hashtags);
          
        }
        if (via!=null) {
          sendUrl+="&";
          sendUrl+="via="+encodeURIComponent(via);
          
        }
        if (related!=null) {
          sendUrl+="&";
          sendUrl+="related="+encodeURIComponent(related);
          
        }
        if (tl) {
          sendUrl+="&";
          sendUrl+="source=webclient";
          
        }
        _this.openNewWindow(sendUrl,{comment: text});
      },
      fiber$openTweet :function _trc_WebPage_f_openTweet(_thread,text,url,hashtags,via,related,tl) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var sendUrl;
        
        sendUrl = "https://twitter.com/intent/tweet?";
        
        sendUrl+="text="+encodeURIComponent(text);
        if (url!=null) {
          sendUrl+="&";
          sendUrl+="url="+encodeURIComponent(url);
          
        }
        if (hashtags!=null) {
          sendUrl+="&";
          sendUrl+="hashtags="+encodeURIComponent(hashtags);
          
        }
        if (via!=null) {
          sendUrl+="&";
          sendUrl+="via="+encodeURIComponent(via);
          
        }
        if (related!=null) {
          sendUrl+="&";
          sendUrl+="related="+encodeURIComponent(related);
          
        }
        if (tl) {
          sendUrl+="&";
          sendUrl+="source=webclient";
          
        }
        
        _thread.enter(function _trc_WebPage_ent_openTweet(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$openNewWindow(_thread, sendUrl, {comment: text});
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      openShareTweet :function _trc_WebPage_openShareTweet(text,url,hashtags,via,related,tl) {
        "use strict";
        var _this=this;
        var sendUrl;
        var tempText;
        
        sendUrl = "https://twitter.com/intent/tweet?";
        
        if (arguments.length==2) {
          if (text==null||text.match(/^http/)) {
            tempText = text;
            
            text=url;
            url=tempText;
            
          }
          
        }
        sendUrl+="text="+encodeURIComponent(text);
        sendUrl+="&";
        if (url==null) {
          sendUrl+="url="+window.location.href;
          
        } else {
          sendUrl+="url="+encodeURIComponent(url);
          
        }
        if (hashtags!=null) {
          sendUrl+="&";
          sendUrl+="hashtags="+encodeURIComponent(hashtags);
          
        }
        if (via!=null) {
          sendUrl+="&";
          sendUrl+="via="+encodeURIComponent(via);
          
        }
        if (related!=null) {
          sendUrl+="&";
          sendUrl+="related="+encodeURIComponent(related);
          
        }
        if (tl) {
          sendUrl+="&";
          sendUrl+="source=webclient";
          
        }
        _this.openNewWindow(sendUrl,{comment: text});
      },
      fiber$openShareTweet :function _trc_WebPage_f_openShareTweet(_thread,text,url,hashtags,via,related,tl) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var sendUrl;
        var tempText;
        
        sendUrl = "https://twitter.com/intent/tweet?";
        
        if (_arguments.length==2) {
          if (text==null||text.match(/^http/)) {
            tempText = text;
            
            text=url;
            url=tempText;
            
          }
          
        }
        sendUrl+="text="+encodeURIComponent(text);
        sendUrl+="&";
        if (url==null) {
          sendUrl+="url="+window.location.href;
          
        } else {
          sendUrl+="url="+encodeURIComponent(url);
          
        }
        if (hashtags!=null) {
          sendUrl+="&";
          sendUrl+="hashtags="+encodeURIComponent(hashtags);
          
        }
        if (via!=null) {
          sendUrl+="&";
          sendUrl+="via="+encodeURIComponent(via);
          
        }
        if (related!=null) {
          sendUrl+="&";
          sendUrl+="related="+encodeURIComponent(related);
          
        }
        if (tl) {
          sendUrl+="&";
          sendUrl+="source=webclient";
          
        }
        
        _thread.enter(function _trc_WebPage_ent_openShareTweet(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$openNewWindow(_thread, sendUrl, {comment: text});
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      showLink :function _trc_WebPage_showLink(url,text,options) {
        "use strict";
        var _this=this;
        var $;
        var domain;
        var sz;
        var target;
        var d;
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        $ = window.$;
        
        
        options=options||{};
        sz = options.size||20;
        
        target = options.target||"_new";
        
        url.replace(/^https?:\/\/([^\/]+)/,(function anonymous_5064(_,d) {
          
          domain=d;
        }));
        d = $("<div>").attr({title: "Open URL"}).append($("<div>").append(domain),$("<a>").css({font_size: sz+"px"}).text(text).attr({href: url,target: target}));
        
        d.dialog();
      },
      fiber$showLink :function _trc_WebPage_f_showLink(_thread,url,text,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var $;
        var domain;
        var sz;
        var target;
        var d;
        
        Tonyu.globals.$currentProject.requestPlugin("jquery_ui");
        $ = window.$;
        
        
        options=options||{};
        sz = options.size||20;
        
        target = options.target||"_new";
        
        url.replace(/^https?:\/\/([^\/]+)/,(function anonymous_5064(_,d) {
          
          domain=d;
        }));
        d = $("<div>").attr({title: "Open URL"}).append($("<div>").append(domain),$("<a>").css({font_size: sz+"px"}).text(text).attr({href: url,target: target}));
        
        d.dialog();
        
        _thread.retVal=_this;return;
      },
      param :function _trc_WebPage_param(name,def) {
        "use strict";
        var _this=this;
        
        return Util.getQueryString(name,def);
      },
      fiber$param :function _trc_WebPage_f_param(_thread,name,def) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _thread.retVal=Util.getQueryString(name,def);return;
        
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"openNewWindow":{"nowait":false},"openPage":{"nowait":false},"openTweet":{"nowait":false},"openShareTweet":{"nowait":false},"showLink":{"nowait":false},"param":{"nowait":false}},"fields":{"eventWindowOpen":{},"postOptions":{},"postUrl":{},"canvas":{},"listenerExists":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.Boot',
  shortName: 'Boot',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Actor,
  includes: [Tonyu.classes.kernel.T2MediaPlayer],
  methods: function (__superClass) {
    return {
      main :function _trc_Boot_main() {
        "use strict";
        var _this=this;
        
        if (typeof  performance==="undefined") {
          _this.window.performance={};
          
        }
        if (! performance.now) {
          performance.now=(function now() {
            
            return Date.now();
          });
          
        }
        Tonyu.resetLoopCheck(10000);
        Tonyu.globals.$Boot=_this;
        _this.setScheduler(new Tonyu.classes.kernel.Scheduler);
        _this.initGlobals();
        _this.initLayers();
        _this.initPeripherals();
        _this.loadPlugins();
        if (Tonyu.globals.$customLoading) {
          _this.tt = Tonyu.thread();
          
          _this.tt.apply(_this,"loadAssets",[true]);
          _this.tt.steps();
          
        } else {
          _this.loadAssets();
          
        }
        _this.createMainObject();
        _this.progress();
        _this.mainLoop();
      },
      fiber$main :function _trc_Boot_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  performance==="undefined") {
          _this.window.performance={};
          
        }
        if (! performance.now) {
          performance.now=(function now() {
            
            return Date.now();
          });
          
        }
        Tonyu.resetLoopCheck(10000);
        Tonyu.globals.$Boot=_this;
        
        _thread.enter(function _trc_Boot_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setScheduler(_thread, new Tonyu.classes.kernel.Scheduler);
              __pc=1;return;
            case 1:
              
              _this.fiber$initGlobals(_thread);
              __pc=2;return;
            case 2:
              
              _this.fiber$initLayers(_thread);
              __pc=3;return;
            case 3:
              
              _this.fiber$initPeripherals(_thread);
              __pc=4;return;
            case 4:
              
              _this.fiber$loadPlugins(_thread);
              __pc=5;return;
            case 5:
              
              if (!(Tonyu.globals.$customLoading)) { __pc=6     ; break; }
              {
                _this.tt = Tonyu.thread();
                
                _this.tt.apply(_this,"loadAssets",[true]);
                _this.tt.steps();
              }
              __pc=8     ;break;
            case 6     :
              _this.fiber$loadAssets(_thread);
              __pc=7;return;
            case 7:
              
            case 8     :
              
              _this.fiber$createMainObject(_thread);
              __pc=9;return;
            case 9:
              
              _this.fiber$progress(_thread);
              __pc=10;return;
            case 10:
              
              _this.fiber$mainLoop(_thread);
              __pc=11;return;
            case 11:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initialize :function _trc_Boot_initialize(param) {
        "use strict";
        var _this=this;
        
        _this.extend(param);
        _this.initSymbol();
        _this._th=Tonyu.thread();
        _this._th.apply(_this,"main");
        _this._th.stepsLoop();
        _this.on("die",(function anonymous_1044() {
          
          if (_this._th) {
            _this._th.kill();
          }
        }));
      },
      initSymbol :function _trc_Boot_initSymbol() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Symbol={subActors: "__SUBACTOR"};
      },
      fiber$initSymbol :function _trc_Boot_f_initSymbol(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$Symbol={subActors: "__SUBACTOR"};
        
        _thread.retVal=_this;return;
      },
      setScheduler :function _trc_Boot_setScheduler(s) {
        "use strict";
        var _this=this;
        
        _this._scheduler=Tonyu.globals.$Scheduler=s;
      },
      fiber$setScheduler :function _trc_Boot_f_setScheduler(_thread,s) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this._scheduler=Tonyu.globals.$Scheduler=s;
        
        _thread.retVal=_this;return;
      },
      moveToScheduler :function _trc_Boot_moveToScheduler(a,oldS,newS) {
        "use strict";
        var _this=this;
        
        a._scheduler=newS;
        oldS.findByThreadGroup(a).forEach((function anonymous_1343(th) {
          
          if (th.scheduled===newS) {
            return _this;
          }
          oldS.unschedule(th);
          newS.addToNext(th);
          newS.checkDuplicate();
        }));
      },
      fiber$moveToScheduler :function _trc_Boot_f_moveToScheduler(_thread,a,oldS,newS) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        a._scheduler=newS;
        oldS.findByThreadGroup(a).forEach((function anonymous_1343(th) {
          
          if (th.scheduled===newS) {
            return _this;
          }
          oldS.unschedule(th);
          newS.addToNext(th);
          newS.checkDuplicate();
        }));
        
        _thread.retVal=_this;return;
      },
      timeStop :function _trc_Boot_timeStop(except) {
        "use strict";
        var _this=this;
        var oldS;
        var newS;
        var res;
        
        oldS = _this._scheduler;
        
        _this.setScheduler(new Tonyu.classes.kernel.Scheduler);
        newS = _this._scheduler;
        
        oldS.doTimeStop();
        res = {release: (function anonymous_1689(a) {
          
          if (! a) {
            return res.releaseAll();
          }
          a._scheduler=newS;
          _this.moveToScheduler(a,oldS,newS);
        }),releaseAll: (function anonymous_2090() {
          var a;
          var e;
          var _it_6724;
          
          a = Tonyu.globals.$Screen.all();
          
          _it_6724=Tonyu.iterator(a,1);
          while(_it_6724.next()) {
            e=_it_6724[0];
            
            res.release(e);
            
          }
        })};
        
        if (except) {
          res.release(except);
        }
        return res;
      },
      fiber$timeStop :function _trc_Boot_f_timeStop(_thread,except) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var oldS;
        var newS;
        var res;
        
        oldS = _this._scheduler;
        
        
        _thread.enter(function _trc_Boot_ent_timeStop(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$setScheduler(_thread, new Tonyu.classes.kernel.Scheduler);
              __pc=1;return;
            case 1:
              
              newS = _this._scheduler;
              
              oldS.doTimeStop();
              res = {release: (function anonymous_1689(a) {
                
                if (! a) {
                  return res.releaseAll();
                }
                a._scheduler=newS;
                _this.moveToScheduler(a,oldS,newS);
              }),releaseAll: (function anonymous_2090() {
                var a;
                var e;
                var _it_6724;
                
                a = Tonyu.globals.$Screen.all();
                
                _it_6724=Tonyu.iterator(a,1);
                while(_it_6724.next()) {
                  e=_it_6724[0];
                  
                  res.release(e);
                  
                }
              })};
              
              if (except) {
                res.release(except);
              }
              _thread.exit(res);return;
              _thread.exit(_this);return;
            }
          }
        });
      },
      update :function _trc_Boot_update() {
        "use strict";
        var _this=this;
        
        _this.waitFor(Tonyu.timeout(50));
      },
      fiber$update :function _trc_Boot_f_update(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Boot_ent_update(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$waitFor(_thread, Tonyu.timeout(50));
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      initGlobals :function _trc_Boot_initGlobals() {
        "use strict";
        var _this=this;
        var opt;
        var g;
        var name;
        var _it_6728;
        
        opt = Tonyu.globals.$currentProject.getOptions();
        
        if (opt.run&&opt.run.globals) {
          g = opt.run.globals;
          
          _it_6728=Tonyu.iterator(g,1);
          while(_it_6728.next()) {
            name=_it_6728[0];
            
            Tonyu.setGlobal(name,g[name]);
            
          }
          
        }
        Tonyu.globals.$fixProductOrder=true;
      },
      fiber$initGlobals :function _trc_Boot_f_initGlobals(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var opt;
        var g;
        var name;
        var _it_6728;
        
        opt = Tonyu.globals.$currentProject.getOptions();
        
        if (opt.run&&opt.run.globals) {
          g = opt.run.globals;
          
          _it_6728=Tonyu.iterator(g,1);
          while(_it_6728.next()) {
            name=_it_6728[0];
            
            Tonyu.setGlobal(name,g[name]);
            
          }
          
        }
        Tonyu.globals.$fixProductOrder=true;
        
        _thread.retVal=_this;return;
      },
      initPeripherals :function _trc_Boot_initPeripherals() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$InputDevice=new Tonyu.classes.kernel.InputDevice;
        Tonyu.globals.$Screen.multiLayerTouches=new Tonyu.classes.kernel.MultiLayerTouches({screen: Tonyu.globals.$Screen});
        Tonyu.globals.$InputDevice.on("touchstart",(function anonymous_2822(e) {
          var shape;
          var f;
          var a;
          
          
          f = e.finger;
          
          if (e.byMouse) {
            shape=new Tonyu.classes.kernel.PointShape({x: f.x,y: f.y,layer: f.layer});
            
          } else {
            shape=new Tonyu.classes.kernel.RectShape({x: f.x,y: f.y,width: 32,height: 32,layer: f.layer});
            
          }
          e.shape=shape;
          a = Tonyu.globals.$Screen.multiLayerTouches.findActor(shape);
          
          if (a) {
            e.actor=a;
            f.layer=a.layer;
            a.fireEvent("touch",e);
            
          }
        }));
        Tonyu.globals.$InputBox=UIDiag;
        Tonyu.globals.$InputDevice.initCanvasEvents(_this.cvj);
        Tonyu.globals.$ObjectPool=new Tonyu.classes.kernel.ObjectPool;
        Tonyu.globals.$pat_fruits=30;
        Tonyu.globals.$Keys=new Tonyu.classes.kernel.Keys;
        Tonyu.globals.$GamePad=new Tonyu.classes.kernel.GamePad;
        Tonyu.globals.$Math=Math;
        Tonyu.globals.$JSON=JSON;
        Tonyu.globals.$DeferredUtil=FS.DeferredUtil;
        Tonyu.globals.$consolePanel=new Tonyu.classes.kernel.ConsolePanel({align: "center",x: 465/2,y: 465/2,width: 465,height: 465,zOrder: - 10,layer: Tonyu.globals.$FrontSprites});
        Tonyu.globals.$printColor=null;
        Tonyu.globals.$printSize=20;
        Tonyu.globals.$consolePrintY=465;
        Tonyu.globals.$panel=new Tonyu.classes.kernel.Panel({align: "center",x: Tonyu.globals.$screenWidth/2,y: Tonyu.globals.$screenHeight/2,width: Tonyu.globals.$screenWidth,height: Tonyu.globals.$screenHeight,zOrder: - 1,layer: Tonyu.globals.$FrontSprites});
        _this.initFPSParams();
        Tonyu.globals.$WebPage=new Tonyu.classes.kernel.WebPage;
        Tonyu.globals.$Navigator=new Tonyu.classes.kernel.Navigator;
        Tonyu.globals.$API=new Tonyu.classes.kernel.API;
        Tonyu.globals.$Zip=new Tonyu.classes.kernel.Zip;
        if (typeof  RPGAtsumaru!=="undefined") {
          Tonyu.globals.$RPGAtsumaru=RPGAtsumaru;
          
        }
        Tonyu.globals.$mouseX=Tonyu.globals.$mouseX||0;
        Tonyu.globals.$mouseY=Tonyu.globals.$mouseY||0;
        Tonyu.globals.$imageList=[];
        _this.debugCnt=50;
        _this.newLimit=1000;
        Tonyu.globals.$printLimit=500;
        if (Tonyu.globals.$debugger) {
          _this.autoReload=Tonyu.globals.$debugger.startWithAutoReload;
          Tonyu.globals.$debugger.on("classChanged",(function anonymous_4353() {
            
            _this.getMainClass();
            if (typeof  _this.autoReload==="function") {
              return _this.autoReload({mainClass: _this.mainClass});
              
            }
            if (_this.autoReload===true&&_this.mainClass) {
              _this.loadPage(_this.mainClass);
              
            }
          }));
          
        }
        _this.pageStack=[];
      },
      fiber$initPeripherals :function _trc_Boot_f_initPeripherals(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$InputDevice=new Tonyu.classes.kernel.InputDevice;
        Tonyu.globals.$Screen.multiLayerTouches=new Tonyu.classes.kernel.MultiLayerTouches({screen: Tonyu.globals.$Screen});
        Tonyu.globals.$InputDevice.on("touchstart",(function anonymous_2822(e) {
          var shape;
          var f;
          var a;
          
          
          f = e.finger;
          
          if (e.byMouse) {
            shape=new Tonyu.classes.kernel.PointShape({x: f.x,y: f.y,layer: f.layer});
            
          } else {
            shape=new Tonyu.classes.kernel.RectShape({x: f.x,y: f.y,width: 32,height: 32,layer: f.layer});
            
          }
          e.shape=shape;
          a = Tonyu.globals.$Screen.multiLayerTouches.findActor(shape);
          
          if (a) {
            e.actor=a;
            f.layer=a.layer;
            a.fireEvent("touch",e);
            
          }
        }));
        Tonyu.globals.$InputBox=UIDiag;
        Tonyu.globals.$InputDevice.initCanvasEvents(_this.cvj);
        Tonyu.globals.$ObjectPool=new Tonyu.classes.kernel.ObjectPool;
        Tonyu.globals.$pat_fruits=30;
        Tonyu.globals.$Keys=new Tonyu.classes.kernel.Keys;
        Tonyu.globals.$GamePad=new Tonyu.classes.kernel.GamePad;
        Tonyu.globals.$Math=Math;
        Tonyu.globals.$JSON=JSON;
        Tonyu.globals.$DeferredUtil=FS.DeferredUtil;
        Tonyu.globals.$consolePanel=new Tonyu.classes.kernel.ConsolePanel({align: "center",x: 465/2,y: 465/2,width: 465,height: 465,zOrder: - 10,layer: Tonyu.globals.$FrontSprites});
        Tonyu.globals.$printColor=null;
        Tonyu.globals.$printSize=20;
        Tonyu.globals.$consolePrintY=465;
        Tonyu.globals.$panel=new Tonyu.classes.kernel.Panel({align: "center",x: Tonyu.globals.$screenWidth/2,y: Tonyu.globals.$screenHeight/2,width: Tonyu.globals.$screenWidth,height: Tonyu.globals.$screenHeight,zOrder: - 1,layer: Tonyu.globals.$FrontSprites});
        _this.initFPSParams();
        Tonyu.globals.$WebPage=new Tonyu.classes.kernel.WebPage;
        Tonyu.globals.$Navigator=new Tonyu.classes.kernel.Navigator;
        Tonyu.globals.$API=new Tonyu.classes.kernel.API;
        Tonyu.globals.$Zip=new Tonyu.classes.kernel.Zip;
        if (typeof  RPGAtsumaru!=="undefined") {
          Tonyu.globals.$RPGAtsumaru=RPGAtsumaru;
          
        }
        Tonyu.globals.$mouseX=Tonyu.globals.$mouseX||0;
        Tonyu.globals.$mouseY=Tonyu.globals.$mouseY||0;
        Tonyu.globals.$imageList=[];
        _this.debugCnt=50;
        _this.newLimit=1000;
        Tonyu.globals.$printLimit=500;
        
        _thread.enter(function _trc_Boot_ent_initPeripherals(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(Tonyu.globals.$debugger)) { __pc=1     ; break; }
              _this.autoReload=Tonyu.globals.$debugger.startWithAutoReload;
              Tonyu.globals.$debugger.on("classChanged",(function anonymous_4353() {
                
                _this.getMainClass();
                if (typeof  _this.autoReload==="function") {
                  return _this.autoReload({mainClass: _this.mainClass});
                  
                }
                if (_this.autoReload===true&&_this.mainClass) {
                  _this.loadPage(_this.mainClass);
                  
                }
              }));
            case 1     :
              
              _this.pageStack=[];
              _thread.exit(_this);return;
            }
          }
        });
      },
      initLayers :function _trc_Boot_initLayers() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$screenWidth=465;
        Tonyu.globals.$screenHeight=465;
        Tonyu.globals.$mainLayer=Tonyu.globals.$Sprites=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$frontLayer=Tonyu.globals.$FrontSprites=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$backLayer=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$uiLayer=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$sprites3D=new Tonyu.classes.kernel.Sprites3D;
        Tonyu.globals.$camera3D=new Tonyu.classes.kernel.Camera3D({layer: Tonyu.globals.$sprites3D,x: 0,y: 0,z: - 100});
        Tonyu.globals.$mainLayer3D=new Tonyu.classes.kernel.Layer3D({group: Tonyu.globals.$sprites3D,camera: Tonyu.globals.$camera3D});
        _this.cvj=Tonyu.globals.$mainCanvas||$("canvas");
        Tonyu.globals.$Screen=new Tonyu.classes.kernel.Screen({width: Tonyu.globals.$screenWidth,height: Tonyu.globals.$screenHeight,layer: Tonyu.globals.$uiLayer});
        Tonyu.globals.$Screen.on("resize",(function anonymous_5249() {
          
          Tonyu.globals.$screenWidth=Tonyu.globals.$Screen.width;
          Tonyu.globals.$screenHeight=Tonyu.globals.$Screen.height;
          if (Tonyu.globals.$panel) {
            Tonyu.globals.$panel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
            Tonyu.globals.$panel.x=Tonyu.globals.$screenWidth/2;
            Tonyu.globals.$panel.y=Tonyu.globals.$screenHeight/2;
            
          }
          if (Tonyu.globals.$consolePanel) {
            Tonyu.globals.$consolePanel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
            Tonyu.globals.$consolePanel.x=Tonyu.globals.$screenWidth/2;
            Tonyu.globals.$consolePanel.y=Tonyu.globals.$screenHeight/2;
            Tonyu.globals.$consolePrintY=Tonyu.globals.$screenHeight;
            
          }
        }));
        Tonyu.globals.$Screen.addLayer(Tonyu.globals.$frontLayer);
        Tonyu.globals.$camera2D=Tonyu.globals.$Screen.addLayer(Tonyu.globals.$mainLayer);
        Tonyu.globals.$Screen.addLayer(Tonyu.globals.$mainLayer3D);
        Tonyu.globals.$Screen.addLayer(Tonyu.globals.$backLayer);
        Tonyu.globals.$Screen.setBGColor("rgb(20,80,180)");
        Tonyu.globals.$Screen.selectLayer(Tonyu.globals.$mainLayer);
        Tonyu.globals.$rootLayer=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$uiScreen=new Tonyu.classes.kernel.Screen({canvas: _this.cvj[0],layer: Tonyu.globals.$rootLayer});
        Tonyu.globals.$uiScreen.setBGColor("#888");
        Tonyu.globals.$uiScreen.addLayer(Tonyu.globals.$uiLayer);
        Tonyu.globals.$layoutManager=new Tonyu.classes.kernel.UILayout({layer: Tonyu.globals.$uiLayer});
      },
      fiber$initLayers :function _trc_Boot_f_initLayers(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$screenWidth=465;
        Tonyu.globals.$screenHeight=465;
        Tonyu.globals.$mainLayer=Tonyu.globals.$Sprites=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$frontLayer=Tonyu.globals.$FrontSprites=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$backLayer=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$uiLayer=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$sprites3D=new Tonyu.classes.kernel.Sprites3D;
        Tonyu.globals.$camera3D=new Tonyu.classes.kernel.Camera3D({layer: Tonyu.globals.$sprites3D,x: 0,y: 0,z: - 100});
        Tonyu.globals.$mainLayer3D=new Tonyu.classes.kernel.Layer3D({group: Tonyu.globals.$sprites3D,camera: Tonyu.globals.$camera3D});
        _this.cvj=Tonyu.globals.$mainCanvas||$("canvas");
        Tonyu.globals.$Screen=new Tonyu.classes.kernel.Screen({width: Tonyu.globals.$screenWidth,height: Tonyu.globals.$screenHeight,layer: Tonyu.globals.$uiLayer});
        Tonyu.globals.$Screen.on("resize",(function anonymous_5249() {
          
          Tonyu.globals.$screenWidth=Tonyu.globals.$Screen.width;
          Tonyu.globals.$screenHeight=Tonyu.globals.$Screen.height;
          if (Tonyu.globals.$panel) {
            Tonyu.globals.$panel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
            Tonyu.globals.$panel.x=Tonyu.globals.$screenWidth/2;
            Tonyu.globals.$panel.y=Tonyu.globals.$screenHeight/2;
            
          }
          if (Tonyu.globals.$consolePanel) {
            Tonyu.globals.$consolePanel.setPanel(Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
            Tonyu.globals.$consolePanel.x=Tonyu.globals.$screenWidth/2;
            Tonyu.globals.$consolePanel.y=Tonyu.globals.$screenHeight/2;
            Tonyu.globals.$consolePrintY=Tonyu.globals.$screenHeight;
            
          }
        }));
        Tonyu.globals.$Screen.addLayer(Tonyu.globals.$frontLayer);
        Tonyu.globals.$camera2D=Tonyu.globals.$Screen.addLayer(Tonyu.globals.$mainLayer);
        Tonyu.globals.$Screen.addLayer(Tonyu.globals.$mainLayer3D);
        Tonyu.globals.$Screen.addLayer(Tonyu.globals.$backLayer);
        Tonyu.globals.$Screen.setBGColor("rgb(20,80,180)");
        Tonyu.globals.$Screen.selectLayer(Tonyu.globals.$mainLayer);
        Tonyu.globals.$rootLayer=new Tonyu.classes.kernel.Sprites();
        Tonyu.globals.$uiScreen=new Tonyu.classes.kernel.Screen({canvas: _this.cvj[0],layer: Tonyu.globals.$rootLayer});
        Tonyu.globals.$uiScreen.setBGColor("#888");
        Tonyu.globals.$uiScreen.addLayer(Tonyu.globals.$uiLayer);
        Tonyu.globals.$layoutManager=new Tonyu.classes.kernel.UILayout({layer: Tonyu.globals.$uiLayer});
        
        _thread.retVal=_this;return;
      },
      debug :function _trc_Boot_debug() {
        "use strict";
        var _this=this;
        var a;
        
        if (! _this.debugCnt) {
          return _this;
        }
        _this.debugCnt--;
        a = Array.prototype.slice.call(arguments);
        
        a.unshift(_this.debugCnt);
        a.unshift("DEBUG");
        console.log.apply(console,a);
      },
      fiber$debug :function _trc_Boot_f_debug(_thread) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var a;
        
        if (! _this.debugCnt) {
          _thread.retVal=_this;return;
          
        }
        _this.debugCnt--;
        a = Array.prototype.slice.call(_arguments);
        
        a.unshift(_this.debugCnt);
        a.unshift("DEBUG");
        console.log.apply(console,a);
        
        _thread.retVal=_this;return;
      },
      loadPlugins :function _trc_Boot_loadPlugins() {
        "use strict";
        var _this=this;
        
        _this.progress("Loading plugins..");
        _this.runAsync((function anonymous_6472(r) {
          
          Tonyu.globals.$currentProject.loadPlugins(r);
        }));
        _this.progress("Loading plugins done");
      },
      fiber$loadPlugins :function _trc_Boot_f_loadPlugins(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Boot_ent_loadPlugins(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$progress(_thread, "Loading plugins..");
              __pc=1;return;
            case 1:
              
              _this.fiber$runAsync(_thread, (function anonymous_6472(r) {
                
                Tonyu.globals.$currentProject.loadPlugins(r);
              }));
              __pc=2;return;
            case 2:
              
              _this.fiber$progress(_thread, "Loading plugins done");
              __pc=3;return;
            case 3:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      loadImages :function _trc_Boot_loadImages() {
        "use strict";
        var _this=this;
        var rs;
        var r;
        var name;
        var val;
        var _it_6739;
        
        _this.progress("Loading pats..");
        rs = Tonyu.globals.$currentProject.getResource();
        
        
        r=_this.runAsync((function anonymous_6691(succ) {
          
          ImageList.load(rs.images,succ,{baseDir: Tonyu.globals.$currentProject.getDir(),prj: Tonyu.globals.$currentProject});
        }));
        Tonyu.globals.$imageList=r[0];
        _it_6739=Tonyu.iterator(r[0].names,2);
        while(_it_6739.next()) {
          name=_it_6739[0];
          val=_it_6739[1];
          
          Tonyu.setGlobal(name,val);
          
        }
        _this.progress("Loading pats done.");
      },
      fiber$loadImages :function _trc_Boot_f_loadImages(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var rs;
        var r;
        var name;
        var val;
        var _it_6739;
        
        
        _thread.enter(function _trc_Boot_ent_loadImages(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$progress(_thread, "Loading pats..");
              __pc=1;return;
            case 1:
              
              rs = Tonyu.globals.$currentProject.getResource();
              
              
              _this.fiber$runAsync(_thread, (function anonymous_6691(succ) {
                
                ImageList.load(rs.images,succ,{baseDir: Tonyu.globals.$currentProject.getDir(),prj: Tonyu.globals.$currentProject});
              }));
              __pc=2;return;
            case 2:
              r=_thread.retVal;
              
              Tonyu.globals.$imageList=r[0];
              _it_6739=Tonyu.iterator(r[0].names,2);
              while(_it_6739.next()) {
                name=_it_6739[0];
                val=_it_6739[1];
                
                Tonyu.setGlobal(name,val);
                
              }
              _this.fiber$progress(_thread, "Loading pats done.");
              __pc=3;return;
            case 3:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      loadSounds :function _trc_Boot_loadSounds() {
        "use strict";
        var _this=this;
        
        _this.progress("Loading sounds...");
        _this.initT2MediaPlayer();
        _this.loadFromProject(Tonyu.globals.$currentProject);
        _this.progress("Loading sounds done.");
        _this.on("stop",(function anonymous_7218() {
          
          _this.allResetBGM();
        }));
        Tonyu.globals.$sound=_this;
      },
      fiber$loadSounds :function _trc_Boot_f_loadSounds(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Boot_ent_loadSounds(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$progress(_thread, "Loading sounds...");
              __pc=1;return;
            case 1:
              
              _this.fiber$initT2MediaPlayer(_thread);
              __pc=2;return;
            case 2:
              
              _this.fiber$loadFromProject(_thread, Tonyu.globals.$currentProject);
              __pc=3;return;
            case 3:
              
              _this.fiber$progress(_thread, "Loading sounds done.");
              __pc=4;return;
            case 4:
              
              _this.on("stop",(function anonymous_7218() {
                
                _this.allResetBGM();
              }));
              Tonyu.globals.$sound=_this;
              _thread.exit(_this);return;
            }
          }
        });
      },
      loadAssets :function _trc_Boot_loadAssets(para) {
        "use strict";
        var _this=this;
        
        _this.loadImages();
        _this.loadSounds();
        _this.loadedAll=true;
        if (para) {
          _this.progress();
        }
      },
      fiber$loadAssets :function _trc_Boot_f_loadAssets(_thread,para) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Boot_ent_loadAssets(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$loadImages(_thread);
              __pc=1;return;
            case 1:
              
              _this.fiber$loadSounds(_thread);
              __pc=2;return;
            case 2:
              
              _this.loadedAll=true;
              if (!(para)) { __pc=4     ; break; }
              _this.fiber$progress(_thread);
              __pc=3;return;
            case 3:
              
            case 4     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      getIDE :function _trc_Boot_getIDE() {
        "use strict";
        var _this=this;
        var e;
        
        try {
          return (parent.Tonyu.globals.$currentProject.ide);
          
        } catch (e) {
          return null;
          
        }
      },
      fiber$getIDE :function _trc_Boot_f_getIDE(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var e;
        
        try {
          _thread.retVal=(parent.Tonyu.globals.$currentProject.ide);return;
          
          
        } catch (e) {
          _thread.retVal=null;return;
          
          
        }
        
        _thread.retVal=_this;return;
      },
      getMainClass :function _trc_Boot_getMainClass() {
        "use strict";
        var _this=this;
        var o;
        var mainClassName;
        
        o = Tonyu.globals.$currentProject.getOptions();
        
        mainClassName = o.run.mainClass;
        
        _this.progress("MainClass= "+mainClassName);
        _this.mainClass=Tonyu.getClass(mainClassName);
        if (! _this.mainClass) {
          throw new Error(mainClassName+" というクラスはありません");
          
          
        }
      },
      fiber$getMainClass :function _trc_Boot_f_getMainClass(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var o;
        var mainClassName;
        
        o = Tonyu.globals.$currentProject.getOptions();
        
        mainClassName = o.run.mainClass;
        
        
        _thread.enter(function _trc_Boot_ent_getMainClass(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$progress(_thread, "MainClass= "+mainClassName);
              __pc=1;return;
            case 1:
              
              _this.mainClass=Tonyu.getClass(mainClassName);
              if (! _this.mainClass) {
                throw new Error(mainClassName+" というクラスはありません");
                
                
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      createMainObject :function _trc_Boot_createMainObject() {
        "use strict";
        var _this=this;
        
        _this.getMainClass();
        Tonyu.globals.$excludeFromAll=Tonyu.globals.$Screen.all();
        new _this.mainClass();
      },
      fiber$createMainObject :function _trc_Boot_f_createMainObject(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Boot_ent_createMainObject(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$getMainClass(_thread);
              __pc=1;return;
            case 1:
              
              Tonyu.globals.$excludeFromAll=Tonyu.globals.$Screen.all();
              new _this.mainClass();
              _thread.exit(_this);return;
            }
          }
        });
      },
      loadPage :function _trc_Boot_loadPage(page,arg,options) {
        "use strict";
        var _this=this;
        var push;
        var pass;
        var res;
        var oldS;
        var newS;
        var saved;
        var pa;
        var _it_6749;
        var _it_6750;
        var a;
        
        switch (typeof  arg) {
        case "function":
          options={onLoad: arg};
          arg=undefined;
          break;
          
        case "boolean":
          options={push: arg};
          arg=undefined;
          break;
          
        }
        options=options||{};
        push = (options.push);
        
        pass = (options.pass||[]).concat(Tonyu.globals.$excludeFromAll.toArray());
        
        
        oldS = _this._scheduler;
        
        if (! page) {
          saved = _this.pageStack.pop();
          
          if (! saved) {
            throw new Error(R("noPushedPages"));
            
            
          }
          Tonyu.globals.$Screen.restore(saved.sprites);
          Tonyu.globals.$t2World=saved.t2World;
          newS=saved.scheduler;
          _this.setScheduler(newS);
          _it_6749=Tonyu.iterator(saved.pass,1);
          while(_it_6749.next()) {
            pa=_it_6749[0];
            
            _this.moveToScheduler(pa,oldS,newS);
            
          }
          
        } else {
          if (push) {
            saved = {scheduler: oldS,sprites: Tonyu.globals.$Screen.saveAndClear(pass),t2World: Tonyu.globals.$t2World,pass: pass};
            
            newS=new Tonyu.classes.kernel.Scheduler;
            _this.setScheduler(newS);
            _it_6750=Tonyu.iterator(pass,1);
            while(_it_6750.next()) {
              pa=_it_6750[0];
              
              _this.moveToScheduler(pa,oldS,newS);
              
            }
            Tonyu.globals.$t2World=null;
            _this.pageStack.push(saved);
            res=new page(arg);
            
          } else {
            a = Tonyu.globals.$Screen.all();
            
            a=a.find((function anonymous_9207(e) {
              
              return pass.indexOf(e)<0;
            }));
            a.die();
            res=new page(arg);
            
          }
        }
        if (typeof  options.onLoad==="function") {
          options.onLoad({page: res});
        }
      },
      fiber$loadPage :function _trc_Boot_f_loadPage(_thread,page,arg,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var push;
        var pass;
        var res;
        var oldS;
        var newS;
        var saved;
        var pa;
        var _it_6749;
        var _it_6750;
        var a;
        
        switch (typeof  arg) {
        case "function":
          options={onLoad: arg};
          arg=undefined;
          break;
          
        case "boolean":
          options={push: arg};
          arg=undefined;
          break;
          
        }
        options=options||{};
        push = (options.push);
        
        pass = (options.pass||[]).concat(Tonyu.globals.$excludeFromAll.toArray());
        
        
        oldS = _this._scheduler;
        
        
        _thread.enter(function _trc_Boot_ent_loadPage(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(! page)) { __pc=5     ; break; }
              saved = _this.pageStack.pop();
              
              if (! saved) {
                throw new Error(R("noPushedPages"));
                
                
              }
              Tonyu.globals.$Screen.restore(saved.sprites);
              Tonyu.globals.$t2World=saved.t2World;
              newS=saved.scheduler;
              _this.fiber$setScheduler(_thread, newS);
              __pc=1;return;
            case 1:
              
              _it_6749=Tonyu.iterator(saved.pass,1);
            case 2:
              if (!(_it_6749.next())) { __pc=4     ; break; }
              pa=_it_6749[0];
              
              _this.fiber$moveToScheduler(_thread, pa, oldS, newS);
              __pc=3;return;
            case 3:
              
              __pc=2;break;
            case 4     :
              
              __pc=12    ;break;
            case 5     :
              if (!(push)) { __pc=10    ; break; }
              saved = {scheduler: oldS,sprites: Tonyu.globals.$Screen.saveAndClear(pass),t2World: Tonyu.globals.$t2World,pass: pass};
              
              newS=new Tonyu.classes.kernel.Scheduler;
              _this.fiber$setScheduler(_thread, newS);
              __pc=6;return;
            case 6:
              
              _it_6750=Tonyu.iterator(pass,1);
            case 7:
              if (!(_it_6750.next())) { __pc=9     ; break; }
              pa=_it_6750[0];
              
              _this.fiber$moveToScheduler(_thread, pa, oldS, newS);
              __pc=8;return;
            case 8:
              
              __pc=7;break;
            case 9     :
              
              Tonyu.globals.$t2World=null;
              _this.pageStack.push(saved);
              res=new page(arg);
              __pc=11    ;break;
            case 10    :
              a = Tonyu.globals.$Screen.all();
              
              a=a.find((function anonymous_9207(e) {
                
                return pass.indexOf(e)<0;
              }));
              a.die();
              res=new page(arg);
            case 11    :
              
            case 12    :
              
              if (typeof  options.onLoad==="function") {
                options.onLoad({page: res});
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      stop :function _trc_Boot_stop() {
        "use strict";
        var _this=this;
        var res;
        var evt;
        var e;
        var r;
        
        res = new $.Deferred();
        
        evt = {die: (function anonymous_9441() {
          
          _this.die();
          res.resolve();
        }),preventDefault: (function anonymous_9570() {
          
          evt.defaultPrevented=true;
        })};
        
        try {
          Tonyu.globals.$sound.stopAllSE();
          
        } catch (e) {
          console.error(e.stack);
          
        }
        r = _this.fireEvent("stop",evt);
        
        if (! evt.defaultPrevented) {
          evt.die();
          res.resolve();
          
        }
        return res;
      },
      fiber$stop :function _trc_Boot_f_stop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var res;
        var evt;
        var e;
        var r;
        
        res = new $.Deferred();
        
        evt = {die: (function anonymous_9441() {
          
          _this.die();
          res.resolve();
        }),preventDefault: (function anonymous_9570() {
          
          evt.defaultPrevented=true;
        })};
        
        try {
          Tonyu.globals.$sound.stopAllSE();
          
        } catch (e) {
          console.error(e.stack);
          
        }
        r = _this.fireEvent("stop",evt);
        
        if (! evt.defaultPrevented) {
          evt.die();
          res.resolve();
          
        }
        _thread.retVal=res;return;
        
        
        _thread.retVal=_this;return;
      },
      hide :function _trc_Boot_hide() {
        "use strict";
        var _this=this;
        
      },
      schedule :function _trc_Boot_schedule(obj,method,args) {
        "use strict";
        var _this=this;
        var s;
        var th;
        
        if (! method) {
          throw new Error("指定されたメソッドは定義されていません:"+method);
          
        }
        args=args||[];
        s = obj._scheduler||_this._scheduler;
        
        th = s.newThread(obj,method,args);
        
        obj.setThreadGroup(_this);
        th.setThreadGroup(obj);
        return th;
      },
      fiber$schedule :function _trc_Boot_f_schedule(_thread,obj,method,args) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var s;
        var th;
        
        if (! method) {
          throw new Error("指定されたメソッドは定義されていません:"+method);
          
        }
        args=args||[];
        s = obj._scheduler||_this._scheduler;
        
        th = s.newThread(obj,method,args);
        
        obj.setThreadGroup(_this);
        th.setThreadGroup(obj);
        _thread.retVal=th;return;
        
        
        _thread.retVal=_this;return;
      },
      progress :function _trc_Boot_progress(m) {
        "use strict";
        var _this=this;
        
        if (typeof  SplashScreen=="undefined") {
          return _this;
        }
        if (m) {
          console.log.apply(console,arguments);
          SplashScreen.progress(m);
          
        } else {
          SplashScreen.hide();
        }
      },
      fiber$progress :function _trc_Boot_f_progress(_thread,m) {
        "use strict";
        var _this=this;
        var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  SplashScreen=="undefined") {
          _thread.retVal=_this;return;
          
        }
        if (m) {
          console.log.apply(console,_arguments);
          SplashScreen.progress(m);
          
        } else {
          SplashScreen.hide();
        }
        
        _thread.retVal=_this;return;
      },
      progressNoLog :function _trc_Boot_progressNoLog(m) {
        "use strict";
        var _this=this;
        
        if (typeof  SplashScreen=="undefined") {
          return _this;
        }
        if (m) {
          SplashScreen.progress(m);
          
        } else {
          SplashScreen.hide();
        }
      },
      fiber$progressNoLog :function _trc_Boot_f_progressNoLog(_thread,m) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (typeof  SplashScreen=="undefined") {
          _thread.retVal=_this;return;
          
        }
        if (m) {
          SplashScreen.progress(m);
          
        } else {
          SplashScreen.hide();
        }
        
        _thread.retVal=_this;return;
      },
      mainLoop :function _trc_Boot_mainLoop() {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$frameCount=0;
        Tonyu.globals.$drawnFrameCount=0;
        while (true) {
          if (_this._useRAF) {
            _this.loopRAF();
          } else {
            _this.loopTimer();
          }
          _this.measureFps();
          _this.handlePause();
          if (typeof  Mezonet!=="undefined"&&typeof  Mezonet.doRefresh==="function") {
            Mezonet.doRefresh();
          }
          Tonyu.globals.$drawnFrameCount++;
          
        }
      },
      fiber$mainLoop :function _trc_Boot_f_mainLoop(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        Tonyu.globals.$frameCount=0;
        Tonyu.globals.$drawnFrameCount=0;
        
        _thread.enter(function _trc_Boot_ent_mainLoop(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(_this._useRAF)) { __pc=3     ; break; }
              _this.fiber$loopRAF(_thread);
              __pc=2;return;
            case 2:
              
              __pc=5     ;break;
            case 3     :
              _this.fiber$loopTimer(_thread);
              __pc=4;return;
            case 4:
              
            case 5     :
              
              _this.measureFps();
              _this.fiber$handlePause(_thread);
              __pc=6;return;
            case 6:
              
              if (typeof  Mezonet!=="undefined"&&typeof  Mezonet.doRefresh==="function") {
                Mezonet.doRefresh();
              }
              Tonyu.globals.$drawnFrameCount++;
              __pc=1;break;
            case 7     :
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      loopRAF :function _trc_Boot_loopRAF() {
        "use strict";
        var _this=this;
        var nowTime;
        var frameTime;
        var moves;
        var bufferTime;
        
        nowTime = _this.now();
        
        frameTime = 1000/_this._fps;
        
        moves = 0;
        
        bufferTime = 0;
        
        _this.subTime=_this.trunc(nowTime-_this.rafProcNowTime);
        _this.procCnt=_this.subTime/frameTime;
        bufferTime=(0.5*_this._fps/60);
        if (_this._fps<58||_this._fps>62) {
          bufferTime=0;
        }
        if (_this.procCnt>=1-bufferTime&&_this.procCnt<=1+bufferTime) {
          _this.procCnt=1;
        }
        _this.procCnt=_this.floor(_this.procCnt);
        if (_this.procCnt>_this.maxFrameSkip) {
          _this.procCnt=_this.maxFrameSkip;
          _this.rafProcNowTime=nowTime;
          
        } else {
          _this.rafProcNowTime+=_this.procCnt*frameTime;
          
        }
        while (moves<_this.procCnt) {
          Tonyu.globals.$_doDraw=moves==_this.procCnt-1;
          _this.moveFrame();
          moves++;
          if (moves<_this.procCnt) {
            _this.afterDraw({drawn: false});
          }
          
        }
        if (moves>0) {
          _this.drawFrame();
          _this.afterDraw({drawn: true});
          
        }
        _this.runPromise(requestAnimationFrame);
      },
      fiber$loopRAF :function _trc_Boot_f_loopRAF(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var nowTime;
        var frameTime;
        var moves;
        var bufferTime;
        
        nowTime = _this.now();
        
        frameTime = 1000/_this._fps;
        
        moves = 0;
        
        bufferTime = 0;
        
        _this.subTime=_this.trunc(nowTime-_this.rafProcNowTime);
        _this.procCnt=_this.subTime/frameTime;
        bufferTime=(0.5*_this._fps/60);
        if (_this._fps<58||_this._fps>62) {
          bufferTime=0;
        }
        if (_this.procCnt>=1-bufferTime&&_this.procCnt<=1+bufferTime) {
          _this.procCnt=1;
        }
        _this.procCnt=_this.floor(_this.procCnt);
        if (_this.procCnt>_this.maxFrameSkip) {
          _this.procCnt=_this.maxFrameSkip;
          _this.rafProcNowTime=nowTime;
          
        } else {
          _this.rafProcNowTime+=_this.procCnt*frameTime;
          
        }
        
        _thread.enter(function _trc_Boot_ent_loopRAF(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
            case 1:
              if (!(moves<_this.procCnt)) { __pc=2     ; break; }
              {
                Tonyu.globals.$_doDraw=moves==_this.procCnt-1;
                _this.moveFrame();
                moves++;
                if (moves<_this.procCnt) {
                  _this.afterDraw({drawn: false});
                }
              }
              __pc=1;break;
            case 2     :
              
              if (moves>0) {
                _this.drawFrame();
                _this.afterDraw({drawn: true});
                
              }
              _this.fiber$runPromise(_thread, requestAnimationFrame);
              __pc=3;return;
            case 3:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      loopTimer :function _trc_Boot_loopTimer() {
        "use strict";
        var _this=this;
        
        _this.moveFrame();
        _this.doDraw=_this.now()<_this.deadLine;
        if (! _this.doDraw&&_this.frameSkipped>=_this.maxFrameSkip) {
          _this.doDraw=true;
          _this.resetDeadLine();
          
        }
        Tonyu.globals.$_doDraw=_this.doDraw;
        if (_this.doDraw) {
          _this.drawFrame();
          _this.frameSkipped=0;
          
        } else {
          _this.frameSkipped++;
          
        }
        _this.afterDraw({drawn: _this.doDraw});
        _this.waitFrame();
      },
      fiber$loopTimer :function _trc_Boot_f_loopTimer(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.moveFrame();
        _this.doDraw=_this.now()<_this.deadLine;
        if (! _this.doDraw&&_this.frameSkipped>=_this.maxFrameSkip) {
          _this.doDraw=true;
          _this.resetDeadLine();
          
        }
        Tonyu.globals.$_doDraw=_this.doDraw;
        if (_this.doDraw) {
          _this.drawFrame();
          _this.frameSkipped=0;
          
        } else {
          _this.frameSkipped++;
          
        }
        _this.afterDraw({drawn: _this.doDraw});
        
        _thread.enter(function _trc_Boot_ent_loopTimer(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$waitFrame(_thread);
              __pc=1;return;
            case 1:
              
              _thread.exit(_this);return;
            }
          }
        });
      },
      handlePause :function _trc_Boot_handlePause() {
        "use strict";
        var _this=this;
        
        if (_this.economyMode&&_this._scheduler.isEmpty) {
          _this.isIdle=true;
          while (_this._scheduler.isEmpty) {
            _this.runPromise(requestAnimationFrame);
            
          }
          _this.resetDeadLine();
          
        }
        while (_this.paused) {
          _this.isIdle=true;
          _this.runPromise(requestAnimationFrame);
          if (! _this.paused) {
            _this.resetDeadLine();
          }
          
        }
        _this.isIdle=false;
      },
      fiber$handlePause :function _trc_Boot_f_handlePause(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.enter(function _trc_Boot_ent_handlePause(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              if (!(_this.economyMode&&_this._scheduler.isEmpty)) { __pc=4     ; break; }
              _this.isIdle=true;
            case 1:
              if (!(_this._scheduler.isEmpty)) { __pc=3     ; break; }
              _this.fiber$runPromise(_thread, requestAnimationFrame);
              __pc=2;return;
            case 2:
              
              __pc=1;break;
            case 3     :
              
              _this.resetDeadLine();
            case 4     :
              
            case 5:
              if (!(_this.paused)) { __pc=7     ; break; }
              _this.isIdle=true;
              _this.fiber$runPromise(_thread, requestAnimationFrame);
              __pc=6;return;
            case 6:
              
              if (! _this.paused) {
                _this.resetDeadLine();
              }
              __pc=5;break;
            case 7     :
              
              _this.isIdle=false;
              _thread.exit(_this);return;
            }
          }
        });
      },
      drawFrame :function _trc_Boot_drawFrame() {
        "use strict";
        var _this=this;
        var s;
        
        s = _this.now();
        
        Tonyu.globals.$uiScreen.drawLayers();
        _this.drawTime=_this.now()-s;
        _this.fps_fpsCnt++;
      },
      moveFrame :function _trc_Boot_moveFrame() {
        "use strict";
        var _this=this;
        var s;
        var sc;
        
        s = _this.now();
        
        Tonyu.globals.$_printCount=0;
        Tonyu.resetLoopCheck();
        if (_this.newLimit) {
          _this.newLimitCount=_this.newLimit;
        }
        sc = _this._scheduler.stepsAll();
        
        Tonyu.globals.$Keys.update();
        Tonyu.globals.$GamePad.update();
        Tonyu.globals.$InputDevice.update();
        if (Tonyu.globals.$sound) {
          Tonyu.globals.$sound.resetSEFrame();
        }
        Tonyu.globals.$screenWidth=Tonyu.globals.$Screen.width;
        Tonyu.globals.$screenHeight=Tonyu.globals.$Screen.height;
        _this.moveTime=_this.now()-s;
        _this.fps_rpsCnt++;
        Tonyu.globals.$frameCount++;
      },
      afterDraw :function _trc_Boot_afterDraw(e) {
        "use strict";
        var _this=this;
        
        Tonyu.globals.$Sprites.checkHit();
        Tonyu.globals.$Sprites.removeOneframes(e.drawn);
        _this.sendEvent("afterDraw",e);
      },
      initFPSParams :function _trc_Boot_initFPSParams() {
        "use strict";
        var _this=this;
        
        _this._fps=Tonyu.globals.$defaultFPS||30;
        _this.maxFrameSkip=5;
        _this.minFrameSkip=1;
        _this.frameCnt=0;
        _this.resetDeadLine();
        _this.lastMeasured=_this.now();
        _this.fps_fps=_this.fps_rps=_this.fps_fpsCnt=_this.fps_rpsCnt=0;
        _this.drawTime=5;
        _this.moveTime=5;
        _this._useRAF=true;
        _this.rafProcNowTime=_this.now();
      },
      now :function _trc_Boot_now() {
        "use strict";
        var _this=this;
        
        return performance.now();
      },
      resetDeadLine :function _trc_Boot_resetDeadLine() {
        "use strict";
        var _this=this;
        
        _this.deadLine=_this.now()+1000/_this._fps;
        _this.frameSkipped=0;
      },
      waitFrame :function _trc_Boot_waitFrame() {
        "use strict";
        var _this=this;
        var wt;
        
        wt = _this.deadLine-_this.now();
        
        if (wt<1) {
          if (wt<- 1000) {
            _this.resetDeadLine();
          }
          wt=1;
          
        }
        wt=_this.floor(wt);
        _this.waitFor(Tonyu.timeout(wt));
        _this.deadLine+=1000/_this._fps;
      },
      fiber$waitFrame :function _trc_Boot_f_waitFrame(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var wt;
        
        wt = _this.deadLine-_this.now();
        
        if (wt<1) {
          if (wt<- 1000) {
            _this.resetDeadLine();
          }
          wt=1;
          
        }
        wt=_this.floor(wt);
        
        _thread.enter(function _trc_Boot_ent_waitFrame(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              _this.fiber$waitFor(_thread, Tonyu.timeout(wt));
              __pc=1;return;
            case 1:
              
              _this.deadLine+=1000/_this._fps;
              _thread.exit(_this);return;
            }
          }
        });
      },
      getFrameRate :function _trc_Boot_getFrameRate() {
        "use strict";
        var _this=this;
        
        return _this._fps;
      },
      setFrameRate :function _trc_Boot_setFrameRate(fps,maxFrameSkip) {
        "use strict";
        var _this=this;
        
        _this._fps=fps;
        if (typeof  maxFrameSkip!="number") {
          maxFrameSkip=5;
        }
        if (maxFrameSkip<=0) {
          maxFrameSkip=1;
        }
        _this.maxFrameSkip=maxFrameSkip;
        _this.resetDeadLine();
      },
      __getter__useRAF :function _trc_Boot___getter__useRAF() {
        "use strict";
        var _this=this;
        
        return _this._useRAF;
      },
      __setter__useRAF :function _trc_Boot___setter__useRAF(v) {
        "use strict";
        var _this=this;
        
        if (v) {
          _this.rafProcNowTime=_this.now();
          
        } else {
          _this.resetDeadLine();
          
        }
        return _this._useRAF=v;
      },
      getMeasuredFps :function _trc_Boot_getMeasuredFps() {
        "use strict";
        var _this=this;
        
        return _this.fps_fps;
      },
      getMeasuredRps :function _trc_Boot_getMeasuredRps() {
        "use strict";
        var _this=this;
        
        return _this.fps_rps;
      },
      measureFps :function _trc_Boot_measureFps() {
        "use strict";
        var _this=this;
        var nowTime;
        
        nowTime = _this.now();
        
        if (nowTime>=_this.lastMeasured+1000) {
          _this.fps_fps=_this.fps_fpsCnt;
          _this.fps_rps=_this.fps_rpsCnt;
          _this.fps_fpsCnt=0;
          _this.fps_rpsCnt=0;
          _this.lastMeasured=nowTime;
          
        }
      },
      requestDrawFrame :function _trc_Boot_requestDrawFrame() {
        "use strict";
        var _this=this;
        
        if (! _this.isIdle) {
          return _this;
        }
        if (_this._drawFrameRequested) {
          return _this;
        }
        _this._drawFrameRequested=true;
        requestAnimationFrame((function anonymous_16085() {
          
          _this.drawFrame();
          _this._drawFrameRequested=false;
        }));
      },
      fiber$requestDrawFrame :function _trc_Boot_f_requestDrawFrame(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        if (! _this.isIdle) {
          _thread.retVal=_this;return;
          
        }
        if (_this._drawFrameRequested) {
          _thread.retVal=_this;return;
          
        }
        _this._drawFrameRequested=true;
        requestAnimationFrame((function anonymous_16085() {
          
          _this.drawFrame();
          _this._drawFrameRequested=false;
        }));
        
        _thread.retVal=_this;return;
      },
      setEconomyMode :function _trc_Boot_setEconomyMode(options) {
        "use strict";
        var _this=this;
        
        _this.economyMode=options;
      },
      fiber$setEconomyMode :function _trc_Boot_f_setEconomyMode(_thread,options) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        _this.economyMode=options;
        
        _thread.retVal=_this;return;
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"initSymbol":{"nowait":false},"setScheduler":{"nowait":false},"moveToScheduler":{"nowait":false},"timeStop":{"nowait":false},"update":{"nowait":false},"initGlobals":{"nowait":false},"initPeripherals":{"nowait":false},"initLayers":{"nowait":false},"debug":{"nowait":false},"loadPlugins":{"nowait":false},"loadImages":{"nowait":false},"loadSounds":{"nowait":false},"loadAssets":{"nowait":false},"getIDE":{"nowait":false},"getMainClass":{"nowait":false},"createMainObject":{"nowait":false},"loadPage":{"nowait":false},"stop":{"nowait":false},"hide":{"nowait":true},"schedule":{"nowait":false},"progress":{"nowait":false},"progressNoLog":{"nowait":false},"mainLoop":{"nowait":false},"loopRAF":{"nowait":false},"loopTimer":{"nowait":false},"handlePause":{"nowait":false},"drawFrame":{"nowait":true},"moveFrame":{"nowait":true},"afterDraw":{"nowait":true},"initFPSParams":{"nowait":true},"now":{"nowait":true},"resetDeadLine":{"nowait":true},"waitFrame":{"nowait":false},"getFrameRate":{"nowait":true},"setFrameRate":{"nowait":true},"__getter__useRAF":{"nowait":true},"__setter__useRAF":{"nowait":true},"getMeasuredFps":{"nowait":true},"getMeasuredRps":{"nowait":true},"measureFps":{"nowait":true},"requestDrawFrame":{"nowait":false},"setEconomyMode":{"nowait":false}},"fields":{"tt":{},"window":{},"cvj":{},"debugCnt":{},"newLimit":{},"autoReload":{},"mainClass":{},"pageStack":{},"loadedAll":{},"_useRAF":{},"_fps":{},"subTime":{},"rafProcNowTime":{},"procCnt":{},"maxFrameSkip":{},"doDraw":{},"deadLine":{},"frameSkipped":{},"economyMode":{},"isIdle":{},"paused":{},"drawTime":{},"fps_fpsCnt":{},"newLimitCount":{},"moveTime":{},"fps_rpsCnt":{},"minFrameSkip":{},"frameCnt":{},"lastMeasured":{},"fps_fps":{},"fps_rps":{},"_drawFrameRequested":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.ConsolePanel',
  shortName: 'ConsolePanel',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Panel,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_ConsolePanel_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_ConsolePanel_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_ConsolePanel_initialize(opt) {
        "use strict";
        var _this=this;
        
        _this.printAry=[];
        _this.printStart=0;
        _this.printCnt=0;
        _this.screenCol=null;
        _this.defaultCol="white";
        __superClass.apply( _this, [opt]);
      },
      print :function _trc_ConsolePanel_print() {
        "use strict";
        var _this=this;
        var mergedArg;
        var argCount;
        var printColor;
        var printSize;
        var splits;
        var printCount;
        
        mergedArg = "";
        
        argCount = 0;
        for (; argCount<arguments.length ; argCount++) {
          {
            mergedArg=mergedArg+arguments[argCount]+" ";
          }
        }
        if (Tonyu.globals.$printColor==null&&Tonyu.globals.$Screen) {
          if (Tonyu.globals.$Screen._color!=_this.screenCol) {
            _this.screenCol=Tonyu.globals.$Screen._color;
            _this.defaultCol=new Tonyu.classes.kernel.Color(Tonyu.globals.$Screen._color).l<=0.5?"white":"black";
            
          }
          
        }
        printColor = Tonyu.globals.$printColor!=null?Tonyu.globals.$printColor:_this.defaultCol;
        
        printSize = ! Tonyu.globals.$printSize?20:Tonyu.globals.$printSize;
        
        splits = mergedArg.split("\n");
        
        printCount = 0;
        for (; printCount<splits.length ; printCount++) {
          {
            _this.printAry.push({text: splits[printCount],color: printColor,size: printSize});
            _this.printCnt++;
          }
        }
      },
      draw :function _trc_ConsolePanel_draw(ctx) {
        "use strict";
        var _this=this;
        var scrollY;
        var i;
        var p;
        var drawY;
        var a;
        
        scrollY = 0;
        
        i = _this.printStart;
        for (; i<_this.printStart+_this.printCnt ; i++) {
          {
            p = _this.printAry[i];
            
            if (! p) {
              continue;
              
            }
            scrollY+=p.size;
            if (scrollY>Tonyu.globals.$screenHeight) {
              break;
              
            }
          }
        }
        if (scrollY>0) {
          Tonyu.globals.$consolePanel.scroll(0,scrollY);
          drawY = Tonyu.globals.$consolePrintY;
          
          a = 0;
          
          i = _this.printStart+_this.printCnt-1;
          for (; i>=_this.printStart ; i--) {
            {
              p = _this.printAry[i];
              
              if (! p) {
                continue;
                
              }
              Tonyu.globals.$consolePanel.setFillStyle(p.color);
              Tonyu.globals.$consolePanel.fillText(p.text,0,drawY,p.size,"left","bottom");
              drawY-=p.size;
              a++;
              if (drawY<0) {
                _this.printCnt-=i;
                _this.printAry.splice(0,i);
                break;
                
                
              }
            }
          }
          _this.printStart=_this.printCnt;
          
        }
        __superClass.prototype.draw.apply( _this, [ctx]);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"print":{"nowait":true},"draw":{"nowait":true}},"fields":{"printAry":{},"printStart":{},"printCnt":{},"screenCol":{},"defaultCol":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.FadeEffect',
  shortName: 'FadeEffect',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.Panel,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_FadeEffect_main() {
        "use strict";
        var _this=this;
        
        "field strict";
        
        _this.fillStyle = _this.fillStyle||"black";
        
        
        
        _this.duration = _this.duration||30;
        
        
        _this.zOrder=(Tonyu.globals.$consolePanel?Tonyu.globals.$consolePanel.zOrder+1:- 100000);
        _this.fillRect(0,0,Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
        switch (_this.type) {
        case "in":
          _this.morph(255,0);
          break;
          
        case "out":
          _this.morph(0,255);
          break;
          
        case "outin":
          _this.morph(0,255);
          _this.sendEvent("out");
          _this.loadPage(_this.page,_this.params||{},{pass: [_this].concat(_this.pass||[])});
          _this.morph(255,0);
          break;
          
        }
        _this.sendEvent("complete");
        if (_this.page&&_this.type!=="outin") {
          _this.loadPage(_this.page,_this.params||{});
          
        }
        if (_this.type!=="out") {
          _this.die();
        }
      },
      fiber$main :function _trc_FadeEffect_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        "field strict";
        
        _this.fillStyle = _this.fillStyle||"black";
        
        
        
        _this.duration = _this.duration||30;
        
        
        _this.zOrder=(Tonyu.globals.$consolePanel?Tonyu.globals.$consolePanel.zOrder+1:- 100000);
        _this.fillRect(0,0,Tonyu.globals.$screenWidth,Tonyu.globals.$screenHeight);
        
        _thread.enter(function _trc_FadeEffect_ent_main(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              switch (_this.type) {
              case "in":
                __pc=1     ;break;
              case "out":
                __pc=3     ;break;
              case "outin":
                __pc=5     ;break;
              default:
                __pc=9     ;break;
                
              }
              break;
            case 1     :
              _this.fiber$morph(_thread, 255, 0);
              __pc=2;return;
            case 2:
              
              __pc=9     ; break;
              
            case 3     :
              _this.fiber$morph(_thread, 0, 255);
              __pc=4;return;
            case 4:
              
              __pc=9     ; break;
              
            case 5     :
              _this.fiber$morph(_thread, 0, 255);
              __pc=6;return;
            case 6:
              
              _this.sendEvent("out");
              _this.fiber$loadPage(_thread, _this.page, _this.params||{}, {pass: [_this].concat(_this.pass||[])});
              __pc=7;return;
            case 7:
              
              _this.fiber$morph(_thread, 255, 0);
              __pc=8;return;
            case 8:
              
              __pc=9     ; break;
              
              case 9     :
              
              _this.sendEvent("complete");
              if (!(_this.page&&_this.type!=="outin")) { __pc=11    ; break; }
              _this.fiber$loadPage(_thread, _this.page, _this.params||{});
              __pc=10;return;
            case 10:
              
            case 11    :
              
              if (_this.type!=="out") {
                _this.die();
              }
              _thread.exit(_this);return;
            }
          }
        });
      },
      __getter__defaultLayer :function _trc_FadeEffect___getter__defaultLayer() {
        "use strict";
        var _this=this;
        
        return Tonyu.globals.$frontLayer;
      },
      morph :function _trc_FadeEffect_morph(from,to) {
        "use strict";
        var _this=this;
        var i;
        var progress;
        
        i = 0;
        for (; i<_this.duration ; i++) {
          {
            progress = i/(_this.duration-1);
            
            _this.alpha=to*progress+from*(1-progress);
            _this.update();
          }
        }
        _this.alpha=to;
      },
      fiber$morph :function _trc_FadeEffect_f_morph(_thread,from,to) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        var i;
        var progress;
        
        
        _thread.enter(function _trc_FadeEffect_ent_morph(_thread) {
          if (_thread.lastEx) __pc=_thread.catchPC;
          for(var __cnt=100 ; __cnt--;) {
            switch (__pc) {
            case 0:
              i = 0;
              
            case 1:
              if (!(i<_this.duration)) { __pc=4     ; break; }
              progress = i/(_this.duration-1);
              
              _this.alpha=to*progress+from*(1-progress);
              _this.fiber$update(_thread);
              __pc=2;return;
            case 2:
              
            case 3     :
              i++;
              __pc=1;break;
            case 4     :
              
              _this.alpha=to;
              _thread.exit(_this);return;
            }
          }
        });
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"__getter__defaultLayer":{"nowait":true},"morph":{"nowait":false}},"fields":{"type":{},"fillStyle":{},"page":{},"params":{},"duration":{},"pass":{}}}
});
Tonyu.klass.define({
  fullName: 'kernel.DxChar',
  shortName: 'DxChar',
  namespace: 'kernel',
  superclass: Tonyu.classes.kernel.SpriteChar,
  includes: [],
  methods: function (__superClass) {
    return {
      main :function _trc_DxChar_main() {
        "use strict";
        var _this=this;
        
      },
      fiber$main :function _trc_DxChar_f_main(_thread) {
        "use strict";
        var _this=this;
        //var _arguments=Tonyu.A(arguments);
        var __pc=0;
        
        
        _thread.retVal=_this;return;
      },
      initialize :function _trc_DxChar_initialize(xx,yy,pp,ff,sz,rt,al) {
        "use strict";
        var _this=this;
        
        __superClass.apply( _this, [xx,yy,pp,ff]);
        _this.scaleX=1;
        if (sz) {
          _this.scaleX=sz;
        }
        _this.angle=0;
        if (rt) {
          _this.angle=rt;
        }
        _this.alpha=255;
        if (al) {
          _this.alpha=al;
        }
      },
      draw :function _trc_DxChar_draw(c) {
        "use strict";
        var _this=this;
        
        if (_this._isInvisible) {
          return _this;
        }
        _this.onDraw();
        _this.prepareImage();
        _this.drawDxSprite(_this.x,_this.y,_this.p,_this.f,_this.zOrder,_this.angle,_this.alpha,_this.scaleX,_this.scaleY);
      },
      __dummy: false
    };
  },
  decls: {"methods":{"main":{"nowait":false},"new":{"nowait":false},"draw":{"nowait":true}},"fields":{"angle":{}}}
});

//# sourceMappingURL=concat.js.map