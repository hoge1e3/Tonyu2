extends Actor;
native $;
native Math;

// canvas:phisical  buf: logical
\new (opt) {
    extend(opt);
    // canvas/ width,height
    resize(width, height);
    cw=canvas.width();
    ch=canvas.height();
    cctx=canvas[0].getContext("2d");
    this._color="rgb(20,80,180)";
    sx=0;
    sy=0;
    isDrawGrid=$Sprites.isDrawGrid;
}
\resize(width,height) {
    this.width=width;
    this.height=height;
    buf=$("<canvas>").attr{width,height};
    ctx=buf[0].getContext("2d");
    $screenWidth=width;
    $screenHeight=height;
    if($panel){
        $panel.setPanel($screenWidth,$screenHeight);
        $panel.x=$screenWidth/2;
        $panel.y=$screenHeight/2;
    }
    if($consolePanel){
        $consolePanel.setPanel($screenWidth,$screenHeight);
        $consolePanel.x=$screenWidth/2;
        $consolePanel.y=$screenHeight/2;
        $consolePrintY=$screenHeight-15;
    }
}
\shouldDraw1x1(srcw,srch,dstw,dsth) {
    // srcw=465 -> dstw=460...665
    var larger=200;
    var smaller=5;
    return srcw-smaller<=dstw && dstw<=srcw+larger &&
    srch-smaller<=dsth && dsth<=srch+larger;
}
\draw() {
    cw=canvas.width();
    ch=canvas.height();
    var calcw=ch/height*width; // calch=ch
    var calch=cw/width*height; // calcw=cw
    if (calch>ch) calch=ch;
    if (calcw>cw) calcw=cw;
    cctx.clearRect(0,0,cw,ch);
    if (shouldDraw1x1(width,height,calcw,calch)) {
        calcw=width;calch=height;
    }
    var marginw=Math.floor((cw-calcw)/2);
    var marginh=Math.floor((ch-calch)/2);
    cctx.drawImage(buf[0],
    0,0,width, height,
    marginw,marginh,calcw, calch );
}
\canvas2buf(point) {
    var calcw=ch/height*width; // calch=ch
    var calch=cw/width*height; // calcw=cw
    if (calch>ch) calch=ch;
    if (calcw>cw) calcw=cw;
    if (shouldDraw1x1(width,height,calcw,calch)) {
        calcw=width;calch=height;
    }
    var marginw=Math.floor((cw-calcw)/2);
    var marginh=Math.floor((ch-calch)/2);
    //For mysterious bug of Chrome on Android 5....
    _ret="("+point.x+"-"+marginw+")/"+calcw+"*"+width+",";
    return {x: (point.x-marginw)/calcw*width,
    y: (point.y-marginh)/calch*height};
}
\setBGColor(color){
    this._color=color;
}
\fillCanvas(cv){
    var ctx=cv.getContext("2d");
    ctx.save();
    ctx.fillStyle=_color+"";
    ctx.fillRect(0,0,cv.width,cv.height);
    if (isDrawGrid) drawGrid(cv);
    ctx.restore();
}
\scrollTo(scrollX,scrollY){
    /*for(o in all()){
        //print(o.mapObj);
        if(o.mapObj){
            o.scrollTo(o.sx+scrollX,o.sy+scrollY);
        }else if(o.x!=undefined && o.y!=undefined){
            o.x+=scrollX;
            o.y+=scrollY;
        }
    }*/
    //sx=scrollX;
    //sy=scrollY;
    $Sprites.scrollTo(scrollX,scrollY);
}
