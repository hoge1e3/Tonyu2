extends TObject;
includes ParallelMod,MathMod,FileMod,EventMod,ThreadGroupMod;
native GIFEncoder;
native setTimeout;
native console;
native Uint8Array;
\new(params) {
    super(params);
    // delay   length   after filename
    target=target || $Screen;
    fps=fps || 15;
    interval=interval || floor ( $Boot.getFrameRate() /  fps );
    if (!manual) {
        if (delay) {
            var cnt=0;
            var wevt;
            wevt=$Boot.on("afterDraw") \{
                cnt++;
                if (cnt>=delay) {
                    wevt.remove();
                    start();
                }
            };
        } else start();
    }
}
\start() {
    if (e) return;
    frames=[];
    e=new GIFEncoder();
    e.setRepeat(0);
    e.setDelay(1000/fps);
    e.start();
    encoded=0;
    if (!manual) {
        var cnt=0;
        evt=$Boot.on("afterDraw") \(e) {
            var drawn=e.drawn;
            cnt++;
            if (cnt>=interval) {
                cnt=0;
                addFrame();
            }
            if (typeof length==="number") {
                length--;
                if (length<=0) {
                    switch (after) {
                    case "save":return save();
                    case "download":return download();
                    }
                }
            }
        };
    }
}
\addFrame() {
    if (!e) start();
    frames.push(target.getImageData(
        0,0,target.canvas.width,target.canvas.height
    ));
}
\encode1() {
    if (!e) start();
    if (frames.length==0) return false;
    e.addFrame(frames.shift(),true);
    encoded++;
    return true;
}
\encodeAll() {
    return parallel(encodeP);
}
\encodeP() {
    while(encode1()) {
        runAsync \(s) {
            setTimeout(s,0);
        };
    }
}
\progress {
    if (!e) return 0;
    return encoded/(encoded+frames.length);
}
\save(f) {
    if (!f) return download(f);
    return parallel(saveP,f);
}
\download(f) {
    return parallel(downloadP,f);
}
\finish() {
    return parallel(finishP);
}
\finishP() {
    if (evt) {
        evt.remove();
        evt=null;
    }
    encodeP();
    e.finish();
}
\downloadP(f) {
    finishP();
    e.download(f||filename||"download.gif");
    e=null;
}
\saveP(f) {
    finishP();
    f=file(f||filename);
    var binary_gif = e.stream().bin;//getData();
    f.bytes(new Uint8Array(binary_gif).buffer);
    e=null;
}
