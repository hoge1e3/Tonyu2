extends null;
includes SpriteMod,TextRectMod;
"field strict";
native Math;
var x,y,transform;


\initSpriteMod(){
    super.initSpriteMod();
    _align=_align || new Align2D();
}
\align=v {
    _alignVal=v;
    _align=new Align2D(v);
}
\initTransform() {//called from initSoriteMod
    transform=new Transform2D(this);
}

nowait \performTransform(ctx) {//2D
    if (x!==x || y!==y || x==null || y==null) {
        //console.log("警告：",getClassInfo().shortName,"で座標の指定に誤りがあります");
    }
    ctx.translate(x,y);
    if(this.rotation!=0){
        ctx.rotate(this.rotation/180*Math.PI);
    }else{
        ctx.rotate(this.rotate/180*Math.PI);
    }
    if(typeof this.scaleY==="undefined") {
        ctx.scale(this.scaleX,this.scaleX);
    }else{
        ctx.scale(this.scaleX,this.scaleY);
    }
    ctx.globalAlpha=(alpha<0?0:alpha>255?255:alpha)/255;
}
nowait \draw(ctx) {//2D
    if (x==null || y==null || _isInvisible) return;
    var t=detectSpriteType();
    this["drawAs"+t](ctx);
    if (subsprites && subsprites.draw) {
        ctx.save();
        performTransform(ctx);
        subsprites.draw(ctx);
        ctx.restore();
    }
}
nowait \drawAsText(ctx) {
    ctx.save();
    var splitsText=(text+"").split("\n");
    var drawY=y;
    if (!size) size=15;
    //if (!align) align="center";
    if (!fillStyle) fillStyle="white";
    if (font) ctx.font=size+"px "+font;
    ctx.fillStyle=fillStyle+"";
    ctx.globalAlpha=this.alpha/255;
    height=0;width=0;
    for(var textCount=0;textCount<splitsText.length;textCount++){
        var rect=drawTextRect(ctx, splitsText[textCount], x, drawY, size, _align , "fill");
        if(width<rect.w) width=rect.w;
        height+=rect.h;
        drawY+=size;
    }
    ctx.restore();
}
\drawAsShape(ctx) {
    ctx.save();
    performTransform(ctx);
    ctx.fillStyle=fillStyle+"";
    if (_align.isOriginPivot) {
        if (radius && radius>0) {
            ctx.beginPath();
            ctx.arc(0,0,radius,0,2*Math.PI);
            ctx.fill();
        } else {
            ctx.fillRect(-width/2,-height/2,width,height);
        }
    } else {
        if (radius && radius>0) {
            var r=_align.getDrawRect{width:radius*2, height:radius*2};
            ctx.beginPath();
            ctx.arc(r.x,r.y,radius,0,2*Math.PI);
            ctx.fill();
        } else {
            var r=_align.getDrawRect(this);
            ctx.fillRect(r.x-width/2,r.y-height/2,width,height);
        }

    }
    ctx.restore();
}
\drawAsCustom(ctx) {
    ctx.save();
    performTransform(ctx);
    p.draw(ctx);
    ctx.restore();
    if (p.width*p.height>0) {
        width=p.width;
        height=p.height;
    }
}
\drawAsImage(ctx) {
    prepareImage();
    if (pImg) {
        //_animation();
        ctx.save();
        performTransform(ctx);
        if (_align.isOriginPivot) {
            ctx.drawImage(
            pImg.image, pImg.x, pImg.y, pImg.width, pImg.height,
            -width/2, -height/2, width, height);
        } else {
            var r=_align.getDrawRect(this);
            ctx.drawImage(
            pImg.image, pImg.x, pImg.y, pImg.width, pImg.height,
            r.x-r.width/2, r.y-r.height/2, r.width, r.height);
        }
        ctx.restore();
    }
}
