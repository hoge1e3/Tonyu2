extends Actor3D;
"field strict";
var group:Sprites3D;
var sprites2D:Array;// of ActorSprite
var z1:Number;// z where scale==1
var spx,spy;
/*
     C
   z1|  S
   \ | /|
 p  \|/ |
    /|\ |r
   / | \|
      z1

p.z:z1 = p.x:r.x
r.x= p.x*z1/p.z

*/
\addSprite2D(s) {// called during draw3D
    sprites2D.push(s);
}
\addSprite3D(s) {
    // scale: 3D logical size    scaleX/Y: scale for 2D Sprite rendering
    var scl=((typeof s.scale==="number") ? s.scale : 1);
    if (s.p is Sprites3D && s.transform) {
        for (var e of s.p.sprites) {
            var w=s.transform.localToWorld(e.position);
            addSprite3D{
                x:w.x,y:w.y,z:w.z,
                p:e.p,
                scale:e.scale*scl,scaleX:e.scaleX,scaleY:e.scaleY,
                rotation:s.rotation||0, alpha:s.alpha||255
            };
        }
        return;
    }
    var p=to2D(s.position || new Vec3(s.x,s.y,s.z));
    if (p) {
        scl*=p.scale;
        if (s is ActorSprite) {
            s.x=p.x; s.y=p.y;
            s.zOrder=p.z;
            s.scaleX*=scl;
            if (typeof s.scaleY==="number") s.scaleY*=scl;
        } else {
            s=new ActorSprite{
                x=p.x, y=p.y,
                scaleX=(s.scaleX||1)*scl,
                scaleY=(s.scaleY||s.scaleX||1)*scl,
                p=s.p,
                rotation:s.rotation||0, alpha:s.alpha||255,
                zOrder=p.z
            };
        }
        addSprite2D(s);
    }
}
\new(p) {
    super(p);
    spx=spx||$screenWidth/2;
    spy=spy||$screenHeight/2;
    z1=z1||$screenWidth/2;
    z=-z1;
    //rotation={x:0,y:0,z:0,order:"yxz"};
}
\to2D(pos:Vec3) {
    var c=transform.worldToLocal(pos);
    var x=c.x;
    var y=c.y;
    var z=c.z;
    if (z<=0) return null;
    x=x*z1/z+spx;
    y=y*z1/z+spy;
    return {x,y,z,scale:z1/z};
}
\draw(ctx) {
    group.draw(ctx,this);
}
