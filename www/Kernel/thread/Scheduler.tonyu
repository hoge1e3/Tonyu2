extends TObject;
native Tonyu;
native console;
native Date;
cur=[];
next=[];
\addObj(obj,name,args) {
    return newThread(obj, name, args);
}
\newThread(obj, name, args, options) { //options:{pOrder, threadGroup}
    name=name||"main";
    args=args||[];
    var th=Tonyu.thread();
    th.apply(obj,name,args);
    th.name=(obj.getClassInfo? obj.getClassInfo().shortName:"Unknown")+"::"+name;
    addToCur(th);
    return th;
}
\addToCur(th) {
    if (th.scheduled) return;
    cur.push(th);
    th.scheduled=this;
    if ($Boot.newLimit) {
        $Boot.newLimitCount--;
        if ($Boot.newLimitCount<=0) throw new Error("一度にたくさんのスレッドを作りすぎています");
    }
}
\addToNext(th) {
    if (th.scheduled) return;
    next.push(th);
    th.scheduled=this;
}
\unschedule(th) {
    var i=cur.indexOf(th);
    if (i>=0) {
        cur.splice(i,1);
        delete th.scheduled;
    } else {
	    i=next.indexOf(th);
    	if (i>=0) {
    	   next.splice(i,1);
           delete th.scheduled;
    	}
    }
}
\checkTimeout() {
    var now=new Date().getTime();
    if (now-lastSteps>1000) {
        throw new Error("待機不能モードでupdateが呼ばれています．ブラウザが固まるのを防ぐために停止します．");
    }
}
\stepsAll() {
    lastSteps=new Date().getTime();
    for (var t in cur) {
    	delete t.scheduled;
    	if (t.waitCount) {
    	    t.waitCount--;
            addToNext(t);
    	} else {
            //$Boot.debug("StepsAll",t.name);
            t.steps();
            //$Boot.debug("StepsAllEnd",t.name);
            if (t.preempted) {
                //$Boot.debug("Preempted: ",t);
                addToNext(t);
            }
        }
    }
    cur=next;
    next=[];
}
