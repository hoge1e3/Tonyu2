extends TObject;
includes EventHandlerCaller;
native Tonyu;


if (Tonyu.runMode) listeners=[];

nowait \toListener(f) {
    if (target && (typeof f)=="string") {
        f=target[f];
    }
    if (typeof f!="function") throw new Error("Not a event listener: "+target+" / "+f);
    return f;    
}
nowait \addListener(f) {
    listeners.push(toListener(f));
    return {
        remove: \{
           removeListener(f);
        }
    };
}
nowait \removeListener(f) {
    var i=listeners.indexOf(f);
    listeners.splice(i,1);
}
\fire(args) {
    if (released) return;
    var t;
    for (var h in listeners) {
        /*if (h["fiber"]) {
            t=Tonyu.thread();
            h["fiber"].apply(target, [t].concat(args) );
            t.steps();
        } else {
            h.apply(target,args);
        }*/
        callEventHandler(h, args);
    }
}
nowait \release() {
    released=true;
}
