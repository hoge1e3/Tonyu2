extends null;
includes MathMod,EventMod,OneframeSpriteMod,
ThreadGroupMod,EventHandlerCaller,DialogMod,FileMod,AnimMod,SchedulerMod,
QueryMod,InputMod,LifeCycleMod,SpriteMod;

"field strict";

native Tonyu;
native Key;
native console;
native Math;
native FS;
native Array;

\new(x,y,p) {
    if (typeof x=="object") Tonyu.extend(this,x);
    else if (typeof x=="number") {
        this.x=x;
        this.y=y;
        this.p=p;
    }
    _scheduler=_scheduler||$Scheduler;
    if (Tonyu.runMode) _th=$Boot.schedule(this,"main",[]);
    layer=layer||defaultLayer;
    crashScale=1;
    position=new Vec3View(this);
    if (scaleX==null) scaleX=1;
    if (rotation==null) rotation=0;
    //if (this.rotate==null) this.rotate=0;
    if (alpha==null) alpha=255;
    if (zOrder==null) zOrder=0;
    //if (age==null) age=0;
    if (anim!=null && typeof anim=="object"){
        animMode=true;
        animFrame=0;
    }else{
        animMode=false;
    }
    if (animFps==null) animFps=1;
}
nowait \extend(obj) {
    return Tonyu.extend(this,obj);
}

nowait \print(pt) {
    $_printCount++; if ($_printCount>$printLimit) throw new Error("printをしすぎています.");
    console.log.apply(console,arguments);
    var mergedArg="";
    if($consolePanel){
        for(var argCount=0;argCount<arguments.length;argCount++){
            mergedArg=mergedArg+arguments[argCount]+" ";
        }
        var splits=mergedArg.split("\n");
        for(var printCount=0;printCount<splits.length;printCount++){
            $consolePanel.scroll(0,20);
            $consolePanel.setFillStyle("white");
            $consolePanel.fillText(splits[printCount],0,$consolePrintY,20,"left");
        }
    }
}

nowait \loadPage(){
    $Boot.loadPage.apply($Boot,arguments);
}
\defaultLayer {
    return $mainLayer;
}
