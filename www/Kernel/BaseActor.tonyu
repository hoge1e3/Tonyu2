extends null;
includes MathMod,EventMod,
ThreadGroupMod,EventHandlerCaller,DialogMod,FileMod,AnimMod,SchedulerMod,
QueryMod,InputMod,LifeCycleMod,SpriteMod,ParallelMod,
PlayMod, ParallelMod;

"field strict";

native Tonyu;
native console;

\new(x,y,p) {
    if (typeof x=="object") Tonyu.extend(this,x);
    else if (typeof x=="number") {
        this.x=x;
        this.y=y;
        this.p=p;
    }
    initSchedulerMod();
    layer=layer||defaultLayer;
    if (layer.group instanceof SpriteGroup) layer=layer.group;
    crashScale=1;
    initSpriteMod();
    if (Tonyu.runMode) addToLayer();
    initAnimMod();
}
nowait \extend(obj) {
    return Tonyu.extend(this,obj);
}

nowait \print(pt) {
    $_printCount++; if ($_printCount>$printLimit) throw new Error("printをしすぎています.\n"
        +"       $printLimitの値を変更すると、1フレーム間にできるprint回数を変更できます\n"
        +"       $printLimit="+$printLimit+"; // 現在のprint回数の限度\n"
        +"       [参考] https://edit.tonyu.jp/doc/limitations.html\n");
    console.log.apply(console,arguments);
    var mergedArg="";
    if($consolePanel){
        for(var argCount=0;argCount<arguments.length;argCount++){
            mergedArg=mergedArg+arguments[argCount]+" ";
        }
        var printColor=
            $printColor!=null ? $printColor :
            new Color($Screen._color).l<=0.5 ? "white" : "black";
        var splits=mergedArg.split("\n");
        for(var printCount=0;printCount<splits.length;printCount++){
            $consolePanel.scroll(0,$printSize);
            $consolePanel.setFillStyle(printColor);
            $consolePanel.fillText(splits[printCount],0,$consolePrintY,$printSize,"left","bottom");
        }
    }
}

\loadPage(){// was nowait, why?
    $Boot.loadPage.apply($Boot,arguments);
    update();// I want this!
}
\defaultLayer {
    return $mainLayer;
}
