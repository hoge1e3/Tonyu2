extends null;
includes MathMod,EventMod,TextRectMod,OneframeSpriteMod,
ThreadGroupMod,EventHandlerCaller,DialogMod,FileMod,AnimMod,SchedulerMod,
QueryMod,InputMod,LifeCycleMod;
native Tonyu;
native Key;
native console;
native Math;
native FS;
native Array;

\defaultLayer {
    return $mainLayer;
}
\new(x,y,p) {
    if (typeof x=="object") Tonyu.extend(this,x);
    else if (typeof x=="number") {
        this.x=x;
        this.y=y;
        this.p=p;
    }
    _scheduler=_scheduler||$Scheduler;
    if (Tonyu.runMode) _th=$Boot.schedule(this,"main",[]);
    layer=layer||defaultLayer;
    crashScale=1;
    position=new Vec3View(this);
    if (scaleX==null) scaleX=1;
    if (rotation==null) rotation=0;
    //if (this.rotate==null) this.rotate=0;
    if (alpha==null) alpha=255;
    if (zOrder==null) zOrder=0;
    if (age==null) age=0;
    if (anim!=null && typeof anim=="object"){
        animMode=true;
        animFrame=0;
    }else{
        animMode=false;
    }
    if (animFps==null) animFps=1;
}
nowait \extend(obj) {
    return Tonyu.extend(this,obj);
}

nowait \print(pt) {
    $_printCount++; if ($_printCount>$printLimit) throw new Error("printをしすぎています.");
    console.log.apply(console,arguments);
    var mergedArg="";
    if($consolePanel){
        for(var argCount=0;argCount<arguments.length;argCount++){
            mergedArg=mergedArg+arguments[argCount]+" ";
        }
        var splits=mergedArg.split("\n");
        for(var printCount=0;printCount<splits.length;printCount++){
            $consolePanel.scroll(0,20);
            $consolePanel.setFillStyle("white");
            $consolePanel.fillText(splits[printCount],0,$consolePrintY,20,"left");
        }
    }
}

nowait \hide() {
    layer.remove(this);
}
nowait \show(x,y,p) {
    layer.add(this);
    if (x!=null) this.x=x;
    if (y!=null) this.y=y;
    if (p!=null) this.p=p;
}

nowait \detectShape() {
    if (typeof p!="number") {
        p=0;
    }
    p=Math.floor(p);
    pImg=$imageList[p];
    if (!pImg) return;
    width=pImg.width;
    height=pImg.height;
}
nowait \performTransform(ctx) {
    if (x!==x || y!==y || x==null || y==null) {
        //console.log("警告：",getClassInfo().shortName,"で座標の指定に誤りがあります");
    }
    ctx.translate(x,y);
    if(this.rotation!=0){
        ctx.rotate(this.rotation/180*Math.PI);
    }else{
        ctx.rotate(this.rotate/180*Math.PI);
    }
    if(typeof this.scaleY==="undefined") {
        ctx.scale(this.scaleX,this.scaleX);
    }else{
        ctx.scale(this.scaleX,this.scaleY);
    }
    ctx.globalAlpha=(alpha<0?0:alpha>255?255:alpha)/255;
}
nowait \draw(ctx) {
    var drawY;
    if (x==null || y==null || _isInvisible) return;
    if (text!=null) {
        var splitsText=(text+"").split("\n");
        drawY=y;
        if (!size) size=15;
        if (!align) align="center";
        if (!fillStyle) fillStyle="white";
        if (font) ctx.font=size+"px "+font;
        ctx.fillStyle=fillStyle+"";
        ctx.globalAlpha=this.alpha/255;
        height=0;width=0;
        for(var textCount=0;textCount<splitsText.length;textCount++){
            var rect=drawTextRect(ctx, splitsText[textCount], x, drawY, size, align , "fill");
            if(width<rect.w) width=rect.w;
            height+=rect.h;
            drawY+=size;
        }
    } else if (fillStyle!=null) {
        ctx.save();
        performTransform(ctx);
        ctx.fillStyle=fillStyle+"";
        if (radius) {
            ctx.beginPath();
            ctx.arc(0,0,radius,0,2*Math.PI);
            ctx.fill();
        } else {
            ctx.fillRect(-width/2,-height/2,width,height);
        }
        ctx.restore();
    } else {
        detectShape();
        if (pImg) {
            _animation();
            ctx.save();
            performTransform(ctx);
            ctx.drawImage(
            pImg.image, pImg.x, pImg.y, pImg.width, pImg.height,
            -width/2, -height/2, width, height);
            ctx.restore();
        }
    }
}
// from PlainChar
nowait \color(r,g,b) {
    return "rgb("+[r,g,b].join(",")+")";
}
nowait \loadPage(){
    $Boot.loadPage.apply($Boot,arguments);
}

\setVisible(v) {
    _isInvisible=!v;
}
