[[lang]]

*クラス定義

Tonyu2では，1つの[[ファイル>fs]]に1つのクラスを定義します．

-ファイル名は <<クラス名>>.tonyu という形式になります．
-- 例えば，Hello.tonyu という名前のファイルは，Hello という名前のクラスを定義します．
-クラスを定義するための構文（例えば，Javaの[[@cfrag class クラス名 {...  }]]など）はありません．
- ファイルには，次のいずれかを複数記述できます．
--継承宣言
--組み込み宣言
--native宣言
--mainメソッドの処理内容
--非mainメソッドの定義
- 定義された(Tonyu2の)クラスは，Javascriptのいわゆる「クラス」(function+prototypeによるメソッド定義）として機能します．

**継承宣言

このクラスの親クラスを設定します．ファイルの先頭に次のように宣言します

<<code 継承宣言の書式
extends 親クラス名;
>>

-継承宣言を省略すると，[[プロジェクト設定>options]]によって設定されている親クラスを自動的に継承します．
-親クラス名 に [[@cfrag null]]を設定すると，親クラスがないクラスになります．
-継承は，JavaScriptの一般的な継承の方法（このクラスを表す関数オブジェクトのprototypeが，親クラスのオブジェクトになる）で行われます．

**組み込み宣言

このクラスに組み込むクラス（モジュールクラス）を設定します．ファイルの先頭，または継承宣言続いて次のように宣言します

<<code 継承宣言の書式
includes モジュールクラス名[, モジュールクラス名...];
>>

-このクラスでは，組み込んだモジュールクラスがもつメソッドを利用できます．
-組み込みは継承とは異なり，複数のクラスを組み込むことができます
-モジュールクラスの実体は通常のクラスと同じ方法で作成します．
-モジュールクラスが他のモジュールクラスを組み込んでいる場合，組み込んだ先のクラスでもそれらのモジュールクラスのメソッドが組み込まれます．
-モジュールクラスが他のクラスを継承している場合，組み込んだ先のクラスもそのモジュールの親クラスを継承している必要があります．
-組み込みは，モジュールクラスがもつメソッドの一覧を，このクラスの関数オブジェクトのprototypeオブジェクトに追記する方式で行われます．継承とは異なり，[[@cfrag instanceof]]演算子によって検査されるオブジェクトのクラスが，特定のモジュールクラスを組み込んでいるかどうかは判定できません．

**native宣言

native宣言は，Tonyu2のプログラムからJavascriptのネイティブオブジェクトにアクセスするために用います．ファイル中で次のように宣言します．

<<code native宣言の書式
native 変数名;
>>

- 指定された変数名を，このファイル中ではJavascriptのトップレベルスコープ（一般的にはwindowオブジェクト）に定義されている変数の値として扱います．
- 親クラスに書いてあるnative宣言は子クラスには適用されません．必要に応じて子クラスにも同じnative宣言を書く必要があります．

**mainメソッドの処理内容

mainメソッドは，mainという名前をもつメソッドです．[[Actor]]クラスなどでは，オブジェクトが出現してから停止するまでの動作を記述するのに用いられます．

ファイルのトップレベル（メソッド定義に囲まれていない部分）に書かれた文はmainメソッドの内容として定義されます．

mainメソッドは引数を受け取ることはできません．

**非mainメソッドの定義

名前がmainでないメソッドは非mainメソッドです．

ファイルのトップレベルにおいて次の形式で定義します．

<<code メソッド定義 methodef
function メソッド名(引数リスト) {
   処理内容
}
>>
※function の代わりに \ が使用可能です（[[拡張構文>sugar]]参照)

*変数の種類

-引数
--１つのメソッドに渡される値です．メソッド宣言の引数リストに記述されます．１回のメソッド呼び出しが終わると破棄されます．
-ローカル変数
--メソッド宣言の処理中でvar で宣言されます．１回のメソッド呼び出しが終わると破棄されます．
-グローバル変数
--名前が$で始まる変数はグローバル変数です．すべてのTonyu2オブジェクトから直接参照できます．
--Javascriptからは[[@cfrag Tonyu.globals.グローバル変数名]]で参照できます．
-クラス変数
--現在のプロジェクトおよび[[標準ライブラリ>api]]で定義されているクラス名と同じ名前の変数はクラス変数です．そのクラスをあらわす関数オブジェクトを参照します．
--Javascriptからは[[@cfrag Tonyu.classes.クラス変数名]]で参照できます．
-native変数
--native宣言によって宣言された名前の変数です．Javascriptのトップレベルスコープにおける同名の変数を参照します．
-フィールド
--そのクラスのオブジェクトがもつ値です．上のどれにもあてはまらない変数はフィールドとして解釈されます．
--Javascriptではいわゆる[[@cfrag this.x]]という形式で参照されるものです．Tonyu2でもこの方式でも参照できます．

*例

<<code MyClass.tonyu example
extends Actor;
native alert;
// main関数
x=3;
rate=5;
y=mult(x);
alert(y); // 15
// main関数終わり
\mult(a) {
  var res=a*rate;
  return res;
}
>>

-クラス名はMyClass
-親クラスはActor
-Javascriptの [[@cfrag alert]] 関数を利用する
-[[@cfrag x,rate,y]] はフィールド
-multメソッドを定義
-- [[@cfrag a]]は引数，[[@cfrag res]]はローカル変数，[[@cfrag rate]]はフィールド