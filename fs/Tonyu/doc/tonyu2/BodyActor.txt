[[api]]

*BodyActor

物理演算を行なうオブジェクトはこのクラスを継承してください。

**親クラス

[[Actor]]

**コンストラクタ

<<code
\new(params)
>>

paramsにはオブジェクトを指定します．paramsの値をフィールドに書き込みます

**フィールド

-[[Actor]]のフィールドに指定できるものは同様に指定できます
--xとyについては、代入による座標の変更は可能ですが、初期位置を決める以外には推奨されません（衝突が正しく行われないなどの問題が発生します）。[[applyForce]]、[[applyImpulse]]、およびvxとvyを使ってください

以下のフィールドは、オブジェクト作成時にパラメータを渡して初期化するか、mainメソッドの最初のupdateが行われる前に初期化する必要があります。
-density
--物体の密度（重さ/大きさ）
-friction
--物体の摩擦係数
-restitution
--物体の反発係数
-shape
--物体の衝突判定を円にするには[[@cfrag "circle"]]を、長方形にするには[[@cfrag "box"]]を指定します。
-width、height
--物体の衝突判定の幅と高さ（ピクセル数）を指定します。
--これらが指定されていると自動的に衝突判定の形状は長方形になります
-radius
--物体の衝突判定の半径（ピクセル数）を指定します。
--これが指定されていると自動的に衝突判定の形状は円になります
-vx,vy
--横方向、縦方向の速度（1フレームあたり・ピクセル数）を指定します
--代入することで速度を変更できます
-vrotation
--1フレームあたりの回転速度を表します
--代入することで回転速度を変更できます
-manualRotation
--これを[[@cfrag true]]に設定すると、物体が回転してもオブジェクトの見かけは回転しなくなります。例えば、キャラクタを物理運動させつつも、見かけ上は常に直立しているように見せることができます。
※ width,height,radiusがいずれも指定されていない場合、フィールドpの値によって指定される画像の大きさ、およびscaleX,scaleYにより物体の衝突判定を決定します。


**メソッド

-[[applyForce]]
-[[applyImpulse]]
-[[applyTorque]]
-[[contactTo]]
-[[allContacts]]
-[[contactPoint]]
-[[allContactPoints]]
-[[addRevoluteJoint]]
-[[initBody]]
.
