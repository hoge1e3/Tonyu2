[[用途別リファレンス]]

*Error: ～～～(=undefined)は初期化されていませんについて

このようなエラーメッセージがでた場合に起きてるかもしれないこと

<<code Main

//aにx=100,y=100,s=100の値を代入
a=new Chara{x:100,y:100,s:100};

//aの中に入っているsの値を画面に表示
print(a.s);


>>

<<code Chara
中身は何も書かなくていいが、Charaのファイルは作る
>>


Mainに書いたプログラムは、aという変数にCharaクラスのオブジェクトを代入し、その代入したaの中に入っているsの値を画面に表示させるというもの

基本的にプログラムは上から順番に実行されていく、
なのでMainのようなプログラムはエラーを起こさないが、
このMainが次のような場合はエラーが起き、「Error: a(=undefined)は初期化されていません」と表示される

<<code Main（エラー）

//aのsに入っている値を画面に表示
print(a.s);

//aにx=100,y=100,s=100の値を代入
a=new Chara{x:100,y:100,s:100};


>>

しかし次の場合は、画面にundefinedと出力される

<<code Main（エラー起きない）

//aに入っている値を画面に表示
print(a);

//aにx=100,y=100,s=100の値を代入
a=new Chara{x:100,y:100,s:100};


>>



この二つから、値が入ってない変数（ここではa）にはundefinedという値が入っていて、これそのものは表示できるが、a.sという変数を表示しようとするとエラーが起きるのがわかる。だが、次のようにすると画面にundefinedと出力される

<<code Main（エラー起きない2）

//aに値を代入
a=1;

//aに入っている値を画面に表示
print(a.s);


//aにx=100,y=100,s=100の値を代入
a=new Chara{x:100,y:100,s:100};


>>

つまりundefinedが入ってる変数の中にある変数を呼び出そうとするとエラーが起きるのがわかる。

このようなエラーが起きた場合、エラーメッセージで書かれている初期化されていない変数が、エラーが起きた場所・時より前に宣言されているのかを確認すれば、エラーの原因が見つかる可能性がある

