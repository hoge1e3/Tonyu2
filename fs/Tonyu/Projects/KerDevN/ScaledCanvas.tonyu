native $;

// canvas:phisical  buf: logical
\new (opt) {
    extend(opt);
    // canvas/ width,height
    resize(width, height);
    cw=canvas.width();
    ch=canvas.height();
    cctx=canvas[0].getContext("2d");
    this.color="rgb(20,80,180)";
}
\resize(width,height) {
    this.width=width;
    this.height=height;
    buf=$("<canvas>").attr{width,height};
    ctx=buf[0].getContext("2d");  
}
\draw() {
    cw=canvas.width();
    ch=canvas.height();
    var calcw=ch/height*width; // calch=ch
    var calch=cw/width*height; // calcw=cw
    if (calch>ch) calch=ch;
    if (calcw>cw) calcw=cw;
    cctx.clearRect(0,0,cw,ch);
    cctx.drawImage(buf[0],
    0,0,width, height, 
    0,0,calcw, calch );
}
\canvas2buf(point) {
    var calcw=ch/height*width; // calch=ch
    var calch=cw/width*height; // calcw=cw
    if (calch>ch) calch=ch;
    if (calcw>cw) calcw=cw;
    return {x: point.x/calcw*width, y: point.y/calch*height};
}
\setBGColor(color){
    this.color=color;
}