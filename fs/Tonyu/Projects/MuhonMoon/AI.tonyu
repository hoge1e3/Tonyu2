\onAppear () {
    queue=[];
    rect();
    setTarget();
    player.on("arriveTarget") \{
        if (hasManualPath) {
            queue.shift();
            if (!hasManualPath) queue=[];
        } else {
            queue.shift();
        }
        if (queue.length==0) rect();
        setTarget();
    };
}
while (true) {
    if (!hasManualPath) {
        if (player.speed>2) {
            s=findSeed();
            if (s) {queue=[]; rect(s);setTarget();}
        }
    }
    update();
}
/*\fixTarget(x,y) {
    queue=[{x,y,fixed:true}];
    setTarget();
}*/
\clearPath() {
    queue=[];
}
\addManualPath(x,y) {
    if (!hasManualPath) queue=[];
    var cand=[];
    for (var ox=-1; ox<=1 ; ox++) {
        for (var oy=-1; oy<=1 ; oy++) {
            var d=pathAddable(x+ox,y+oy);
            if (d) {
                var score=10-d;
                var s=$seed.get(x+ox,y+oy);
                if (s) {
                    if (s.active) score+=5;
                    else score-=5;
                }
                cand.push{x:x+ox,y:y+oy,score,manual:true};
            }    
        }
    }
    cand=cand.sort \(a,b) {
        return b.score-a.score;
    };
    if (cand.length>0) {
        queue.push(cand[0]);
    }
}
\pathAddable(x,y) {
    if (x<=0 || y<=0 || x>=$m.col-1 || y>=$m.row-1) return false;
    for (var q in queue) {
        if (q.x==x && q.y==y) return false;
    }
    if (queue.length>0) {
        var p=queue[queue.length-1];
        if (queue.length>1) {
            var pp=queue[queue.length-2];
            if ( (p.x-pp.x)*(x-p.x)<0 || (p.y-pp.y)*(y-p.y)<0) return false;
        }
        return abs(p.x-x)+abs(p.y-y);
    }
    return 1;    
}
\hasManualPath {
    return    queue.length>0 && queue[0].manual;
}
\setTarget() {
    //player.tx=queue[0].x;
    //player.ty=queue[0].y;
}
\rect(seed) {
    var sx,sy,dx,dy,t,w,h,x=player.x,y=player.y;
    if (seed) {
        sx=seed.x;sy=seed.y;
    } else {
        sx=x;sy=y;
    }
    for (var i=0 ; i<10 ;i++) {
        dx=rnd($m.col-2)+1;
        dy=rnd($m.row-2)+1;
        w=abs(sx-dx);h=abs(sy-dy);
        if (w>2 && w<15 && h>2 && h<15 && $m.get(dx,dy)!=player.c) break;
    }
    //if (abs(player.x-sx)>abs(player.x-dx) ) {t=sx;sx=dx;dx=t;}
    //if (abs(player.y-sy)>abs(player.y-dy) ) {t=sy;sy=dy;dy=t;}
    queue.push{x:sx,y:sy};
    queue.push{x:sx,y:dy};
    queue.push{x:dx,y:dy};
    queue.push{x:dx,y:sy};
    queue.push{x:sx,y:sy};
}
\draw(c) {
    if (!hasManualPath) return;
    c.beginPath();
    c.strokeStyle="white";
    c.moveTo(player.x*16+8,player.y*16+8);
    for (var i,q in queue) {
        c.lineTo(q.x*16+8,q.y*16+8);
    }
    c.stroke();
}
\findSeed() {
    return all(Seed).find\(s){
        return s.active && dist(player.x-s.x,player.y-s.y)<7;
    }[0];
}