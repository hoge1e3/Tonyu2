extends SpriteChar;

$score=0;  //得点の初期化
$Left=3;   // 残り機数
vx=0;      // 横方向の移動量
$map.setBGColor($clBlack);

$mplayer.play($se_bgm);
// ↓ゲームオーバーになるまでこのループをくりかえす
while ($Left>=0) {
    $mplayer.play($se_rocket);
    // ↓スペースキーをおすまで、ロケットが往復する
    while (getkey(32)==0) {
        drawText(153,173,"Push Space key"+all(T1Text).length+" - "+$currentThreadGroup.threads.length,color(30,150,220),20);
        $Jiki.y=-50; // 自機を隠す
        // 真中より右にいる場合は左に加速、左にいる場合は右
        if (x>$screenWidth/2) vx=vx-1;
        else vx=vx+1;
        x=x+vx;
        update();
        f=(vx<0);
    }
    // ↓自機をロケットの場所に出現させる
    $Jiki.x=x;
    $Jiki.y=y; 
    $mplayer.play($se_go);
    // ↓自機が画面下端につくまで待機
    while ($Jiki.y<$screenHeight) {update();}
    if ($Jiki.dying) {
        // 自機が死んでいたら残りを減らす。
        $Left=$Left-1;
        // 自機が死んだフラグをリセット 
        $Jiki.dying=0;
    } else {
        // 自機が死んでなければ着地成功
        // 新しい敵を１匹ふやす
        appear(new Teki ($Jiki.x,rnd($screenHeight-100)+100,$pat_ufo+3,0));
        // 得点を表示するオブジェクトを作成
        nto=new TTok($Jiki.x,$Jiki.y,0,0);
        // 得点は、真中に近いほど高得点
        nto.sc=$screenWidth/2-abs($Jiki.x-$screenWidth/2)+50;
        // 得点を表示するオブジェクトを出現
        appear(nto);
    }
}

// ゲームオーバー
while(1) {
    y=y+10;  // ロケットが落下していく
    drawText(221,166,"Game Over",rnd()*65536,20);
    drawText(221,190,"Replay F9 ",rnd()*65536,20);
    update();
}

