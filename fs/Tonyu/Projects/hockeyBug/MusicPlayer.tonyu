// MusicPlayer //


// 定数 //
SOUND_OBJ_ARY_SIZE = 20; // SEオブジェクトの数
SOUND_PART_OBJ_ARY_SIZE = 3; // SEパートオブジェクトの数


// 初期化 //
soundObjAryCnt = 0;
soundObjAry = [];
for (var i=0; i<SOUND_OBJ_ARY_SIZE; i++) {
    soundObjAry[i] = new MusicPlayerOneSound;
}
soundPartObjAry = [];
for (var i=0; i<SOUND_PART_OBJ_ARY_SIZE; i++) {
    soundPartObjAry[i] = new MusicPlayerOneSound;
}
bgmObj = null;


// ループ //
while (true) {
    update();
}


// BGM鳴らす //
nowait \playBGM(bgmName) {
    stopBGM();
    bgmObj = new MusicPlayerOneMusic;
    bgmObj.playBGM(bgmName);
}
// BGM停止
nowait \stopBGM() {
    if (bgmObj) {
        bgmObj.die();
        bgmObj = null;
    }
}

// SE鳴らす //
nowait \playSE(seName, priority) {
    if (priority == null) priority = 0;
    return playSEPush(seName, priority);
}

// SEパートで鳴らす //
nowait \playPartSE(sePart, seName, priority) {
    if (priority == null) priority = 0;
    return playSEPartPush(sePart, seName, priority);
}


// SE鳴らすオブジェクトを選んで鳴らす //
nowait \playSEPush(seName, priority) { // (サウンド番号，優先度(数値多いと優先))
    var retryCnt = 0, seObj;
    while (true) { // SEオブジェクト探索ループ
        seObj = soundObjAry[(soundObjAryCnt + retryCnt) % SOUND_OBJ_ARY_SIZE];
        if (seObj.isSoundPlaying()) { // SE鳴らしている最中
            if (retryCnt < SOUND_OBJ_ARY_SIZE) { // 鳴らせるものがないか探す
                retryCnt ++;
            } else { // 全部ならせないなら強制的に鳴らす
                for (var i=0; i<=SOUND_OBJ_ARY_SIZE; i++) { // 優先度の低いものを探して見る
                    if (i < SOUND_OBJ_ARY_SIZE) {
                        seObj = soundObjAry[(soundObjAryCnt + i) % SOUND_OBJ_ARY_SIZE];
                        if (priority >= seObj.getPriority()) {
                            break;
                        }
                    } else {
                        seObj = null; // 鳴らせるものがなかったのでSE鳴らさない
                    }
                }
                break;
            }
        } else { // 鳴らしてないの見つかったらSE鳴らす
            break;
        }
    }
    if (seObj != null) {
        seObj.playSound(seName, priority); // SE鳴らす
        soundObjAryCnt ++;
        if (soundObjAryCnt >= soundObjArySize) soundObjAryCnt = 0;
        return seObj;
    }
}


// SEパート鳴らすオブジェクトを選んで鳴らす //
nowait \playSEPartPush(sePart, seName, priority) { // (サウンド番号，優先度(数値多いと優先))
    var seObj;
    
    seObj = soundPartObjAry[sePart];
    if (seObj.isSoundPlaying()) { // SE鳴らしている最中
        if (priority < seObj.getPriority()) { // 自分の優先度が低くて鳴らせない
            seObj = null; // 鳴らせるものがなかったのでSE鳴らさない
        }
    }
    if (seObj != null) {
        seObj.playSound(seName, priority); // SE鳴らす
        return seObj;
    } else {
        return null;
    }
}
