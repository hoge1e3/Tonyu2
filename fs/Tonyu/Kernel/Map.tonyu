native Math;
native $;
\new (param){
    sx=0;
    sy=0;
    super(param);
    buf=$("<canvas>").attr{width:col*chipWidth,height:row*chipHeight};
    mapTable = [];
    mapOnTable = [];
    for(var j=0;j<row;j++){
        rows = [];
        for(var i=0;i<col;i++){
            rows.push(-1);
        }
        mapTable.push(rows);
    }
    for(var j=0;j<row;j++){
        rows = [];
        for(var i=0;i<col;i++){
            rows.push(-1);
        }
        mapOnTable.push(rows);
    }
    /*for(var i=0;i<col;i++){
        mapTable[i]=[];
    }*/
    initMap();
}
\initMap(){
    if(!mapData) return;
    for(var i=0;i<row;i++){
        for(var j=0;j<col;j++){
            set(j,i,mapData[i][j]);
        }
    }
    if(!mapOnData) return;
    for(var i=0;i<row;i++){
        for(var j=0;j<col;j++){
            setOn(j,i,mapOnData[i][j]);
        }
    }
}
\load(dataFile){
    baseData=file(dataFile).obj();
    mapTable=baseData[0];
    mapData=mapTable;
    row=mapTable.length;
    col=mapTable[0].length;
    mapOnTable=baseData[1];
    mapOnData=mapOnTable;
    buf=$("<canvas>").attr{width:col*chipWidth,height:row*chipHeight};
    initMap();
}
\set(setCol,setRow,p){
    if(setCol>=col || setRow>=row || setCol<0 || setRow<0) return;
    mapTable[setRow][setCol]=p;
    //mapOnTable[setRow][setCol]=-1;
    ctx=buf[0].getContext("2d");
    p=Math.floor(p);
    pImg=$Sprites.getImageList()[p];
    if (!pImg) {
        ctx.clearRect(setCol*chipWidth,setRow*chipHeight,chipWidth,chipHeight);
        return;
    }
    ctx.clearRect(setCol*chipWidth,setRow*chipHeight,chipWidth,chipHeight);
    ctx.save();
    ctx.drawImage(
    pImg.image, pImg.x, pImg.y, pImg.width, pImg.height,
    setCol*chipWidth, setRow*chipHeight, chipWidth, chipHeight);
    ctx.restore();
}
\setOn(setCol,setRow,p){
    if(setCol>=col || setRow>=row || setCol<0 || setRow<0) return;
    mapOnTable[setRow][setCol]=p;
    ctx=buf[0].getContext("2d");
    p=Math.floor(p);
    pImg=$Sprites.getImageList()[p];
    if (!pImg) return;
    ctx.save();
    ctx.drawImage(
    pImg.image, pImg.x, pImg.y, pImg.width, pImg.height,
    setCol*chipWidth, setRow*chipHeight, chipWidth, chipHeight);
    ctx.restore();
}
\setOnAt(setX,setY,p){
    setOn(Math.floor(setX/chipWidth),Math.floor(setY/chipHeight),p);
}
\setAt(setX,setY,p){
    set(Math.floor(setX/chipWidth),Math.floor(setY/chipHeight),p);
}
\get(getCol,getRow){
    if(getCol>=col || getRow>=row || getCol<0 || getRow<0) return;
    return mapTable[getRow][getCol];
}
\getAt(getX,getY){
    return get(Math.floor(getX/chipWidth),Math.floor(getY/chipHeight));
}
\scrollTo(scrollX,scrollY){
    sx=scrollX;
    sy=scrollY;
}
\draw(ctx) {
    pImg=buf[0];
    ctx.save();
    ctx.drawImage(
    pImg, 0, 0,col*chipWidth, row*chipHeight,
    sx, sy, col*chipWidth, row*chipHeight);
    ctx.restore();
    /*for(var i=0;i<row;i++){
        for(var j=0;j<col;j++){
            p=Math.floor(get(j,i));
            pImg=$Sprites.getImageList()[p];
            if (!pImg) return;
            ctx.save();
            ctx.drawImage(
            pImg.image, pImg.x, pImg.y, pImg.width, pImg.height,
            j*chipWidth, i*chipHeight, chipWidth, chipHeight);
            ctx.restore();
            if($screenWidth<j*chipWidth) break;
        }
        if($screenHeight<i*chipHeight) break;
    }*/
}
