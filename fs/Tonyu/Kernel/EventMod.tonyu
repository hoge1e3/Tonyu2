extends null;
native console;

\initEventMod() {
   if (_eventHandlers) return;
   _eventHandlers={};
   on ("die",releaseEventMod);
}
\releaseEventMod() {
   for (var k,v in _eventHandlers) {
       v.release();
   }
}
\parseArgs(a) {
   var res={type:a[0], args:[]};
   for (var i=1 ; i<a.length ; i++) {
       res.args.push(a[i]);
   }
   return res;   
}
\registerEventHandler(type, obj) {
   // obj:{ attach, fire }
   initEventMod();
   if (typeof type=="function") {
       obj=obj||new type;
       type=obj.getClassInfo().fullName;
   }  else {
       obj=obj || new EventHandler;
   }
   return _eventHandlers[type]=obj;
}
\getEventHandler(type) {
   initEventMod();
   var res=_eventHandlers[type] || registerEventHandler(type);
   return res;
}

\on() {
    var a=parseArgs(arguments);
    var h=getEventHandler(a.type);
    h.addListener.apply(h,a.args);
}

\fireEvent(type, args) {
    getEventHandler(type).fire(args);
}
