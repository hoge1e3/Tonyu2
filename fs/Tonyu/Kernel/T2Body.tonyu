includes T2Mod;
native Box2D;

\getWorld() {
    if ($t2World) return $t2World;
    $t2World=new T2World;
    return $t2World;
}
\onAppear() {
    world=getWorld().world;
    scale=getWorld().scale;
    var b2Vec2 = Box2D.Common.Math.b2Vec2;
    var b2BodyDef = Box2D.Dynamics.b2BodyDef;
    var b2Body = Box2D.Dynamics.b2Body;
    var b2FixtureDef = Box2D.Dynamics.b2FixtureDef;
    var b2Fixture = Box2D.Dynamics.b2Fixture;
    var b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;
    var b2CircleShape = Box2D.Collision.Shapes.b2CircleShape;
    
    var fixDef = new b2FixtureDef;
    fixDef.density = density || 1.0;
    fixDef.friction = friction || 0.5;
    fixDef.restitution = restitution || 0.2;
    
    var bodyDef = new b2BodyDef;
    bodyDef.type = isStatic ? b2Body.b2_staticBody :
    b2Body.b2_dynamicBody;
    
    bodyDef.position.x = x /scale;
    bodyDef.position.y = y /scale;
    shape=shape || (radius ? "circle" : "box");
    var w=width,h=height;
    if (!w) {
        detectShape();
        w=width*(scaleX||1);
        h=height*(scaleY||scaleX||1);
    }
    if (shape=="box") {
        if (!h) h=w;
        fixDef.shape = new b2PolygonShape;
        fixDef.shape.SetAsOrientedBox(w/2/scale, h/2/scale,
        new b2Vec2(0,0),0);
    } else {
        radius=radius || w/2 || 16;
        fixDef.shape = new b2CircleShape(
        radius/scale
        );
        width=height=radius*2;
    } 
    body=world.CreateBody(bodyDef);
    body.CreateFixture(fixDef);
    body.SetUserData(this);
    body.SetAngle(rad(rotation));
}
\allContact(klass) {
    var res=[];
    for (var c=world.GetContactList();c;c=c.GetNext()) {
        if (c.IsTouching()) {
            var a=c.GetFixtureA().GetBody().GetUserData();
            var b=c.GetFixtureB().GetBody().GetUserData();
            if (a===this) {
                if (!klass || b===klass || b instanceof klass) {
                    res.push(b);
                }
            } else if (b===this) {
                if (!klass || a===klass || a instanceof klass) {
                    res.push(a);
                }
            }
        }
    }
    return res;
}
\applyForce(fx,fy,px,py) {
    var b2Vec2 = Box2D.Common.Math.b2Vec2;
    var scale=getWorld().scale;
    var fps=60;
    body.ApplyForce(bvec(fx*fps ,fy*fps),body.GetPosition());
}
\applyImpulse(fx,fy,px,py) {
    var b2Vec2 = Box2D.Common.Math.b2Vec2;
    var scale=getWorld().scale;
    var fps=60;
    body.ApplyImpulse(bvec(fx*fps,fy*fps),body.GetPosition());
}

\applyTorque(a) {
    body.ApplyTorque(a);
}
\moveBy(dx,dy) {
    var pos=body.GetPosition();
    pos.x+=dx/scale;
    pos.y+=dy/scale;
    body.SetPosition(pos);
}
\contactTo(t) {
    return allContact(t)[0];
}
\die() {
    super.die();
    world.DestroyBody(body);
}
\updatePos() {
    if (!body) return;
    var scale=getWorld().scale;
    var pos=body.GetPosition();
    x=pos.x*scale;
    y=pos.y*scale;
    rotation=deg(body.GetAngle());
}