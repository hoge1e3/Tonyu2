native $;
native TError;
native $LASTPOS;
native Key;
native Date;
native ImageList;
native Tonyu;

\initSprites() {
    $Sprites=new Sprites();
    print ("Loading pats..");
    var rs=$currentProject.getResource();
    var a=Tonyu.asyncResult();
    ImageList( rs.images, a.receiver);
    waitFor(a);
    var r=a[0];
    $Sprites.setImageList(r);
    for (var name,val in r.names) {
        Tonyu.setGlobal(name, val);
    }
    print ("Loading pats done.");
    cvj=$("canvas");
    cv=cvj[0];
}
\initCanvasEvents() {
    $handleMouse=\(e) {
        var p=cvj.offset();
        $mouseX=e.clientX-p.left;
        $mouseY=e.clientY-p.top;
    };
    $touches=[{},{},{},{}];
    $handleTouch=\(e) {
        var p=cvj.offset();
        e.preventDefault();
        var ts=e.originalEvent.touches;
        $mouseX=ts[0].pageX-p.left;
        $mouseY=ts[0].pageY-p.top;
        for (var i =0 ; i<$touches.length ; i++) {
            $touches[i].touched=false;
        }
        for (var i =0 ; i<ts.length ; i++) {
            var src=ts[i];
            var dst=$touches[src.identifier];
            if (dst) {
                dst.x=src.pageX-p.left;
                dst.y=src.pageY-p.top;
                dst.touched=true;
            }
        }
    };
    $handleTouchEnd=\(e) {
        var ts=e.originalEvent.changedTouches;
        for (var i =0 ; i<ts.length ; i++) {
            var src=ts[i];
            var dst=$touches[src.identifier];
            if (dst) {
                dst.touched=false;
            }
        }
    };
    var handleMouse=\(e){$handleMouse(e);};
    var handleTouch=\(e){$handleTouch(e);};
    var handleTouchEnd=\(e){$handleTouchEnd(e);};
    var d=$.data(cv,"events");
    if (!d) {
        $.data(cv,"events","true");
        cvj.mousedown(handleMouse);
        cvj.mousemove(handleMouse);
        cvj.on("touchstart",handleTouch);
        cvj.on("touchmove",handleTouch);
        cvj.on("touchend",handleTouchEnd);
    }
}

\initThread() {
    thg=Tonyu.threadGroup();
    var o=Tonyu.currentProject.getOptions();
    var mainClassName=o.run.mainClass;
    print("MainClass= "+mainClassName);
    mainClass=Tonyu.getClass(mainClassName);
    if (!mainClass) {
        TError( $mainClassName+" というクラスはありません", 
        "不明" ,0).raise();
    }
    Tonyu.runMode=true;
    $currentThreadGroup=thg;
    new mainClass();
}

initSprites();
initCanvasEvents();
initThread();
$screenWidth=cv.width;
$screenHeight=cv.height;
$pat_fruits=30;
while (true) {
    ti=new Date().getTime();
    thg.steps();
    Key.update();
    $screenWidth=cv.width;
    $screenHeight=cv.height;
    $Sprites.draw(cv);
    $Sprites.checkHit();
    wt=33-(new Date().getTime()-ti);
    if (wt<0) wt=0;
    waitFor(Tonyu.timeout(wt));
}
